all s(
    legal(s) -> arboreal(s)
).

%38
all s1 all s2 
        (precedes(s1,s2)
        ->earlier(s1,s2)).

all s1 all s2(
    legal(s1) & earlier(s2,s1) -> legal(s2)
).


%30
all o1 all o2
        (precedes(o1,o2)
        -> legal(o1) & legal(o2)).

%31
all o1 all o2 
        (precedes(o1,o2)
        -> - precedes(o2,o1)).

%32
all o1 all o2 all o3
        (precedes(o1,o2)
        &precedes(o2,o3)
        -> precedes(o1,o3)).

%33
all o1 all o2 all o3
        (precedes(o1,o2)&precedes(o3,o2)
        -> precedes(o1,o3) | precedes(o3,o1) | (o1=o3)).

%34 
all a all s
        (generator(a) & legal(s)
        -> - (exists s1 
                (precedes(s,s1)&precedes(s1, successor(a,s))))).

%35
(all s1 all s2
        (precedes(s1,s2)
        ->
        (exists s3
                (precedesEq(s1,s3)
                & precedes(s3,s2)
                & -(exists s4
                        (precedes(s3,s4)
                        & precedes(s4,s2))))))).

%36
(all s1 all s2
        (precedes(s1,s2)
        ->
        (exists s3
                (precedes(s1,s3)
                & precedesEq(s3,s2)
                & -(exists s4
                        (precedes(s1,s4)
                        & precedes(s4,s3))))))).

%37

all o1 all o2
        (precedes(o1,o2)
        -> exists o3
                (initial(o3) & (legal(o3)|(o3=o1)))).

(all o1 all o2
	(earlier(o1,o2)
	->
	(arboreal(o1)
	& arboreal(o2)))).

(all o1 all o2
	(earlier(o1,o2)
	->
	-earlier(o2,o1))).

(all o1 all o2 all o3
	((earlier(o1,o2)
	& earlier(o2,o3))
	->
	earlier(o1,o3))).

(all o1 all o2 all o3
	((earlier(o1,o2)
	& earlier(o3,o2))
	->
	(earlier(o1,o3) | earlier(o3,o1) | (o3=o1)))).

(all o1
	(arboreal(o1)
	->
	(exists o2
		(earlier(o1,o2))))).

all s1 all s2(
    earlier(s1,s2) -> exists s3(

            initial(s3) & (earlier(s3,s1) | (s3=s1))
        
    )
).

all s1 all s2(
    earlier(s1,s2) & -(s1=s2) -> (
        exists s3(
            earlier(s1,s3) & earlier(s3,s2) & -(s3=s1) 
            & all s4 (
                earlier(s1,s4) & earlier(s4,s3) -> ((s4=s1) | (s4=s3))
            )
        )
    )
).

all s1 all s2(
    earlier(s1,s2) & -(s1=s2) -> (
        exists s3(
            earlier(s1,s3) & earlier(s3,s2) & -(s3=s1) 
            & all s4 (
                earlier(s3,s4) & earlier(s4,s2) -> ((s4=s2) | (s4=s3))
            )
        )
    )
).

(all o1
	(initial(o1)
	<->
	(arboreal(o1)
	& -(exists o2
		(earlier(o2,o1)))))).

%def
all x(
    legal(x) <-> mereo_element(x)
).

all x(
    arboreal(x) <-> poset_element(x)
).

all x all y(
    precedes(x,y) <-> part(x,y)
).

all x all y(
    earlier(x,y) <-> leq(x,y)
).