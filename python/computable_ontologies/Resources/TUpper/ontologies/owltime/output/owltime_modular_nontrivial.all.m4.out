============================== Mace4 =================================
Mace4 (32) version Oct-2007, Oct 2007.
Process 14396 was started by torsten on LAPTOP-UF9R3IH7,
Mon Mar 15 05:08:07 2021
The command was "/cygdrive/c/Users/torsten/macleod/mace4 -v0 -t600 -s60 -n2 -N40 -f C:\Users\torsten\GitHub\colore\ontologies\owltime\conversions\owltime_modular_nontrivial.all.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file C:\Users\torsten\GitHub\colore\ontologies\owltime\conversions\owltime_modular_nontrivial.all.p9


formulas(sos).
(exists var1 Instant(var1)).
(exists var2 -Instant(var2)).
(exists var3 Eventuality(var3)).
(exists var4 -Eventuality(var4)).
(exists var5 exists var6 (timeSpan(var5,var6) & var5 != var6)).
(exists var7 exists var8 (-timeSpan(var7,var8) & var7 != var8)).
(exists var9 ProperInterval(var9)).
(exists var10 -ProperInterval(var10)).
(exists var11 exists var12 exists var13 (timeBetween(var11,var12,var13) & var11 != var12 & var11 != var13 & var12 != var13)).
(exists var14 exists var15 exists var16 (-timeBetween(var14,var15,var16) & var14 != var15 & var14 != var16 & var15 != var16)).
(exists var17 exists var18 (beginsOrIn(var17,var18) & var17 != var18)).
(exists var19 exists var20 (-beginsOrIn(var19,var20) & var19 != var20)).
(exists var21 exists var22 (before(var21,var22) & var21 != var22)).
(exists var23 exists var24 (-before(var23,var24) & var23 != var24)).
(exists var25 exists var26 (atTime(var25,var26) & var25 != var26)).
(exists var27 exists var28 (-atTime(var27,var28) & var27 != var28)).
(exists var29 exists var30 (during(var29,var30) & var29 != var30)).
(exists var31 exists var32 (-during(var31,var32) & var31 != var32)).
(exists var33 TemporalEntity(var33)).
(exists var34 -TemporalEntity(var34)).
(exists var35 exists var36 (intDuring(var35,var36) & var35 != var36)).
(exists var37 exists var38 (-intDuring(var37,var38) & var37 != var38)).
(exists var39 Interval(var39)).
(exists var40 -Interval(var40)).
(exists var41 exists var42 (begins(var41,var42) & var41 != var42)).
(exists var43 exists var44 (-begins(var43,var44) & var43 != var44)).
(exists var45 exists var46 (ends(var45,var46) & var45 != var46)).
(exists var47 exists var48 (-ends(var47,var48) & var47 != var48)).
(exists var49 exists var50 (inside(var49,var50) & var49 != var50)).
(exists var51 exists var52 (-inside(var51,var52) & var51 != var52)).
(all t all e (timeSpan(t,e) & Interval(t) -> during(e,t))).
(all t all e (timeSpan(t,e) & Instant(t) -> atTime(e,t))).
(all t1 all t2 all e (timeSpan(t1,e) & Interval(t1) & atTime(e,t2) -> inside(t2,t1) | begins(t2,t1) | ends(t2,t1))).
(all t all t1 all e (timeSpan(t,e) & Instant(t) & atTime(e,t1) -> t = t1)).
(all e all t (atTime(e,t) -> Instant(t))).
(all e all t (during(e,t) -> Interval(t))).
(all e all t1 all t2 (during(e,t1) & inside(t2,t1) -> atTime(e,t2))).
(all e all t all t1 (during(e,t) & intDuring(t1,t) -> during(e,t1))).
(all t all x (inside(t,x) -> Instant(t) & Interval(x))).
(all t all x (beginsOrIn(t,x) <-> begins(t,x) | inside(t,x))).
(all t all t1 all t2 all x (inside(t,x) & begins(t1,x) & ends(t2,x) & ProperInterval(x) -> before(t1,t) & before(t,t2))).
(all t (Instant(t) -> TemporalEntity(t))).
(all t (Interval(t) -> TemporalEntity(t))).
(all t (TemporalEntity(t) -> Interval(t) | Instant(t))).
(all t all x (begins(t,x) -> Instant(t) & TemporalEntity(x))).
(all t all x (ends(t,x) -> Instant(t) & TemporalEntity(x))).
(all t (Instant(t) <-> begins(t,t))).
(all t (Instant(t) <-> ends(t,t))).
(all x all t1 all t2 (TemporalEntity(x) & begins(t1,x) & begins(t2,x) -> t1 = t2)).
(all x all t1 all t2 (TemporalEntity(x) & ends(t1,x) & ends(t2,x) -> t1 = t2)).
(all x all t1 all t2 (timeBetween(x,t1,t2) -> TemporalEntity(x) & Instant(t1) & Instant(t2))).
(all t1 all t2 (t1 != t2 -> (all x (timeBetween(x,t1,t2) <-> begins(t1,x) & ends(t2,x))))).
(all x all t1 all t2 (Interval(x) & begins(t1,x) & ends(t2,x) -> -before(t2,t1))).
(all x all t1 all t2 (ProperInterval(x) & begins(t1,x) & ends(t2,x) -> before(t1,t2))).
(all t1 all t2 (Instant(t1) & Instant(t2) & before(t1,t2) -> (exists x timeBetween(x,t1,t2)))).
(all x (ProperInterval(x) <-> Interval(x) & (all t1 all t2 (begins(t1,x) & ends(t2,x) -> t1 != t2)))).
(all t1 all t2 (before(t1,t2) -> t1 != t2)).
(all t1 all t2 (before(t1,t2) -> -before(t2,t1))).
(all t1 all t2 all t3 (before(t1,t2) & before(t2,t3) -> before(t1,t3))).
(all e (Eventuality(e) -> -TemporalEntity(e))).
(all e all t (atTime(e,t) -> Eventuality(e))).
(all e all t (during(e,t) -> Eventuality(e))).
(all t all e (timeSpan(t,e) -> Eventuality(e) & TemporalEntity(t))).
(all e all t (atTime(e,t) -> Instant(t))).
(all e all t (during(e,t) -> Interval(t))).
(all e all t1 all t2 (during(e,t1) & inside(t2,t1) -> atTime(e,t2))).
(all e all t all t1 (during(e,t) & intDuring(t1,t) -> during(e,t1))).
(all t all x (inside(t,x) -> Instant(t) & Interval(x))).
(all t all x (beginsOrIn(t,x) <-> begins(t,x) | inside(t,x))).
(all t all t1 all t2 all x (inside(t,x) & begins(t1,x) & ends(t2,x) & ProperInterval(x) -> before(t1,t) & before(t,t2))).
(all t1 all t2 all i (inside(t1,i) & inside(t2,i) -> before(t1,t2) | before(t2,t1) | t1 = t2)).
(all i all t1 all t2 (inside(t1,i) & begins(t2,i) -> before(t2,t1))).
(all i all t1 all t2 (inside(t1,i) & ends(t2,i) -> before(t1,t2))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).

% From the command line: assign(domain_size, 2).

% From the command line: assign(iterate_up_to, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (exists var1 Instant(var1)) # label(non_clause).  [assumption].
2 (exists var2 -Instant(var2)) # label(non_clause).  [assumption].
3 (exists var3 Eventuality(var3)) # label(non_clause).  [assumption].
4 (exists var4 -Eventuality(var4)) # label(non_clause).  [assumption].
5 (exists var5 exists var6 (timeSpan(var5,var6) & var5 != var6)) # label(non_clause).  [assumption].
6 (exists var7 exists var8 (-timeSpan(var7,var8) & var7 != var8)) # label(non_clause).  [assumption].
7 (exists var9 ProperInterval(var9)) # label(non_clause).  [assumption].
8 (exists var10 -ProperInterval(var10)) # label(non_clause).  [assumption].
9 (exists var11 exists var12 exists var13 (timeBetween(var11,var12,var13) & var11 != var12 & var11 != var13 & var12 != var13)) # label(non_clause).  [assumption].
10 (exists var14 exists var15 exists var16 (-timeBetween(var14,var15,var16) & var14 != var15 & var14 != var16 & var15 != var16)) # label(non_clause).  [assumption].
11 (exists var17 exists var18 (beginsOrIn(var17,var18) & var17 != var18)) # label(non_clause).  [assumption].
12 (exists var19 exists var20 (-beginsOrIn(var19,var20) & var19 != var20)) # label(non_clause).  [assumption].
13 (exists var21 exists var22 (before(var21,var22) & var21 != var22)) # label(non_clause).  [assumption].
14 (exists var23 exists var24 (-before(var23,var24) & var23 != var24)) # label(non_clause).  [assumption].
15 (exists var25 exists var26 (atTime(var25,var26) & var25 != var26)) # label(non_clause).  [assumption].
16 (exists var27 exists var28 (-atTime(var27,var28) & var27 != var28)) # label(non_clause).  [assumption].
17 (exists var29 exists var30 (during(var29,var30) & var29 != var30)) # label(non_clause).  [assumption].
18 (exists var31 exists var32 (-during(var31,var32) & var31 != var32)) # label(non_clause).  [assumption].
19 (exists var33 TemporalEntity(var33)) # label(non_clause).  [assumption].
20 (exists var34 -TemporalEntity(var34)) # label(non_clause).  [assumption].
21 (exists var35 exists var36 (intDuring(var35,var36) & var35 != var36)) # label(non_clause).  [assumption].
22 (exists var37 exists var38 (-intDuring(var37,var38) & var37 != var38)) # label(non_clause).  [assumption].
23 (exists var39 Interval(var39)) # label(non_clause).  [assumption].
24 (exists var40 -Interval(var40)) # label(non_clause).  [assumption].
25 (exists var41 exists var42 (begins(var41,var42) & var41 != var42)) # label(non_clause).  [assumption].
26 (exists var43 exists var44 (-begins(var43,var44) & var43 != var44)) # label(non_clause).  [assumption].
27 (exists var45 exists var46 (ends(var45,var46) & var45 != var46)) # label(non_clause).  [assumption].
28 (exists var47 exists var48 (-ends(var47,var48) & var47 != var48)) # label(non_clause).  [assumption].
29 (exists var49 exists var50 (inside(var49,var50) & var49 != var50)) # label(non_clause).  [assumption].
30 (exists var51 exists var52 (-inside(var51,var52) & var51 != var52)) # label(non_clause).  [assumption].
31 (all t all e (timeSpan(t,e) & Interval(t) -> during(e,t))) # label(non_clause).  [assumption].
32 (all t all e (timeSpan(t,e) & Instant(t) -> atTime(e,t))) # label(non_clause).  [assumption].
33 (all t1 all t2 all e (timeSpan(t1,e) & Interval(t1) & atTime(e,t2) -> inside(t2,t1) | begins(t2,t1) | ends(t2,t1))) # label(non_clause).  [assumption].
34 (all t all t1 all e (timeSpan(t,e) & Instant(t) & atTime(e,t1) -> t = t1)) # label(non_clause).  [assumption].
35 (all e all t (atTime(e,t) -> Instant(t))) # label(non_clause).  [assumption].
36 (all e all t (during(e,t) -> Interval(t))) # label(non_clause).  [assumption].
37 (all e all t1 all t2 (during(e,t1) & inside(t2,t1) -> atTime(e,t2))) # label(non_clause).  [assumption].
38 (all e all t all t1 (during(e,t) & intDuring(t1,t) -> during(e,t1))) # label(non_clause).  [assumption].
39 (all t all x (inside(t,x) -> Instant(t) & Interval(x))) # label(non_clause).  [assumption].
40 (all t all x (beginsOrIn(t,x) <-> begins(t,x) | inside(t,x))) # label(non_clause).  [assumption].
41 (all t all t1 all t2 all x (inside(t,x) & begins(t1,x) & ends(t2,x) & ProperInterval(x) -> before(t1,t) & before(t,t2))) # label(non_clause).  [assumption].
42 (all t (Instant(t) -> TemporalEntity(t))) # label(non_clause).  [assumption].
43 (all t (Interval(t) -> TemporalEntity(t))) # label(non_clause).  [assumption].
44 (all t (TemporalEntity(t) -> Interval(t) | Instant(t))) # label(non_clause).  [assumption].
45 (all t all x (begins(t,x) -> Instant(t) & TemporalEntity(x))) # label(non_clause).  [assumption].
46 (all t all x (ends(t,x) -> Instant(t) & TemporalEntity(x))) # label(non_clause).  [assumption].
47 (all t (Instant(t) <-> begins(t,t))) # label(non_clause).  [assumption].
48 (all t (Instant(t) <-> ends(t,t))) # label(non_clause).  [assumption].
49 (all x all t1 all t2 (TemporalEntity(x) & begins(t1,x) & begins(t2,x) -> t1 = t2)) # label(non_clause).  [assumption].
50 (all x all t1 all t2 (TemporalEntity(x) & ends(t1,x) & ends(t2,x) -> t1 = t2)) # label(non_clause).  [assumption].
51 (all x all t1 all t2 (timeBetween(x,t1,t2) -> TemporalEntity(x) & Instant(t1) & Instant(t2))) # label(non_clause).  [assumption].
52 (all t1 all t2 (t1 != t2 -> (all x (timeBetween(x,t1,t2) <-> begins(t1,x) & ends(t2,x))))) # label(non_clause).  [assumption].
53 (all x all t1 all t2 (Interval(x) & begins(t1,x) & ends(t2,x) -> -before(t2,t1))) # label(non_clause).  [assumption].
54 (all x all t1 all t2 (ProperInterval(x) & begins(t1,x) & ends(t2,x) -> before(t1,t2))) # label(non_clause).  [assumption].
55 (all t1 all t2 (Instant(t1) & Instant(t2) & before(t1,t2) -> (exists x timeBetween(x,t1,t2)))) # label(non_clause).  [assumption].
56 (all x (ProperInterval(x) <-> Interval(x) & (all t1 all t2 (begins(t1,x) & ends(t2,x) -> t1 != t2)))) # label(non_clause).  [assumption].
57 (all t1 all t2 (before(t1,t2) -> t1 != t2)) # label(non_clause).  [assumption].
58 (all t1 all t2 (before(t1,t2) -> -before(t2,t1))) # label(non_clause).  [assumption].
59 (all t1 all t2 all t3 (before(t1,t2) & before(t2,t3) -> before(t1,t3))) # label(non_clause).  [assumption].
60 (all e (Eventuality(e) -> -TemporalEntity(e))) # label(non_clause).  [assumption].
61 (all e all t (atTime(e,t) -> Eventuality(e))) # label(non_clause).  [assumption].
62 (all e all t (during(e,t) -> Eventuality(e))) # label(non_clause).  [assumption].
63 (all t all e (timeSpan(t,e) -> Eventuality(e) & TemporalEntity(t))) # label(non_clause).  [assumption].
64 (all e all t (atTime(e,t) -> Instant(t))) # label(non_clause).  [assumption].
65 (all e all t (during(e,t) -> Interval(t))) # label(non_clause).  [assumption].
66 (all e all t1 all t2 (during(e,t1) & inside(t2,t1) -> atTime(e,t2))) # label(non_clause).  [assumption].
67 (all e all t all t1 (during(e,t) & intDuring(t1,t) -> during(e,t1))) # label(non_clause).  [assumption].
68 (all t all x (inside(t,x) -> Instant(t) & Interval(x))) # label(non_clause).  [assumption].
69 (all t all x (beginsOrIn(t,x) <-> begins(t,x) | inside(t,x))) # label(non_clause).  [assumption].
70 (all t all t1 all t2 all x (inside(t,x) & begins(t1,x) & ends(t2,x) & ProperInterval(x) -> before(t1,t) & before(t,t2))) # label(non_clause).  [assumption].
71 (all t1 all t2 all i (inside(t1,i) & inside(t2,i) -> before(t1,t2) | before(t2,t1) | t1 = t2)) # label(non_clause).  [assumption].
72 (all i all t1 all t2 (inside(t1,i) & begins(t2,i) -> before(t2,t1))) # label(non_clause).  [assumption].
73 (all i all t1 all t2 (inside(t1,i) & ends(t2,i) -> before(t1,t2))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
Instant(c1).
-Instant(c2).
Eventuality(c3).
-Eventuality(c4).
timeSpan(c5,c6).
c6 != c5.
-timeSpan(c7,c8).
c8 != c7.
ProperInterval(c9).
-ProperInterval(c10).
timeBetween(c11,c12,c13).
c12 != c11.
c13 != c11.
c13 != c12.
-timeBetween(c14,c15,c16).
c15 != c14.
c16 != c14.
c16 != c15.
beginsOrIn(c17,c18).
c18 != c17.
-beginsOrIn(c19,c20).
c20 != c19.
before(c21,c22).
c22 != c21.
-before(c23,c24).
c24 != c23.
atTime(c25,c26).
c26 != c25.
-atTime(c27,c28).
c28 != c27.
during(c29,c30).
c30 != c29.
-during(c31,c32).
c32 != c31.
TemporalEntity(c33).
-TemporalEntity(c34).
intDuring(c35,c36).
c36 != c35.
-intDuring(c37,c38).
c38 != c37.
Interval(c39).
-Interval(c40).
begins(c41,c42).
c42 != c41.
-begins(c43,c44).
c44 != c43.
ends(c45,c46).
c46 != c45.
-ends(c47,c48).
c48 != c47.
inside(c49,c50).
c50 != c49.
-inside(c51,c52).
c52 != c51.
-timeSpan(x,y) | -Interval(x) | during(y,x).
-timeSpan(x,y) | -Instant(x) | atTime(y,x).
-timeSpan(x,y) | -Interval(x) | -atTime(y,z) | inside(z,x) | begins(z,x) | ends(z,x).
-timeSpan(x,y) | -Instant(x) | -atTime(y,z) | z = x.
-atTime(x,y) | Instant(y).
-during(x,y) | Interval(y).
-during(x,y) | -inside(z,y) | atTime(x,z).
-during(x,y) | -intDuring(z,y) | during(x,z).
-inside(x,y) | Instant(x).
-inside(x,y) | Interval(y).
-beginsOrIn(x,y) | begins(x,y) | inside(x,y).
beginsOrIn(x,y) | -begins(x,y).
beginsOrIn(x,y) | -inside(x,y).
-inside(x,y) | -begins(z,y) | -ends(u,y) | -ProperInterval(y) | before(z,x).
-inside(x,y) | -begins(z,y) | -ends(u,y) | -ProperInterval(y) | before(x,u).
-Instant(x) | TemporalEntity(x).
-Interval(x) | TemporalEntity(x).
-TemporalEntity(x) | Interval(x) | Instant(x).
-begins(x,y) | Instant(x).
-begins(x,y) | TemporalEntity(y).
-ends(x,y) | Instant(x).
-ends(x,y) | TemporalEntity(y).
-Instant(x) | begins(x,x).
Instant(x) | -begins(x,x).
-Instant(x) | ends(x,x).
Instant(x) | -ends(x,x).
-TemporalEntity(x) | -begins(y,x) | -begins(z,x) | z = y.
-TemporalEntity(x) | -ends(y,x) | -ends(z,x) | z = y.
-timeBetween(x,y,z) | TemporalEntity(x).
-timeBetween(x,y,z) | Instant(y).
-timeBetween(x,y,z) | Instant(z).
x = y | -timeBetween(z,y,x) | begins(y,z).
x = y | -timeBetween(z,y,x) | ends(x,z).
x = y | timeBetween(z,y,x) | -begins(y,z) | -ends(x,z).
-Interval(x) | -begins(y,x) | -ends(z,x) | -before(z,y).
-ProperInterval(x) | -begins(y,x) | -ends(z,x) | before(y,z).
-Instant(x) | -Instant(y) | -before(x,y) | timeBetween(f1(x,y),x,y).
-ProperInterval(x) | Interval(x).
-ProperInterval(x) | -begins(y,x) | -ends(z,x) | z != y.
ProperInterval(x) | -Interval(x) | begins(f2(x),x).
ProperInterval(x) | -Interval(x) | ends(f3(x),x).
ProperInterval(x) | -Interval(x) | f3(x) = f2(x).
-before(x,y) | y != x.
-before(x,y) | -before(y,x).
-before(x,y) | -before(y,z) | before(x,z).
-Eventuality(x) | -TemporalEntity(x).
-atTime(x,y) | Eventuality(x).
-during(x,y) | Eventuality(x).
-timeSpan(x,y) | Eventuality(y).
-timeSpan(x,y) | TemporalEntity(x).
-atTime(x,y) | Instant(y).
-during(x,y) | Interval(y).
-during(x,y) | -inside(z,y) | atTime(x,z).
-during(x,y) | -intDuring(z,y) | during(x,z).
-inside(x,y) | Instant(x).
-inside(x,y) | Interval(y).
-beginsOrIn(x,y) | begins(x,y) | inside(x,y).
beginsOrIn(x,y) | -begins(x,y).
beginsOrIn(x,y) | -inside(x,y).
-inside(x,y) | -begins(z,y) | -ends(u,y) | -ProperInterval(y) | before(z,x).
-inside(x,y) | -begins(z,y) | -ends(u,y) | -ProperInterval(y) | before(x,u).
-inside(x,y) | -inside(z,y) | before(x,z) | before(z,x) | z = x.
-inside(x,y) | -begins(z,y) | before(z,x).
-inside(x,y) | -ends(z,y) | before(x,z).
end_of_list.

============================== end of clauses for search =============

% The maximum domain element in the input is 0.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=418, kept=376.
Selections=1, assignments=2, propagations=104, current_models=0.
Rewrite_terms=20, rewrite_bools=846, indexes=12.
Rules_from_neg_clauses=18, cross_offs=18.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.05 seconds).
Ground clauses: seen=1224, kept=1119.
Selections=6912, assignments=20734, propagations=11325, current_models=0.
Rewrite_terms=54826, rewrite_bools=29714, indexes=689.
Rules_from_neg_clauses=9468, cross_offs=19490.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

========================== MACLEOD SUMMARY ===========================
reasoner: C:/Users/torsten/macleod/mace4
status: 
execution finished: Mon Mar 15 05:08:12 2021
total CPU time used: 0
The command was "C:/Users/torsten/macleod/mace4 -v0 -t600 -s60 -n2 -N40 -f C:\Users\torsten\GitHub\colore\ontologies\owltime\conversions\owltime_modular_nontrivial.all.p9"
============================ end of footer ===========================
