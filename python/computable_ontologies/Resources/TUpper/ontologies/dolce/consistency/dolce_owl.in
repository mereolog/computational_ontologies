%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%
%                                     AXIOMS FROM DOLCE  OWL
%
%
% Translated into first-order logic to prove DOLCE SIMPLE entails the OWL axioms (PROVER9).
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%




%PROVER9

formulas(goals).



%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Axioms for classes
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%AB
%(all X (ab(X) -> pt(X))). %proved
%(all X (ab(X) -> (all Y (ov(X,Y) -> ab(Y))))). %proved
%(all X (ab(X) -> (all Y (p(X,Y) -> ab(Y))))). %proved
%(all X (ab(X) -> -(pd(X)))). %proved
%(all X (ab(X) -> -(q(X)))). %proved
%(all X (ab(X) -> -(ed(X)))).%proved

%ACC
%(all X (acc(X) -> ev(X))). %proved
%(all X (acc(X) -> -(ach(X)))). %proved

%ACH
%(all X (ach(X) -> ev(X))). %Proved
%(all X (ach(X) -> -(acc(X)))). %Proved

%APO
%(all X (apo(X) -> pob(X))). %Proved

%AQ
%(all X (aq(X) -> (exists Y (dqt(X,Y) & nped(Y))))). %Proved
%(all X (aq(X) -> q(X))). %Proved
%(all X (aq(X) -> -(pq(X)))). %Proved
%(all X (aq(X) -> -(tq(X)))). %Proved

%AR
%(all X (ar(X) -> r(X))). %Proved
%(all X (ar(X) -> -(pr(X)))). %Proved
%(all X (ar(X) -> -(tr(X)))). %Proved

%AS
%(all X (as(X) -> ed(X))). %Proved
%(all X (as(X) -> -(nped(X)))). %Proved
%(all X (as(X) -> -(ped(X)))). %Proved

%ASO
%(all X (aso(X) -> sob(X))).  %Proved
%(all X (as(X) -> -(naso(X)))). %Proved
%(-(exists X(naso(X) & sc(X)))). %Proved

%AT
%(all X (at(X) -> (ab(X) | pd(X)))). %Proved
%(all X (at(X) -> pt(X))). %Proved
%(all X (at(X) -> -(exists Y (pp(Y,X))))). %Proved

%ED
%(all X (ed(X) -> pt(X))). %Proved
%(all X (ed(X) -> -(pd(X)))). %Proved
%(all X (ed(X) -> -(q(X)))). %Proved
%(all X (ed(X) -> -(ab(X)))). %Proved
%(-(exists X (as(X) & ped(X)))). %Proved
%(-(exists X (as(X) & nped(X)))). %Proved
%(-(exists X (ped(X) & nped(X)))). %Proved


%EV
%(all X (ev(X) -> pd(X))). %Proved
%(all X (ev(X) -> -(stv(X)))). %Proved
%(-(exists X (acc(X) & ach(X)))). %Proved

%F
%(all X (f(X) -> ped(X))).  %Proved
%(all X (f(X) -> -(pob(X)))).  %Proved
%(all X (f(X) -> -(m(X)))).  %Proved

%M
%(all X (m(X) -> ped(X))). %Proved
%(all X (f(X) -> -(m(X)))). %Proved
%(all X (f(X) -> -(pob(X)))). %Proved

%MOB
%(all X (mob(X) -> npob(X))). %Proved

%NAPO
%(all X (napo(X) -> pob(X))).  %Proved

%NASO
%(all X (naso(X) -> sob(X))). %Proved
%(all X (naso(X) -> -(aso(X)))). %Proved

%NPED
%(all X (nped(X) -> ed(X))). %Proved
%(all X (nped(X) -> (exists Y (dqt(Y,X) & aq(Y))))). %Proved
%(all X (nped(X) -> -(ped(X)))). %Proved
%(all X (nped(X) -> -(as(X)))). %Proved

%NPOB
%(all X (npob(X) -> nped(X))). %Proved
%(-(exists X (mob(X) & sob(X)))). %Proved

%PD
%(all X (pd(X) -> pt(X))). %Proved
%(all X (pd(X) -> (all Y (ov(X,Y) -> pd(Y))))). %Proved
%(all X (pd(X) -> (all Y (p(X,Y) -> pd(Y))))). %Proved
%(all X (pd(X) -> (exists Y (dqt(Y,X) & tl(Y))))). %Proved
%(all X (pd(X) -> (all Y (p(Y,X) -> pd(Y))))). %Proved
%(all X (pd(X) -> (all Y (ov(Y,X) -> pd(Y))))). %Proved
%(all X (pd(X) -> -(ed(X)))). %Proved
%(all X (pd(X) -> -(q(X)))). %Proved
%(all X (pd(X) -> -(ab(X)))). %Proved
%(-(exists X (ev(X) & stv(X)))). %Proved

%PED
%(all X (ped(X) -> ed(X))). %Proved
%(all X (ped(X) -> (exists Y (dqt(Y,X) & sl(Y))))). %Proved
%(all X (ped(X) -> - (nped(X)))). %Proved
%(all X (ped(X) -> - (as(X)))). %Proved
%(-(exists X (f(X) & m(X)))). %Proved
%(-(exists X (m(X) & pob(X)))). %Proved
%(-(exists X (f(X) & pob(X)))). %Proved

%POB
%(all X (pob(X) -> ped(X))). %Proved
%(all X (pob(X) -> -(f(X)))). %Proved
%(all X (pob(X) -> -(m(X)))). %Proved
%(-(exists X (apo(X) & napo(X)))). %Proved

%PQ
%(all X (pq(X) -> q(X))). %Proved
%(all X (pq(X) -> (exists Y (dqt(X,Y) & ped(Y))))). %Proved
%(all X (pq(X) -> -(aq(X)))). %Proved
%(all X (pq(X) -> -(tq(X)))). %Proved

%PR
%(all X (pr(X) -> r(X))). %Proved
%(all X (pr(X) -> -(tr(X)))). %Proved
%(all X (pr(X) -> -(ar(X)))). %Proved

%PRO
%(all X (pro(X) -> stv(X))).  %Proved
%(all X (pro(X) -> -(st(X)))). %Proved

%PT

%(all X (pt(X) -> -(reln(X)))). %PROVED

%(-(exists X (ab(X) & ed(X)))). %Proved
%(-(exists X (ed(X) & pd(X)))). %Proved
%(-(exists X (pd(X) & q(X)))). %Proved
%(-(exists X (ab(X) & pd(X)))). %Proved
%(-(exists X (ed(X) & q(X)))). %Proved
%(-(exists X (ab(X) & q(X)))). %Proved

%Q
%(all X (q(X) -> pt(X))). %Proved
%(all X (q(X) -> -(pd(X)))). %Proved
%(all X (q(X) -> -(ab(X)))). %Proved
%(all X (q(X) -> -(ed(X)))). %Proved
%(-(exists X (aq(X) & pq(X)))). %Proved
%(-(exists X (pq(X) & tq(X)))). %Proved
%(-(exists X (aq(X) & tq(X)))). %Proved

%R
%(all X (r(X) -> ab(X))). %Proved
%(-(exists X (ar(X) & pr(X)))). %Proved
%(-(exists X (pr(X) & tr(X)))). %Proved
%(-(exists X (ar(X) & tr(X)))). %Proved

%S
%(all X (s(X) -> pr(X))). %Proved

%SAG
%(all X (sag(X) -> aso(X))). %Proved
%(all X (sag(X) -> -(sc(X)))). %Proved

%SC
%(all X (sc(X) -> aso(X))). %Proved
%(all X (sc(X) -> -(sag(X)))). %Proved

%SL
%(all X (sl(X) -> pq(X))). %Proved

%SOB
%(all X (sob(X) -> npob(X))). %Proved
%(-(exists  X (aso(X) & naso(X)))). %Proved

%ST
%(all X (st(X) -> stv(X))). %Proved
%(all X (st(X) -> -(pro(X)))). %Proved

%STV
%(all X (stv(X) -> pd(X))). %Proved
%(all X (stv(X) -> -(ev(X)))). %Proved
%(-(exists X (pro(X) & st(X)))). %Proved

%T
%(all X (t(X) -> tr(X))). %Proved
%(all X (t(X) <-> (t(X) | (exists Y (ql(X,Y) & tl(Y)))))). %Proved

%TQ
%(all X (tq(X) -> q(X))). %Proved
%(all X (tq(X) -> (exists Y (ql(Y,X) & tr(Y))))). %Proved
%(all X (tq(X) -> (exists Y (dqt(X,Y) & pd(Y))))). %Proved
%(all X (tq(X) -> -(pq(X)))). %Proved
%(all X (tq(X) -> -(aq(X)))). %Proved
%(all X (tr(X) -> r(X))). %Proved
%(all X (tr(X) -> -(pr(X)))). %Proved
%(all X (tr(X) -> -(ar(X)))). %Proved


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Axioms for object properties
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%(all X all Y (atp(X,Y) -> p(X,Y))). %Proved
%(all X all Y (atp(X,Y) -> at(X))). %Proved

%dqt
%(all X exists Y (dqt(X,Y) -> q(X))). %Proved
%(all X all Y (dqt(X,Y) -> (ed(Y) | pd(Y)))). %Proved

%ov
%(all X all Y (ov(X,Y) <-> ov(Y,X))). %Proved
%(all X exists Y (ov(X,Y) -> (ab(X) | pd(X)))). %Proved
%(all X all Y (ov(X,Y) -> (ab(Y) | pd(Y)))). %Proved

%p
%(all X all Y (p(X,Y) -> ov(X,Y))). %Proved
%(all X all Y ((p(X,Y) & p(Y,Z)) -> p(X,Z))). %Proved
%(all X exists Y (p(X,Y) -> (ab(X) | pd(X)))). %Proved
%(all X all Y (p(X,Y) -> (ab(Y) | pd(Y)))). %Proved

%pp
%(all X all Y (pp(X,Y) -> p(X,Y))). %Proved
%(all X all Y ((pp(X,Y) & pp(Y,Z)) -> pp(X,Z))). %Proved

%pre

%(all X exists Y (pre(X,Y) -> (ed(X) | pd(X) | q(X)))). %Proved
%(all X all Y (pre(X,Y) -> t(Y))). %Proved

%ql

%(all X exists Y (ql(X,Y) -> tr(X))). %Proved
%(all X all Y (ql(X,Y) -> tq(Y))). %Proved

%sd

%(all X exists Y (sd(X,Y) -> (exists T (pre(X,T))))). %Proved
%(all X exists Y (sd(X,Y) -> (ed(X) | pd(X) | q(X)))). %Proved
%(all X all Y (sd(X,Y) -> (ed(X) | pd(X) | q(X)))). %Proved
%(all X all Y (sd(X,Y) -> (exists T (pre(Y,T))))). %Proved

%tat
%(all X exists Y (tat(X,Y) -> (ed(X)))). %Proved
%(all X all Y (tat(X,Y) -> (t(Y)))). %Proved


%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
%Axioms from owl that require the definitions of cat, catp, cov, cp, cpp, tp / temporalPart.
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%


%cat
%(all X (cat(X) -> -(exists Y (cpp(Y,X) & pt(X))))). %Proved
%(all X (cat(X) -> ed(X))).  %Proved

%catp
%(all X all Y (catp(X,Y) -> cp(X,Y))). %Proved
%(all Y  exists X (catp(X,Y) -> cat(X))). %Proved
%(all Y exists X (catp(X,Y) -> (exists T (pre(X,T))))). %Proved
%(all X all Y (catp(X,Y) -> (exists T (pre(Y,T))))). %Proved
%(all X all Y (catp(X,Y) -> ed(X))). %Proved

%cov
%(all X all Y (cov(X,Y) <-> cov(Y,X))). %Proved
%(all Y exists X (cov(X,Y) -> ed(Y))). %Proved
%(all Y exists X (cov(X,Y) -> (exists T (pre(X,T))))). %Proved
%(all X all Y (cov(X,Y) -> ed(Y))). %Proved
%(all X all Y (cov(X,Y) -> (exists T (pre(Y,T))))). %Proved

%cp
%(all X all Y (cp(X,Y) -> cov(X,Y))). %Proved
%(all X all Y ((cp(X,Y) & cp(Y,Z)) -> cp(X,Z))). %Proved
%(all X exists Y (cp(X,Y) -> (exists T (pre(X,T))))). %Proved
%(all X all Y (cp(X,Y) -> (ed(Y)))). %Proved
%(all X all Y (cp(X,Y) -> (exists T (pre(Y,T))))). %Proved

%cpp
%(all X all Y (cpp(X,Y) -> cp(X,Y))). %Proved
%(all X all Y ((cpp(X,Y) & cpp(Y,Z)) -> cpp(X,Z))). %Proved
%(all X exists Y (cpp(X,Y) -> (exists T (pre(X,T))))). %Proved
%(all X exists Y (cpp(X,Y) -> (ed(X)))). %Proved
%(all X all Y (cpp(X,Y) -> (exists T (pre(Y,T))))). %Proved
%(all X all Y (cpp(X,Y) -> (ed(Y)))). %Proved

%tp in owl, temporalPart in first-order Dolce Simple .in and clif.

%(all X all Y (temporalPart(X,Y) -> p(X,Y))). %Proved
%(all X exists Y (temporalPart(X,Y) -> pd(X))). %Proved
%(all X all Y (temporalPart(X,Y) -> pd(Y))). %Proved
