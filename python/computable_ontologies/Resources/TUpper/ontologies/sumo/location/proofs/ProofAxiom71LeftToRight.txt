============================== prooftrans ============================
Prover9 (32) version Dec-2007, Dec 2007.
Process 8340 was started by Cleo1 on Cleo1-PC,
Sun Jul 17 00:03:03 2016
The command was "/cygdrive/c/Program Files (x86)/Prover9-Mace4/bin-win32/prover9".
============================== end of head ===========================

============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.23 (+ 0.03) seconds.
% Length of proof is 160.
% Level of proof is 27.
% Maximum clause weight is 14.
% Given clauses 578.

1 (all x all y (part(x,y) -> Object(x) & Object(y))) # label(non_clause).  [assumption].
2 (all x (Object(x) -> part(x,x))) # label(non_clause).  [assumption].
3 (all x all y (part(x,y) & part(y,x) -> x = y)) # label(non_clause).  [assumption].
4 (all x all y all z (part(x,y) & part(y,z) -> part(x,z))) # label(non_clause).  [assumption].
5 (all o2 all o1 (overlapsSpatially(o1,o2) <-> (exists o3 (part(o3,o1) & part(o3,o2))))) # label(non_clause).  [assumption].
18 (all x all y (partlyLocated(x,y) -> Physical(x) & Object(y))) # label(non_clause).  [assumption].
19 (all x all y (Object(x) & partlyLocated(x,y) -> overlapsSpatially(x,y))) # label(non_clause).  [assumption].
20 (all x all y (Object(x) & partlyLocated(x,y) -> (exists s (part(s,x) & exactlyLocated(s,y))))) # label(non_clause).  [assumption].
21 (all x all y (located(x,y) -> partlyLocated(x,y))) # label(non_clause).  [assumption].
23 (all x all y all z (located(x,y) & located(y,z) -> located(x,z))) # label(non_clause).  [assumption].
24 (all x all y (located(x,y) -> (all s (part(s,x) -> located(s,y))))) # label(non_clause).  [assumption].
25 (all x (Physical(x) -> (exists l located(x,l)))) # label(non_clause).  [assumption].
26 (all x all r (exactlyLocated(x,r) -> located(x,r))) # label(non_clause).  [assumption].
27 (all x all r (exactlyLocated(x,r) -> -(exists y (exactlyLocated(y,r) & y != x)))) # label(non_clause).  [assumption].
32 (all x (located(x,x) -> Region(x))) # label(non_clause).  [assumption].
35 (all x all y all z all u (part(x,y) & exactlyLocated(x,z) & exactlyLocated(y,u) -> part(z,u))) # label(non_clause).  [assumption].
37 (all x all y (Object(x) -> (partlyLocated(x,y) <-> (exists s (part(s,x) & exactlyLocated(s,y)))))) # label(non_clause).  [assumption].
38 (all x all y (Object(x) -> (located(x,y) <-> (exists z (part(z,y) & exactlyLocated(x,z)))))) # label(non_clause).  [assumption].
39 (all x all y (L(x,y) <-> Region(y) & exactlyLocated(x,y))) # label(non_clause).  [assumption].
40 (all x all y (P(x,y) <-> part(x,y))) # label(non_clause).  [assumption].
43 (all x all y (WL(x,y) <-> Object(x) & located(x,y))) # label(non_clause).  [assumption].
44 (all x all y (WL(x,y) -> (exists z (P(z,y) & L(x,z))))) # label(non_clause) # label(goal).  [goal].
45 overlapsSpatially(x,y) | -part(z,x) | -part(z,y).  [clausify(5)].
46 -overlapsSpatially(x,y) | part(f1(y,x),x).  [clausify(5)].
47 -overlapsSpatially(x,y) | part(f1(y,x),y).  [clausify(5)].
51 -Object(x) | -partlyLocated(x,y) | overlapsSpatially(x,y).  [clausify(19)].
52 -located(x,y) | partlyLocated(x,y).  [clausify(21)].
53 -partlyLocated(x,y) | Physical(x).  [clausify(18)].
54 -partlyLocated(x,y) | Object(y).  [clausify(18)].
55 -Object(x) | -partlyLocated(x,y) | part(f2(x,y),x).  [clausify(20)].
56 -Object(x) | -partlyLocated(x,y) | exactlyLocated(f2(x,y),y).  [clausify(20)].
58 -Object(x) | -partlyLocated(x,y) | part(f5(x,y),x).  [clausify(37)].
59 -Object(x) | -partlyLocated(x,y) | exactlyLocated(f5(x,y),y).  [clausify(37)].
60 -Object(x) | partlyLocated(x,y) | -part(z,x) | -exactlyLocated(z,y).  [clausify(37)].
63 -Object(x) | -partlyLocated(x,y) | part(f1(y,x),x).  [resolve(51,c,46,a)].
64 -Object(x) | -partlyLocated(x,y) | part(f1(y,x),y).  [resolve(51,c,47,a)].
67 -located(x,y) | Physical(x).  [resolve(52,b,53,a)].
68 -Physical(x) | located(x,f3(x)).  [clausify(25)].
73 -Object(x) | -part(y,x) | -exactlyLocated(y,z) | Physical(x).  [resolve(60,b,53,a)].
75 -located(x,x) | Region(x).  [clausify(32)].
80 L(x,y) | -Region(y) | -exactlyLocated(x,y).  [clausify(39)].
115 -WL(x,y) | Object(x).  [clausify(43)].
116 -WL(x,y) | located(x,y).  [clausify(43)].
117 WL(c1,c2).  [deny(44)].
118 -part(x,y) | Object(x).  [clausify(1)].
120 -Object(x) | part(x,x).  [clausify(2)].
121 -part(x,y) | -part(y,x) | y = x.  [clausify(3)].
122 -part(x,y) | -part(y,z) | part(x,z).  [clausify(4)].
135 -located(x,y) | -located(y,z) | located(x,z).  [clausify(23)].
136 -located(x,y) | -part(z,x) | located(z,y).  [clausify(24)].
137 -exactlyLocated(x,y) | located(x,y).  [clausify(26)].
138 -exactlyLocated(x,y) | -exactlyLocated(z,y) | z = x.  [clausify(27)].
140 -part(x,y) | -exactlyLocated(x,z) | -exactlyLocated(y,u) | part(z,u).  [clausify(35)].
141 -Object(x) | -located(x,y) | part(f6(x,y),y).  [clausify(38)].
142 -Object(x) | -located(x,y) | exactlyLocated(x,f6(x,y)).  [clausify(38)].
146 P(x,y) | -part(x,y).  [clausify(40)].
147 -P(x,c2) | -L(c1,x).  [deny(44)].
148 -part(x,y) | -part(x,z) | part(f1(z,y),y).  [resolve(45,a,46,a)].
149 -part(x,y) | -part(x,z) | part(f1(z,y),z).  [resolve(45,a,47,a)].
154 -located(x,y) | Object(y).  [resolve(52,b,54,a)].
155 -located(x,y) | -Object(x) | part(f2(x,y),x).  [resolve(52,b,55,b)].
156 -located(x,y) | -Object(x) | exactlyLocated(f2(x,y),y).  [resolve(52,b,56,b)].
159 -Object(x) | part(f5(x,y),x) | -located(x,y).  [resolve(58,b,52,b)].
161 -Object(x) | exactlyLocated(f5(x,y),y) | -located(x,y).  [resolve(59,b,52,b)].
172 -Object(x) | part(f1(y,x),x) | -located(x,y).  [resolve(63,b,52,b)].
176 -Object(x) | part(f1(y,x),y) | -located(x,y).  [resolve(64,b,52,b)].
188 -located(x,y) | located(x,f3(x)).  [resolve(67,b,68,a)].
190 -Object(x) | -part(y,x) | -exactlyLocated(y,z) | located(x,f3(x)).  [resolve(73,d,68,a)].
196 L(x,y) | -exactlyLocated(x,y) | -located(y,y).  [resolve(80,b,75,b)].
224 Object(c1).  [resolve(117,a,115,a)].
225 located(c1,c2).  [resolve(117,a,116,a)].
234 part(c1,c1).  [resolve(224,a,120,a)].
235 located(c1,f3(c1)).  [resolve(225,a,188,a)].
237 part(f1(c2,c1),c2).  [resolve(225,a,176,c),unit_del(a,224)].
238 part(f1(c2,c1),c1).  [resolve(225,a,172,c),unit_del(a,224)].
239 exactlyLocated(f5(c1,c2),c2).  [resolve(225,a,161,c),unit_del(a,224)].
240 part(f5(c1,c2),c1).  [resolve(225,a,159,c),unit_del(a,224)].
243 Object(c2).  [resolve(225,a,154,a)].
244 exactlyLocated(c1,f6(c1,c2)).  [resolve(225,a,142,b),unit_del(a,224)].
245 part(f6(c1,c2),c2).  [resolve(225,a,141,b),unit_del(a,224)].
246 -part(x,c1) | located(x,c2).  [resolve(225,a,136,a)].
248 -located(c2,x) | located(c1,x).  [resolve(225,a,135,a)].
289 exactlyLocated(c1,f6(c1,f3(c1))).  [resolve(235,a,142,b),unit_del(a,224)].
310 -part(f1(c2,c1),x) | part(f1(x,c2),x).  [resolve(237,a,149,a)].
312 -part(f1(c2,c1),x) | part(f1(x,c2),c2).  [resolve(237,a,148,a)].
316 -part(c2,x) | part(f1(c2,c1),x).  [resolve(237,a,122,a)].
318 Object(f1(c2,c1)).  [resolve(237,a,118,a)].
340 -part(c1,f1(c2,c1)) | f1(c2,c1) = c1.  [resolve(238,a,121,b)].
358 -part(x,f5(c1,c2)) | -exactlyLocated(x,y) | part(y,c2).  [resolve(239,a,140,c)].
359 -part(f5(c1,c2),x) | -exactlyLocated(x,y) | part(c2,y).  [resolve(239,a,140,b)].
361 -exactlyLocated(x,c2) | f5(c1,c2) = x.  [resolve(239,a,138,b)].
431 -Object(x) | -part(c1,x) | located(x,f3(x)).  [resolve(244,a,190,c)].
452 located(c1,f6(c1,c2)).  [resolve(244,a,137,a)].
468 -part(c2,f6(c1,c2)) | f6(c1,c2) = c2.  [resolve(245,a,121,b)].
488 located(f1(c2,c1),c2).  [resolve(246,a,238,a)].
563 exactlyLocated(c1,f6(c1,f6(c1,c2))).  [resolve(452,a,142,b),unit_del(a,224)].
596 exactlyLocated(f2(f1(c2,c1),c2),c2).  [resolve(488,a,156,a),unit_del(a,318)].
597 part(f2(f1(c2,c1),c2),f1(c2,c1)).  [resolve(488,a,155,a),unit_del(a,318)].
1125 part(f1(c1,c2),c1).  [resolve(310,a,238,a)].
1127 located(f1(c1,c2),c2).  [resolve(1125,a,246,a)].
1138 -part(c1,f1(c1,c2)) | f1(c1,c2) = c1.  [resolve(1125,a,121,b)].
1139 Object(f1(c1,c2)).  [resolve(1125,a,118,a)].
1154 exactlyLocated(f2(f1(c1,c2),c2),c2).  [resolve(1127,a,156,a),unit_del(a,1139)].
1155 part(f2(f1(c1,c2),c2),f1(c1,c2)).  [resolve(1127,a,155,a),unit_del(a,1139)].
1189 part(f1(c1,c2),c2).  [resolve(312,a,238,a)].
1195 P(f1(c1,c2),c2).  [resolve(1189,a,146,b)].
1200 -L(c1,f1(c1,c2)).  [resolve(1195,a,147,a)].
1464 -part(x,c1) | -exactlyLocated(x,y) | part(y,f6(c1,f6(c1,c2))).  [resolve(563,a,140,c)].
1465 -part(c1,x) | -exactlyLocated(x,y) | part(f6(c1,f6(c1,c2)),y).  [resolve(563,a,140,b)].
1467 -exactlyLocated(x,f6(c1,f6(c1,c2))) | c1 = x.  [resolve(563,a,138,b)].
1468 located(c1,f6(c1,f6(c1,c2))).  [resolve(563,a,137,a)].
2085 exactlyLocated(c1,f6(c1,f6(c1,f6(c1,c2)))).  [resolve(1468,a,142,b),unit_del(a,224)].
2161 -part(c1,f5(c1,c2)) | part(f6(c1,f3(c1)),c2).  [resolve(358,b,289,a)].
2192 part(c2,f6(c1,f3(c1))).  [resolve(359,b,289,a),unit_del(a,240)].
2195 part(c2,f6(c1,c2)).  [resolve(359,b,244,a),unit_del(a,240)].
2196 f6(c1,c2) = c2.  [back_unit_del(468),unit_del(a,2195)].
2197 exactlyLocated(c1,c2).  [back_rewrite(2085),rewrite([2196(6),2196(5),2196(4)])].
2198 -exactlyLocated(x,c2) | c1 = x.  [back_rewrite(1467),rewrite([2196(4),2196(3)])].
2200 -part(c1,x) | -exactlyLocated(x,y) | part(c2,y).  [back_rewrite(1465),rewrite([2196(7),2196(6)])].
2201 -part(x,c1) | -exactlyLocated(x,y) | part(y,c2).  [back_rewrite(1464),rewrite([2196(7),2196(6)])].
2217 part(f1(c2,c1),f6(c1,f3(c1))).  [resolve(2192,a,316,a)].
2235 -part(f6(c1,f3(c1)),c2) | f6(c1,f3(c1)) = c2.  [resolve(2192,a,121,b),flip(b)].
2236 f5(c1,c2) = c1.  [resolve(361,a,2197,a)].
2237 f2(f1(c1,c2),c2) = c1.  [resolve(361,a,1154,a),rewrite([2236(3)]),flip(a)].
2239 f2(f1(c2,c1),c2) = c1.  [resolve(361,a,596,a),rewrite([2236(3)]),flip(a)].
2249 part(f6(c1,f3(c1)),c2).  [back_rewrite(2161),rewrite([2236(4)]),unit_del(a,234)].
2250 part(c1,f1(c1,c2)).  [back_rewrite(1155),rewrite([2237(5)])].
2251 part(c1,f1(c2,c1)).  [back_rewrite(597),rewrite([2239(5)])].
2253 f6(c1,f3(c1)) = c2.  [back_unit_del(2235),unit_del(a,2249)].
2254 f1(c1,c2) = c1.  [back_unit_del(1138),unit_del(a,2250)].
2255 f1(c2,c1) = c1.  [back_unit_del(340),unit_del(a,2251)].
2257 part(c1,c2).  [back_rewrite(2217),rewrite([2255(3),2253(5)])].
2269 -L(c1,c1).  [back_rewrite(1200),rewrite([2254(4)])].
2270 located(c2,f3(c2)).  [resolve(431,b,2257,a),unit_del(a,243)].
2271 located(c1,f3(c2)).  [resolve(2270,a,248,a)].
2280 exactlyLocated(c2,f6(c2,f3(c2))).  [resolve(2270,a,142,b),unit_del(a,243)].
2281 part(f6(c2,f3(c2)),f3(c2)).  [resolve(2270,a,141,b),unit_del(a,243)].
2298 exactlyLocated(f2(c1,f3(c2)),f3(c2)).  [resolve(2271,a,156,a),unit_del(a,224)].
2299 part(f2(c1,f3(c2)),c1).  [resolve(2271,a,155,a),unit_del(a,224)].
2300 exactlyLocated(c1,f6(c1,f3(c2))).  [resolve(2271,a,142,b),unit_del(a,224)].
2301 part(f6(c1,f3(c2)),f3(c2)).  [resolve(2271,a,141,b),unit_del(a,224)].
2435 located(c2,f6(c2,f3(c2))).  [resolve(2280,a,137,a)].
2560 exactlyLocated(c2,f6(c2,f6(c2,f3(c2)))).  [resolve(2435,a,142,b),unit_del(a,243)].
2859 -part(f3(c2),f6(c2,f3(c2))) | f6(c2,f3(c2)) = f3(c2).  [resolve(2281,a,121,b)].
2955 -part(f3(c2),f6(c1,f3(c2))) | f6(c1,f3(c2)) = f3(c2).  [resolve(2301,a,121,b)].
2956 part(c2,f6(c1,f3(c2))).  [resolve(2200,b,2300,a),unit_del(a,234)].
2959 part(c2,f6(c2,f3(c2))).  [resolve(2200,b,2280,a),unit_del(a,2257)].
2982 -part(f6(c1,f3(c2)),c2) | f6(c1,f3(c2)) = c2.  [resolve(2956,a,121,b),flip(b)].
3012 part(f6(c1,f3(c2)),c2).  [resolve(2201,b,2300,a),unit_del(a,234)].
3013 part(f3(c2),c2).  [resolve(2201,b,2298,a),unit_del(a,2299)].
3015 f6(c1,f3(c2)) = c2.  [back_unit_del(2982),unit_del(a,3012)].
3016 f3(c2) = c2.  [back_rewrite(2955),rewrite([3015(6),3015(8)]),flip(b),unit_del(a,3013)].
3034 part(c2,f6(c2,c2)).  [back_rewrite(2959),rewrite([3016(4)])].
3048 f6(c2,c2) = c2.  [back_rewrite(2859),rewrite([3016(2),3016(4),3016(8),3016(10)]),unit_del(a,3034)].
3102 exactlyLocated(c2,c2).  [back_rewrite(2560),rewrite([3016(5),3048(5),3048(4)])].
3173 c2 = c1.  [resolve(3102,a,2198,a),flip(a)].
3190 located(c1,c1).  [resolve(3102,a,137,a),rewrite([3173(1),3173(2)])].
3239 exactlyLocated(c1,c1).  [back_rewrite(3102),rewrite([3173(1),3173(2)])].
3290 L(x,c1) | -exactlyLocated(x,c1).  [resolve(3190,a,196,c)].
3306 $F.  [resolve(3290,b,3239,a),unit_del(a,2269)].

============================== end of proof ==========================
