/*******************************************************************************
* Copyright (c) University of Toronto and others. All rights reserved.
* The content of this file is licensed under the Creative Commons Attribution-
* ShareAlike 4.0 Unported license. The legal text of this license can be
* found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
*
* Contributors:
* Carmen Chui, Michael Gruninger
*******************************************************************************/

(cl-text http://colore.oor.net/most/most_root.clif

(cl-imports http://colore.oor.net/molecular_graph/definitions/most_elements.clif)
(cl-imports http://colore.oor.net/molecular_graph/definitions/most_bonds.clif)

(cl-comment 'Axiom ID: MR-ax-1')
(cl-comment 'An atom x is in a functional group y.')
(forall (x y)
	(if (inGroup x y)
		(and (atom x)(group y))))

(cl-comment 'Axiom ID: MR-ax-2')
(cl-comment 'Disjointness axiom for atom(x), bond(x), group(x), and molecule(x).')
(forall (x)
	(if (atom x)
		(not (or (bond x)(group x)))))

(cl-comment 'Axiom ID: MR-ax-3')
(cl-comment 'Disjointness axiom for atom(x), bond(x), group(x), and molecule(x).')
(forall (x)
	(if (bond x)
		(not (group x))))

(cl-comment 'Axiom ID: MR-ax-4')
(cl-comment 'For every functional group, there exists an atom that is in the group.')
(forall (x)
	(if (group x)
		(exists (a) (and (atom a)(inGroup a x)))))

(cl-comment 'Axiom ID: MR-ax-5')
(forall (x)
	(if	(atom x)
		(exists (y)
			(inGroup x y))))

(cl-comment 'Axiom ID: MR-ax-6')
(cl-comment 'Group-Bond Relationship: A bond is in a functional group iff both of its atoms are in the functional group.')
(forall (x y)
	(iff	(bondGroup x y)
		(and	(bond x)
			(group y)
			(not (exists (z)
				(and 	(inBond z x)
					(not (inGroup z y))))))))

(cl-comment 'Axiom ID: MR-ax-7')
(cl-comment 'Definition for an end atom in a linear functional group.')
(forall (x y)
	(iff (end x y)
		(and (inGroup x y)
			(forall (b1 b2 w z)
				(if (and (inBond x b1)(inBond z b1)(inBond x b2)(inBond w b2)(inGroup z y)(inGroup w y))
					(= w z))))))

(cl-comment 'Axiom ID: MR-ax-8')
(cl-comment 'A functional group has at most two ends.')
(forall (x y z w)
	(if	(and	(group x)
			(end y x)
			(end z x)
			(end w x))
		(or	(= y z)
			(= y w)
			(= z w))))

(cl-comment 'Axiom ID: MR-ax-9')
(cl-comment 'Definition for a fork atom in a branched functional group: an atom in the same functional group has at least 3 other atoms in bonds.')
(forall (x y)
	(iff (fork x)
		(and (atom x)
			(exists (b1 b2 b3 a1 a2 a3)
				(and (not (= a1 a2))(not (= a2 a3))(not (= a1 a3))
					(not (= b1 b2))(not (= b2 b3))(not (= b1 b3))
					(inBond x b1)(inBond a1 b1)
					(inBond x b2)(inBond a2 b2)
					(inBond x b3)(inBond a3 b3))))))

(cl-comment 'Axiom ID: MR-ax-10')
(cl-comment 'No functional group has a fork.')
(forall (x)
	(if	(group x)
		(not (exists (y)
			(fork y)))))

(cl-comment 'Axiom ID: MR-ax-11')
(cl-comment 'There do not exist two functional groups x and y, and 3 atoms such that those three atoms are in functional groups x and y.')
(cl-comment 'Any two functional groups intersect at AT MOST two atoms.')
(not (exists (x y a b c)
	(and (group x)
			(group y)
			(atom a)
			(atom b)
			(atom c)
			(inGroup a x)(inGroup b x)(inGroup c x)
			(inGroup a y)(inGroup b y)(inGroup c y)
			(not (= x y))
			(not (= a b))
			(not (= b c))
			(not (= a c)))))

(cl-comment 'Axiom ID: MR-ax-12')
(cl-comment 'If there are two distinct functional groups, there exists an atom that is only in one of the groups and not the other.')
(cl-comment 'provable from mr-ax-11, we do not need this')
(forall (x y)
	(if (and (group x)(group y)(not (= x y)))
		(exists (a)
			(and (atom a)(inGroup a x)(not (inGroup a y))))))

(cl-comment 'Axiom: MR-ax-13')
(cl-comment 'An atom in a molecule is in a functional group iff it is not hydrogen.')
(forall (a m)
	(if	(and (atom a)(molecule m)(inMolecule a m))
		(iff (not (hydrogen a))
			(exists (g)
				(and (group g)
					(inGroup a g))))))

(cl-comment 'Axiom: MR-ax-14')
(cl-comment 'If two functional groups intersect at two distinct atoms, then the atoms are in the same bond.')
(forall (g1 g2 a1 a2)
	(if (and (inGroup a1 g1)(inGroup a1 g2)(inGroup a2 g1)(inGroup a2 g2)
			(not (= a1 a2))(not (= g1 g2)))
			(exists (b)
				(and (bondGroup b g1)(bondGroup b g2)
					(inBond a1 b)(inBond a2 b)))))

(cl-comment 'Axiom: MR-ax-15')
(cl-comment 'For all bonds that have the same atoms, the bonds are in the same group.')
(forall (a1 a2 a3 a4 b1 b2 g)
	(if (and (bondGroup b1 g)
			(inBond a1 b1)(inBond a2 b1)(inBond a3 b2)(inBond a4 b2)
			(= a1 a3)(= a2 a4))
		(bondGroup b2 g)))
					
(cl-comment 'Axiom: MR-ax-16')
(cl-comment 'Functional groups cannot be coextensive.')
(cl-comment 'Two groups cannot have the exact same set of atoms.')
(forall (g1 g2 a1 a2 a3 a4)
	(if (and (inGroup a1 g1)(inGroup a2 g2)(not (= g1 g2))(not (= a1 a2)))
		(and (not (inGroup a1 g2))(not (inGroup a2 g1)))))
		

(cl-comment 'most version of planar shadow axiom in tripartite incidence')
(forall (b g)
	(if	(and	(bond b)
			(group g)
			(not (bondGroup b g)))
		(exists (a)
			(and	(atom a)
				(inBond a b)
				(not (inGroup a g))))))
			
(cl-comment 'most version of twin junction in tripartite incidence')
(forall (b g1 g2)
	(if	(and	(group g1)
			(group g2)
			(not (= g1 g2))
			(bond b)
			(bondGroup b g1)
			(bondGroup b g2))
		(exists (a1 a2)
			(and	(btwnAtom a1 g1 g2)
				(btwnAtom a2 g1 g2)
				(not (= a1 a2))))))

(forall (a1 a2 a3 b g1 g2)
	(if	(and	(group g1)
			(group g2)
			(not (= g1 g2))
			(bond b)
			(bondGroup b g1)
			(bondGroup b g2)
			(btwnAtom a1 g1 g2)
			(btwnAtom a2 g1 g2)
			(btwnAtom a3 g1 g2))
		(or	(= a1 a2)
			(= a1 a3)
			(= a2 a3))))
			
(cl-comment 'most version of weak face intersect in tripartite incidence')
(forall (g1 g2 a1 a2)
	(if	(and	(group g1)
			(group g2)
			(point a1)
			(point a2)
			(not (= a1 a2))
			(not (= g1 g2))
			(inGroup a1 g1)
			(inGroup a1 g2)
			(inGroup a2 g1)
			(inGroup a2 g2))
		(exists (b)
			(and	(bond b)
				(bondGroup b g1)
(bondGroup b g2)))))

(cl-comment 'Existence axioms to ensure nontrivial models.
(exists (m) (molecule m))
(exists (b) (bond b))
(exists (x y)
	(and (group x)(group y)(not (= x y))))
			')
			
)