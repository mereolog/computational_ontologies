============================== Mace4 =================================
Mace4 (32) version Oct-2007, Oct 2007.
Process 25900 was started by torsten on LAPTOP-UF9R3IH7,
Thu Feb 25 11:17:58 2021
The command was "/cygdrive/c/Users/torsten/macleod/mace4 -v0 -t600 -s60 -n2 -N40 -f C:\Users\torsten\GitHub\colore\ontologies\multidim_space_codi\conversions\codi_nontrivial.all.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file C:\Users\torsten\GitHub\colore\ontologies\multidim_space_codi\conversions\codi_nontrivial.all.p9


formulas(sos).
(exists var1 exists var2 (PP(var1,var2) & var1 != var2)).
(exists var3 exists var4 (-PP(var3,var4) & var3 != var4)).
(exists var5 S(var5)).
(exists var6 -S(var6)).
(exists var7 exists var8 (SC(var7,var8) & var7 != var8)).
(exists var9 exists var10 (-SC(var9,var10) & var9 != var10)).
(exists var11 exists var12 (Inc(var11,var12) & var11 != var12)).
(exists var13 exists var14 (-Inc(var13,var14) & var13 != var14)).
(exists var15 MinDim(var15)).
(exists var16 -MinDim(var16)).
(exists var17 exists var18 (leq(var17,var18) & var17 != var18)).
(exists var19 exists var20 (-leq(var19,var20) & var19 != var20)).
(exists var21 exists var22 (C(var21,var22) & var21 != var22)).
(exists var23 exists var24 (-C(var23,var24) & var23 != var24)).
(exists var25 Min(var25)).
(exists var26 -Min(var26)).
(exists var27 MaxDim(var27)).
(exists var28 -MaxDim(var28)).
(exists var29 ZEX(var29)).
(exists var30 -ZEX(var30)).
(exists var31 exists var32 (P(var31,var32) & var31 != var32)).
(exists var33 exists var34 (-P(var33,var34) & var33 != var34)).
(exists var35 exists var36 (EqDim(var35,var36) & var35 != var36)).
(exists var37 exists var38 (-EqDim(var37,var38) & var37 != var38)).
(exists var39 exists var40 (Cont(var39,var40) & var39 != var40)).
(exists var41 exists var42 (-Cont(var41,var42) & var41 != var42)).
(exists var43 Max(var43)).
(exists var44 -Max(var44)).
(exists var45 exists var46 (PO(var45,var46) & var45 != var46)).
(exists var47 exists var48 (-PO(var47,var48) & var47 != var48)).
(all x (Max(x) <-> S(x) & -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> S(x) & -ZEX(x) & (all y -PP(y,x)))).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
(all x all y (EqDim(x,y) <-> leq(x,y) & leq(y,x))).
(all x all y (leq(x,y) -> S(x))).
(all x all y (leq(x,y) -> S(y))).
(all x (ZEX(x) -> S(x))).
(all x (S(x) -> leq(x,x))).
(all x all y all z (leq(x,y) & leq(y,z) -> leq(x,z))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & S(y) -> leq(x,y))).
(all x all y (Cont(x,y) -> leq(x,y))).
(exists x MinDim(x)).
(all x (MaxDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) -> leq(y,x))))).
(all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & -ZEX(y) -> leq(x,y))))).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> leq(z,x) & -EqDim(z,x) & leq(z,y) & -EqDim(z,y))))).
(all x all y (Inc(x,y) <-> (exists z (leq(z,x) & -EqDim(z,x) & Cont(z,x) & P(z,y))) | (exists z (leq(z,y) & -EqDim(z,y) & Cont(z,y) & P(z,x))))).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).

% From the command line: assign(domain_size, 2).

% From the command line: assign(iterate_up_to, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (exists var1 exists var2 (PP(var1,var2) & var1 != var2)) # label(non_clause).  [assumption].
2 (exists var3 exists var4 (-PP(var3,var4) & var3 != var4)) # label(non_clause).  [assumption].
3 (exists var5 S(var5)) # label(non_clause).  [assumption].
4 (exists var6 -S(var6)) # label(non_clause).  [assumption].
5 (exists var7 exists var8 (SC(var7,var8) & var7 != var8)) # label(non_clause).  [assumption].
6 (exists var9 exists var10 (-SC(var9,var10) & var9 != var10)) # label(non_clause).  [assumption].
7 (exists var11 exists var12 (Inc(var11,var12) & var11 != var12)) # label(non_clause).  [assumption].
8 (exists var13 exists var14 (-Inc(var13,var14) & var13 != var14)) # label(non_clause).  [assumption].
9 (exists var15 MinDim(var15)) # label(non_clause).  [assumption].
10 (exists var16 -MinDim(var16)) # label(non_clause).  [assumption].
11 (exists var17 exists var18 (leq(var17,var18) & var17 != var18)) # label(non_clause).  [assumption].
12 (exists var19 exists var20 (-leq(var19,var20) & var19 != var20)) # label(non_clause).  [assumption].
13 (exists var21 exists var22 (C(var21,var22) & var21 != var22)) # label(non_clause).  [assumption].
14 (exists var23 exists var24 (-C(var23,var24) & var23 != var24)) # label(non_clause).  [assumption].
15 (exists var25 Min(var25)) # label(non_clause).  [assumption].
16 (exists var26 -Min(var26)) # label(non_clause).  [assumption].
17 (exists var27 MaxDim(var27)) # label(non_clause).  [assumption].
18 (exists var28 -MaxDim(var28)) # label(non_clause).  [assumption].
19 (exists var29 ZEX(var29)) # label(non_clause).  [assumption].
20 (exists var30 -ZEX(var30)) # label(non_clause).  [assumption].
21 (exists var31 exists var32 (P(var31,var32) & var31 != var32)) # label(non_clause).  [assumption].
22 (exists var33 exists var34 (-P(var33,var34) & var33 != var34)) # label(non_clause).  [assumption].
23 (exists var35 exists var36 (EqDim(var35,var36) & var35 != var36)) # label(non_clause).  [assumption].
24 (exists var37 exists var38 (-EqDim(var37,var38) & var37 != var38)) # label(non_clause).  [assumption].
25 (exists var39 exists var40 (Cont(var39,var40) & var39 != var40)) # label(non_clause).  [assumption].
26 (exists var41 exists var42 (-Cont(var41,var42) & var41 != var42)) # label(non_clause).  [assumption].
27 (exists var43 Max(var43)) # label(non_clause).  [assumption].
28 (exists var44 -Max(var44)) # label(non_clause).  [assumption].
29 (exists var45 exists var46 (PO(var45,var46) & var45 != var46)) # label(non_clause).  [assumption].
30 (exists var47 exists var48 (-PO(var47,var48) & var47 != var48)) # label(non_clause).  [assumption].
31 (all x (Max(x) <-> S(x) & -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
32 (all x (Min(x) <-> S(x) & -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
33 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
34 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
35 (all x all y (EqDim(x,y) <-> leq(x,y) & leq(y,x))) # label(non_clause).  [assumption].
36 (all x all y (leq(x,y) -> S(x))) # label(non_clause).  [assumption].
37 (all x all y (leq(x,y) -> S(y))) # label(non_clause).  [assumption].
38 (all x (ZEX(x) -> S(x))) # label(non_clause).  [assumption].
39 (all x (S(x) -> leq(x,x))) # label(non_clause).  [assumption].
40 (all x all y all z (leq(x,y) & leq(y,z) -> leq(x,z))) # label(non_clause).  [assumption].
41 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
42 (all x all y (ZEX(x) & S(y) -> leq(x,y))) # label(non_clause).  [assumption].
43 (all x all y (Cont(x,y) -> leq(x,y))) # label(non_clause).  [assumption].
44 (exists x MinDim(x)) # label(non_clause).  [assumption].
45 (all x (MaxDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) -> leq(y,x))))) # label(non_clause).  [assumption].
46 (all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & -ZEX(y) -> leq(x,y))))) # label(non_clause).  [assumption].
47 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
48 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
49 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
50 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
51 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
52 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> leq(z,x) & -EqDim(z,x) & leq(z,y) & -EqDim(z,y))))) # label(non_clause).  [assumption].
53 (all x all y (Inc(x,y) <-> (exists z (leq(z,x) & -EqDim(z,x) & Cont(z,x) & P(z,y))) | (exists z (leq(z,y) & -EqDim(z,y) & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
54 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
55 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
PP(c1,c2).
c2 != c1.
-PP(c3,c4).
c4 != c3.
S(c5).
-S(c6).
SC(c7,c8).
c8 != c7.
-SC(c9,c10).
c10 != c9.
Inc(c11,c12).
c12 != c11.
-Inc(c13,c14).
c14 != c13.
MinDim(c15).
-MinDim(c16).
leq(c17,c18).
c18 != c17.
-leq(c19,c20).
c20 != c19.
C(c21,c22).
c22 != c21.
-C(c23,c24).
c24 != c23.
Min(c25).
-Min(c26).
MaxDim(c27).
-MaxDim(c28).
ZEX(c29).
-ZEX(c30).
P(c31,c32).
c32 != c31.
-P(c33,c34).
c34 != c33.
EqDim(c35,c36).
c36 != c35.
-EqDim(c37,c38).
c38 != c37.
Cont(c39,c40).
c40 != c39.
-Cont(c41,c42).
c42 != c41.
Max(c43).
-Max(c44).
PO(c45,c46).
c46 != c45.
-PO(c47,c48).
c48 != c47.
-Max(x) | S(x).
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | -S(x) | ZEX(x) | PP(x,f1(x)).
-Min(x) | S(x).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | -S(x) | ZEX(x) | PP(f2(x),x).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-EqDim(x,y) | leq(x,y).
-EqDim(x,y) | leq(y,x).
EqDim(x,y) | -leq(x,y) | -leq(y,x).
-leq(x,y) | S(x).
-leq(x,y) | S(y).
-ZEX(x) | S(x).
-S(x) | leq(x,x).
-leq(x,y) | -leq(y,z) | leq(x,z).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | -S(y) | leq(x,y).
-Cont(x,y) | leq(x,y).
MinDim(c49).
-MaxDim(x) | S(x).
-MaxDim(x) | -ZEX(x).
-MaxDim(x) | -S(y) | leq(y,x).
MaxDim(x) | -S(x) | ZEX(x) | S(f3(x)).
MaxDim(x) | -S(x) | ZEX(x) | -leq(f3(x),x).
-MinDim(x) | S(x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -S(y) | ZEX(y) | leq(x,y).
MinDim(x) | -S(x) | ZEX(x) | S(f4(x)).
MinDim(x) | -S(x) | ZEX(x) | -ZEX(f4(x)).
MinDim(x) | -S(x) | ZEX(x) | -leq(x,f4(x)).
-S(x) | ZEX(x) | Cont(x,x).
S(x) | -Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | S(x).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
-SC(x,y) | Cont(f5(x,y),x).
-SC(x,y) | Cont(f5(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | leq(z,x).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,x).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | leq(z,y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f6(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f6(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -leq(f6(x,y),x) | EqDim(f6(x,y),x) | -leq(f6(x,y),y) | EqDim(f6(x,y),y).
-Inc(x,y) | leq(f7(x,y),x) | leq(f8(x,y),y).
-Inc(x,y) | leq(f7(x,y),x) | -EqDim(f8(x,y),y).
-Inc(x,y) | leq(f7(x,y),x) | Cont(f8(x,y),y).
-Inc(x,y) | leq(f7(x,y),x) | P(f8(x,y),x).
-Inc(x,y) | -EqDim(f7(x,y),x) | leq(f8(x,y),y).
-Inc(x,y) | -EqDim(f7(x,y),x) | -EqDim(f8(x,y),y).
-Inc(x,y) | -EqDim(f7(x,y),x) | Cont(f8(x,y),y).
-Inc(x,y) | -EqDim(f7(x,y),x) | P(f8(x,y),x).
-Inc(x,y) | Cont(f7(x,y),x) | leq(f8(x,y),y).
-Inc(x,y) | Cont(f7(x,y),x) | -EqDim(f8(x,y),y).
-Inc(x,y) | Cont(f7(x,y),x) | Cont(f8(x,y),y).
-Inc(x,y) | Cont(f7(x,y),x) | P(f8(x,y),x).
-Inc(x,y) | P(f7(x,y),y) | leq(f8(x,y),y).
-Inc(x,y) | P(f7(x,y),y) | -EqDim(f8(x,y),y).
-Inc(x,y) | P(f7(x,y),y) | Cont(f8(x,y),y).
-Inc(x,y) | P(f7(x,y),y) | P(f8(x,y),x).
Inc(x,y) | -leq(z,x) | EqDim(z,x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -leq(z,y) | EqDim(z,y) | -Cont(z,y) | -P(z,x).
-PO(x,y) | P(f9(x,y),x).
-PO(x,y) | P(f9(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-C(x,y) | Cont(f10(x,y),x).
-C(x,y) | Cont(f10(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
end_of_list.

============================== end of clauses for search =============

% The maximum domain element in the input is 0.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.06 seconds).
Ground clauses: seen=371, kept=361.
Selections=1, assignments=2, propagations=50, current_models=0.
Rewrite_terms=18, rewrite_bools=152, indexes=6.
Rules_from_neg_clauses=12, cross_offs=12.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.06 seconds).
Ground clauses: seen=859, kept=841.
Selections=3, assignments=7, propagations=174, current_models=0.
Rewrite_terms=24, rewrite_bools=2297, indexes=12.
Rules_from_neg_clauses=12, cross_offs=44.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

========================== MACLEOD SUMMARY ===========================
reasoner: C:/Users/torsten/macleod/mace4
status: 
execution finished: Thu Feb 25 11:18:05 2021
total CPU time used: 0
The command was "C:/Users/torsten/macleod/mace4 -v0 -t600 -s60 -n2 -N40 -f C:\Users\torsten\GitHub\colore\ontologies\multidim_space_codi\conversions\codi_nontrivial.all.p9"
============================ end of footer ===========================
