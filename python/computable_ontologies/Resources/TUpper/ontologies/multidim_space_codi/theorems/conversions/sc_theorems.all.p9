formulas(sos).
(all x all y  (SC(x,y) -> C(x,y))).
(all x all y  (SC(x,y) -> ~\exists z\;[(Cont(z,x) & P(z,y))])).
(all x all y  (SC(x,y) -> ~\exists z\;[(P(z,x) & Cont(z,y))])).
(all x all y  ((C(x,y) & \forall z\;[(~Cont(z,x) | ~Cont(z,y) | (~P(z,x) & ~P(z,y)))]) -> SC(x,y))).
(all x  -(SC(x,x))).
(all x all y  (SC(x,y) -> SC(y,x))).
(all x all y  (SC(x,y) -> \exists z\;[(lt(z,x) & lt(z,y) & Cont(z,x) & Cont(z,y))])).
(all x all y  (SC(x,y) <-> (\exists z\;[(Cont(z,x) & Cont(z,y))] & \forall z\;[((Cont(z,x) & Cont(z,y)) -> (leq(z,x) & ~EqDim(z,x) & leq(z,y) & ~EqDim(z,y)))]))).
(all x all y  (EqDim(x,y) <-> (leq(x,y) & leq(y,x)))).
(all x all y  (leq(x,y) -> S(x))).
(all x all y  (leq(x,y) -> S(y))).
(all x  (ZEX(x) -> S(x))).
(all x  (S(x) -> leq(x,x))).
(all x all y all z  ((leq(x,y) & leq(y,z)) -> leq(x,z))).
(all x all y  ((ZEX(x) & ZEX(y)) -> =(x,y))).
(all x all y  ((ZEX(x) & S(y)) -> leq(x,y))).
(all x all y  (Cont(x,y) -> leq(x,y))).
(exists x  MinDim(x)).
(all x  (MaxDim(x) <-> (S(x) & ~ZEX(x) & \forall y\;[(S(y) -> leq(y,x))]))).
(all x  (MinDim(x) <-> (S(x) & ~ZEX(x) & \forall y\;[((S(y) & ~ZEX(y)) -> leq(x,y))]))).
(all x  ((S(x) & ~ZEX(x)) <-> Cont(x,x))).
(all x all y  ((Cont(x,y) & Cont(y,x)) -> =(x,y))).
(all x all y all z  ((Cont(x,y) & Cont(y,z)) -> Cont(x,z))).
(all x all y  (ZEX(x) -> (S(x) & ~Cont(y,x) & ~Cont(x,y)))).
(all x all y  ((ZEX(x) & ZEX(y)) -> =(x,y))).
(all x all y  (P(x,y) <-> (Cont(x,y) & EqDim(x,y)))).
(all x all y  (C(x,y) <-> \exists z\;[(Cont(z,x) & Cont(z,y))])).
end_of_list.
