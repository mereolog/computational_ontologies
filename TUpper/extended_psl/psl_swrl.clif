/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved.
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger, Megan Katsumi - initial implementation
 *******************************************************************************/
 

(cl-text https://raw.githubusercontent.com/gruninger/colore/master/ontologies/extended_psl/psl_swrl.clif

(cl-imports https://raw.githubusercontent.com/gruninger/colore/master/ontologies/extended_psl/psl_dl.clif)

(forall (s o)
	(if	(and	(Legal s)
				(subactivity_occurrence o s))
		(= o s)))
		
(forall (a1 a2 loc)
	(if	(and	(subactivity a1 a2)
				(occurs_at a1 loc))
		(occurs_at a2 loc)))
		
(forall (s a o)	(if	(and	(root s a)
							(subactivity_occurrence s o)
							(occurrence_of o a))
					(root_occ s o)))
					
(forall (x t1 t2)	(if	(and	(Activity_Occurrence x)
								(begins x t1)
								(ends x t2))
						(beforeEq t1 t2)))

(forall (s1 s2 t1 t2)	(if	(and	(earlier s1 s2)
									(begins s2 t2)
									(ends s1 t1))
							(before t1 t2)))
							
(forall (s o t)	(if	(and	(root_occ s o)
							(begins o t))
					(begins s t)))
					
(forall (a)	(if	(Activity a)
				(subactivity a a)))
				
(forall (x y)	(if	(and	(earlierEq x y)
							(earlierEq y x))
					(= x y)))
					
(forall (o a loc)	(if	(and	(occurrence_of o a)
								(occurs_at a loc))
						(occurred_at o loc)))

(forall (a1 a2)	(if	(and	(subactivity a1 a2)
							(subactivity a2 a1))
					(= a1 a2)))

(forall (x y)	(if	(and	(earlierEq x y)
							(not (= x y)))
					(earlier x y)))
					
(forall (o o1 o2 a)	(if	(and	(next_occ o o1)
								(next_occ o o2)
								(occurrence_of o1 a)
								(occurrence_of o2 a))
						(= o1 o2)))
						
(forall (o s1 s2)	(if	(and	(Legal s2)
								(root_occ s1 o)
								(subactivity_occurrence s2 o)
								(not (= s1 s2)))
						(precedes s1 s2)))
						
(forall (x o1 o2)	(if	(and	(subactivity_occurrence o1 o2)
								(performed_in x o1))
						(performed_in x o2)))
						
(forall (o s a)	(if	(and	(Legal o)
							(next_occ s o)
							(occurrence_of o a))
					(poss a s)))
					
(forall (x t1 t2)	(if	(and	(Object x)
								(begins x t1)
								(ends x t2))
						(beforeEq t1 t2)))
						
(forall (s1 s2)	(if	(and	(Legal s2)
							(earlier s1 s2))
					(precedes s1 s2)))
					
(forall (s a o)	(if	(and	(leaf s a)
							(subactivity_occurrence s o)
							(occurrence_of o a))
					(leaf_occ s o)))
					
(forall (x y)	(if	(and	(cont x y)
							(cont y x))
					(= x y)))
					
(forall (t t1 t2 x)	(if	(and	(before t t2)
								(begins x t1)
								(ends x t2)
								(is_occurring_at x t))
						(before t1 t)))
						
(forall (o1 o2 a)	(if	(and	(next_occ o1 o2)
								(occurrence_of o2 a))
						(Generator a)))
						
(forall (t t1 t2 x)	(if	(and	(before t1 t)
								(begins x t1)
								(ends x t2)
								(exists_at x t))
						(before t t2)))
						
(forall (x y)	(if	(and	(ZEX x)
							(ZEX y))
					(= x y)))
					
(forall (loc1 loc2 a)	(if	(and	(cont loc1 loc2)
									(occurs_at a loc1))
							(occurs_at a loc2)))
							
(forall (t t1 t2 x)		(if	(and	(before t1 t)
									(begins x t1)
									(ends x t2)
									(is_occurring_at x t))
							(before t t2)))
							
(forall (x t t1 t2)	(if	(and	(Object x)
								(before t t2)
								(before t1 t)
								(begins x t1)
								(ends x t2))
						(exists_at x t)))
						
(forall (occ1 occ2 loc)	(if	(and	(subactivity_occurrence occ1 occ2)
									(occurred_at occ1 loc))
							(occurred_at occ2 loc)))
							
(forall (x y)	(if	(and	(lessThanEq x y)
							(lessThanEq y x))
					(eqDim x y)))
					
(forall (t t1 t2 x)	(if	(and	(before t t2)
								(begins x t1)
								(ends x t2)
								(exists_at x t))
						(before t1 t)))
						
(forall (o1 o2 a)	(if	(and	(Initial o1)
								(Initial o2)
								(occurrence_of o1 a)
								(occurrence_of o2 a))
						(= o1 o2)))
						
(forall (x a o)	(if	(and	(performs x a)
							(occurrence_of o a))
					(performed_in x o)))
					
(forall (loc1 loc2 occ)	(if	(and	(cont loc1 loc2)
									(occurred_at occ loc2))
							(occurred_at occ loc2)))
							
(forall (s o)	(if	(and	(leaf_occ s o)
							(ends o t))
					(ends s t)))
					
(forall (a1 a2)	(if	(and	(Primitive a1)
							(subactivity a2 a1))
					(= a1 a2)))
					
(forall (o)	(if	(Activity_Occurrence o)
				(subactivity_occurrence o o)))

(forall (x a1 a2)	(if	(and	(performs x a1)
								(subactivity a1 a2))
						(performs x a2)))
						
(forall (x t t1 t2)	(if	(and	(Activity_Occurrence x)
								(before t t2)
								(before t1 t)
								(begins x t1)
								(ends x t2))
						(is_occurring_at x t)))
						
(forall (s a)	(if	(and	(Legal s)
							(atocc s a))
					(root s a)))
					
(forall (x y)	(if	(and	(cont x y)
							(eqDim x y))
					(p x y)))
						
(forall (a1 a2)	(if	(and	(Atomic a1)
				(subactivity a2 a1))
			(Atomic a2)))
)
