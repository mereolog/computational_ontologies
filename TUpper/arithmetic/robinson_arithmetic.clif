/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved.
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger - initial implementation
 *******************************************************************************/
 
 (cl-text https://raw.githubusercontent.com/gruninger/colore/master/ontologies/arithmetic/robinson_arithmetic.clif

(forall (x)
	(not (= (S x) zero)))

(forall (x y)
	(if	(= (S x) (S y))
		(= x y)))

(forall (y)
	(if	(not (= y zero))
		(exists (x)
			(= y (S x)))))

(forall (x)
	(= x (sum x zero)))

(forall (x y)
	(= (sum x (S y)) (S (sum x y))))

(forall (x)
	(= zero (times x zero)))

(forall (x y)
	(= (times x (S y)) (sum (times x y) x)))

)
