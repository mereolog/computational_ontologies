Hi Geoff, go and have some cold beer while I am trying to solve this very hard problem!
% remaining time: 5999 next slice time: 3
dis-4_5_bd=off:bs=off:ep=RST:fde=none:lcm=predicate:n=on:nicw=on:nwc=2:ptb=off:sio=off:spl=backtracking:ss=included:ssec=off:st=5:updr=off_3 on theorems\conversions\codi_int_theorems_goal12.all
Time limit reached!
------------------------------
Version: Vampire 0.6 (revision 903)
Termination reason: Time limit

Active clauses: 1000
Passive clauses: 4862
Generated clauses: 12778
Final active clauses: 999
Final passive clauses: 3647
Input formulas: 44
Initial clauses: 94

Selected by SInE selection: 44
SInE iterations: 1

Duplicate literals: 58
Fw subsumption resolutions: 170

Simple tautologies: 48
Forward subsumptions: 7827

Binary resolution: 12426
Factoring: 39

Backtracking splits: 17
Backtracking splits refuted: 6

Memory used: 1663KB
Time elapsed: 0.404 s
------------------------------
% remaining time: 5995 next slice time: 13
dis-1010_2_bs=off:ep=on:n=on:nwc=1.5:sgo=on:sp=occurrence:ss=included:sswn=on:sswsr=on:st=1.5_13 on theorems\conversions\codi_int_theorems_goal12.all
Time limit reached!
------------------------------
Version: Vampire 0.6 (revision 903)
Termination reason: Time limit

Active clauses: 1437
Passive clauses: 8574
Generated clauses: 20293
Final active clauses: 1437
Final passive clauses: 6651
Input formulas: 44
Initial clauses: 93

Selected by SInE selection: 44
SInE iterations: 1

Duplicate literals: 687
Fw subsumption resolutions: 1313

Simple tautologies: 198
Equational tautologies: 7
Forward subsumptions: 10194

Binary resolution: 14496
Factoring: 110
Forward superposition: 3742
Backward superposition: 50

Unique components: 4

Memory used: 2686KB
Time elapsed: 1.404 s
------------------------------
% remaining time: 5980 next slice time: 32
lrs+11_14_bd=off:bs=off:bsr=on:cond=on:drc=off:fde=none:fsr=off:gsp=input_only:lcm=reverse:n=on:nwc=10:ptb=off:sfv=off:sgo=on:sio=off:sos=on:sp=reverse_arity:spl=backtracking:ssec=off:stl=81_32 on theorems\conversions\codi_int_theorems_goal12.all
Refutation found. Thanks to Tanya!
7611. $false (2:0) [subsumption resolution 455,7605]
7605. lt(sK2,sK0) (2:3) [backtracking split refutation 267,456,7602]
7602. $false {17} (2:0) [subsumption resolution 1287,7199]
7199. leq(intersection(sK0,sK1),sK2) {17} (3:5) [backtracking split refutation 1184,1289,7195]
7195. $false {17, 71} (7:0) [subsumption resolution 7086,7190]
7190. lt(intersection(sK0,sK1),sK0) {17, 71} (7:5) [backtracking split refutation 1644,7177,7189]
7189. $false {17, 71, 349} (7:0) [subsumption resolution 7177,7182]
7182. ~eqdim(intersection(sK0,sK1),sK0) {17, 71} (5:5) [resolution 7175,214]
214. leq(X0,X1) | ~eqdim(X0,X1) (0:6) [cnf transformation 109]
109. ! [X0,X1] : ((~eqdim(X0,X1) | (leq(X0,X1) & leq(X1,X0))) & (~leq(X0,X1) | ~leq(X1,X0) | eqdim(X0,X1)))[flattening 108]
108. ! [X0,X1] : ((~eqdim(X0,X1) | (leq(X0,X1) & leq(X1,X0))) & ((~leq(X0,X1) | ~leq(X1,X0)) | eqdim(X0,X1)))[ennf transformation 62]
62. ! [X0,X1] : ((~eqdim(X0,X1) | (leq(X0,X1) & leq(X1,X0))) & (~(leq(X0,X1) & leq(X1,X0)) | eqdim(X0,X1)))[flattening 43]
43. ! [X0] : ! [X1] : ((~eqdim(X0,X1) | (leq(X0,X1) & leq(X1,X0))) & (~(leq(X0,X1) & leq(X1,X0)) | eqdim(X0,X1)))[input]
7175. ~leq(intersection(sK0,sK1),sK0) {17, 71} (4:5) [backtracking split refutation 5623,7088,7172]
7172. $false {17, 71, 343} (7:0) [subsumption resolution 7086,7167]
7167. lt(intersection(sK0,sK1),sK0) {71, 343} (7:5) [backtracking split refutation 1644,7092,7166]
7166. $false {343, 344} (7:0) [subsumption resolution 7092,7160]
7160. ~eqdim(intersection(sK0,sK1),sK0) {343} (5:5) [resolution 7088,215]
215. leq(X1,X0) | ~eqdim(X0,X1) (0:6) [cnf transformation 109]
7092. eqdim(intersection(sK0,sK1),sK0) {344} (7:5) [backtracking splitting component]
7088. ~leq(sK0,intersection(sK0,sK1)) {343} (4:5) [backtracking splitting component]
5623. ~leq(intersection(sK0,sK1),sK0) | ~leq(sK0,intersection(sK0,sK1)) {17} (4:10) [resolution 1703,456]
1703. ~eqdim(sK2,X4) | ~leq(intersection(sK0,sK1),X4) | ~leq(X4,intersection(sK0,sK1)) (3:13) [resolution 492,216]
216. eqdim(X0,X1) | ~leq(X1,X0) | ~leq(X0,X1) (0:9) [cnf transformation 109]
492. ~eqdim(X0,intersection(sK0,sK1)) | ~eqdim(sK2,X0) (2:8) [resolution 320,245]
245. eqdim(X0,X2) | ~eqdim(X1,X2) | ~eqdim(X0,X1) (0:9) [cnf transformation 135]
135. ! [X0,X1,X2] : (~eqdim(X0,X1) | ~eqdim(X1,X2) | eqdim(X0,X2))[flattening 134]
134. ! [X0,X1,X2] : ((~eqdim(X0,X1) | ~eqdim(X1,X2)) | eqdim(X0,X2))[ennf transformation 82]
82. ! [X0,X1,X2] : (~(eqdim(X0,X1) & eqdim(X1,X2)) | eqdim(X0,X2))[flattening 15]
15. ! [X0] : ! [X1] : ! [X2] : (~(eqdim(X0,X1) & eqdim(X1,X2)) | eqdim(X0,X2))[input]
320. ~eqdim(sK2,intersection(sK0,sK1)) (1:5) [backtracking split refutation 260,262,317]
317. $false {3} (0:0) [subsumption resolution 165,283]
283. ~p(sK2,sK1) {3} (2:3) [resolution 262,211]
211. cont(X0,X1) | ~p(X0,X1) (0:6) [cnf transformation 107]
107. ! [X0,X1] : ((~p(X0,X1) | (cont(X0,X1) & eqdim(X0,X1))) & (~cont(X0,X1) | ~eqdim(X0,X1) | p(X0,X1)))[flattening 106]
106. ! [X0,X1] : ((~p(X0,X1) | (cont(X0,X1) & eqdim(X0,X1))) & ((~cont(X0,X1) | ~eqdim(X0,X1)) | p(X0,X1)))[ennf transformation 61]
61. ! [X0,X1] : ((~p(X0,X1) | (cont(X0,X1) & eqdim(X0,X1))) & (~(cont(X0,X1) & eqdim(X0,X1)) | p(X0,X1)))[flattening 29]
29. ! [X0] : ! [X1] : ((~p(X0,X1) | (cont(X0,X1) & eqdim(X0,X1))) & (~(cont(X0,X1) & eqdim(X0,X1)) | p(X0,X1)))[input]
165. p(sK2,sK1) (0:3) [cnf transformation 147]
147. po(sK0,sK1) & p(sK2,sK0) & p(sK2,sK1) & ~p(sK2,intersection(sK0,sK1))[skolemisation 88]
88. ? [X0,X1,X2] : (po(X0,X1) & p(X2,X0) & p(X2,X1) & ~p(X2,intersection(X0,X1)))[flattening 87]
87. ? [X0,X1,X2] : ((po(X0,X1) & p(X2,X0) & p(X2,X1)) & ~p(X2,intersection(X0,X1)))[ennf transformation 45]
45. ~! [X0,X1,X2] : (~(po(X0,X1) & p(X2,X0) & p(X2,X1)) | p(X2,intersection(X0,X1)))[flattening 1]
1. ~! [X0] : ! [X1] : ! [X2] : (~(po(X0,X1) & p(X2,X0) & p(X2,X1)) | p(X2,intersection(X0,X1)))[negated conjecture]
262. ~cont(sK2,sK1) {3} (1:3) [backtracking splitting component]
260. ~eqdim(sK2,intersection(sK0,sK1)) | ~cont(sK2,sK1) (1:8) [backtracking split refutation 254,256,259]
259. $false {1} (0:0) [subsumption resolution 164,258]
258. ~p(sK2,sK0) {1} (2:3) [resolution 256,211]
164. p(sK2,sK0) (0:3) [cnf transformation 147]
256. ~cont(sK2,sK0) {1} (1:3) [backtracking splitting component]
254. ~eqdim(sK2,intersection(sK0,sK1)) | ~cont(sK2,sK1) | ~cont(sK2,sK0) (1:11) [resolution 166,239]
239. p(X2,intersection(X0,X1)) | ~eqdim(X2,intersection(X0,X1)) | ~cont(X2,X1) | ~cont(X2,X0) (0:16) [cnf transformation 131]
131. ! [X0,X1,X2] : ((~cont(X2,X0) | ~cont(X2,X1) | ~eqdim(X2,intersection(X0,X1)) | p(X2,intersection(X0,X1))) & (~p(X2,intersection(X0,X1)) | (cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1)))))[flattening 130]
130. ! [X0,X1,X2] : (((~cont(X2,X0) | ~cont(X2,X1) | ~eqdim(X2,intersection(X0,X1))) | p(X2,intersection(X0,X1))) & (~p(X2,intersection(X0,X1)) | (cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1)))))[ennf transformation 79]
79. ! [X0,X1,X2] : ((~(cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1))) | p(X2,intersection(X0,X1))) & (~p(X2,intersection(X0,X1)) | (cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1)))))[flattening 5]
5. ! [X0] : ! [X1] : ! [X2] : ((~(cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1))) | p(X2,intersection(X0,X1))) & (~p(X2,intersection(X0,X1)) | (cont(X2,X0) & cont(X2,X1) & eqdim(X2,intersection(X0,X1)))))[input]
166. ~p(sK2,intersection(sK0,sK1)) (0:5) [cnf transformation 147]
7177. eqdim(intersection(sK0,sK1),sK0) {349} (7:5) [backtracking splitting component]
1644. lt(intersection(sK0,sK1),sK0) | eqdim(intersection(sK0,sK1),sK0) {71} (7:10) [resolution 1582,228]
228. ~cont(X0,X1) | lt(X0,X1) | eqdim(X0,X1) (0:9) [cnf transformation 117]
117. ! [X0,X1] : (~cont(X0,X1) | lt(X0,X1) | eqdim(X0,X1))[ennf transformation 71]
71. ! [X0,X1] : (~cont(X0,X1) | lt(X0,X1) | eqdim(X0,X1))[flattening 30]
30. ! [X0] : ! [X1] : (~cont(X0,X1) | lt(X0,X1) | eqdim(X0,X1))[input]
1582. cont(intersection(sK0,sK1),sK0) {71} (6:5) [resolution 1547,221]
221. zex(intersection(X0,X1)) | cont(intersection(X0,X1),X0) (0:9) [cnf transformation 65]
65. ! [X0,X1] : (zex(intersection(X0,X1)) | cont(intersection(X0,X1),X0))[flattening 3]
3. ! [X0] : ! [X1] : (zex(intersection(X0,X1)) | cont(intersection(X0,X1),X0))[input]
1547. ~zex(intersection(sK0,sK1)) {71} (5:4) [backtracking split refutation 1542,1544,1545]
1545. $false {71, 81} (4:0) [subsumption resolution 1526,1544]
1526. ~zex(intersection(sK0,sK1)) {71} (4:4) [resolution 1289,222]
222. leq(X0,X1) | ~zex(X0) (0:5) [cnf transformation 112]
112. ! [X0,X1] : (~zex(X0) | leq(X0,X1))[ennf transformation 66]
66. ! [X0,X1] : (~zex(X0) | leq(X0,X1))[flattening 36]
36. ! [X0] : ! [X1] : (~zex(X0) | leq(X0,X1))[input]
1544. zex(intersection(sK0,sK1)) {81} (5:4) [backtracking splitting component]
1542. ~zex(sK4(intersection(sK0,sK1))) | zex(intersection(sK0,sK1)) {71} (5:9) [resolution 1517,176]
176. mindim(X0) | ~zex(sK4(X0)) | zex(X0) (0:7) [cnf transformation 149]
149. ! [X0] : ((~mindim(X0) | (~zex(X0) & ! [X1] : (zex(X1) | leq(X0,X1)))) & (zex(X0) | (~zex(sK4(X0)) & ~leq(X0,sK4(X0))) | mindim(X0)))[skolemisation 93]
93. ! [X0] : ((~mindim(X0) | (~zex(X0) & ! [X1] : (zex(X1) | leq(X0,X1)))) & (zex(X0) | ? [X2] : (~zex(X2) & ~leq(X0,X2)) | mindim(X0)))[flattening 92]
92. ! [X0] : ((~mindim(X0) | (~zex(X0) & ! [X1] : (zex(X1) | leq(X0,X1)))) & ((zex(X0) | ? [X2] : (~zex(X2) & ~leq(X0,X2))) | mindim(X0)))[ennf transformation 47]
47. ! [X0] : ((~mindim(X0) | (~zex(X0) & ! [X1] : (zex(X1) | leq(X0,X1)))) & (~(~zex(X0) & ! [X2] : (zex(X2) | leq(X0,X2))) | mindim(X0)))[rectify 38]
38. ! [X0] : ((~mindim(X0) | (~zex(X0) & ! [X1] : (zex(X1) | leq(X0,X1)))) & (~(~zex(X0) & ! [X1] : (zex(X1) | leq(X0,X1))) | mindim(X0)))[input]
1517. ~mindim(intersection(sK0,sK1)) {71} (4:4) [resolution 1289,278]
278. leq(X1,sK2) | ~mindim(X1) (3:5) [resolution 266,175]
175. zex(X1) | leq(X0,X1) | ~mindim(X0) (0:7) [cnf transformation 149]
266. ~zex(sK2) (2:2) [resolution 261,224]
224. ~cont(X0,X1) | ~zex(X0) (0:5) [cnf transformation 113]
113. ! [X0,X1] : (~zex(X0) | (~cont(X1,X0) & ~cont(X0,X1)))[ennf transformation 67]
67. ! [X0,X1] : (~zex(X0) | (~cont(X1,X0) & ~cont(X0,X1)))[flattening 25]
25. ! [X0] : ! [X1] : (~zex(X0) | (~cont(X1,X0) & ~cont(X0,X1)))[input]
261. cont(sK2,sK0) (1:3) [backtracking split refutation 254,256,259]
7086. ~lt(intersection(sK0,sK1),sK0) {17, 71} (7:5) [backtracking split refutation 1640,4841,7082]
7082. $false {17, 71, 217} (3:0) [subsumption resolution 1149,7064]
7064. ~leq(sK0,sK2) {71, 217} (10:3) [resolution 1527,5497]
5497. leq(intersection(sK0,sK1),sK0) {217} (9:5) [resolution 5440,220]
220. leq(X1,X0) | leq(X0,X1) (0:6) [cnf transformation 64]
64. ! [X0,X1] : (leq(X0,X1) | leq(X1,X0))[flattening 33]
33. ! [X0] : ! [X1] : (leq(X0,X1) | leq(X1,X0))[input]
5440. ~leq(sK0,intersection(sK0,sK1)) {217} (8:5) [resolution 4841,218]
218. ~lt(X0,X1) | ~leq(X1,X0) (0:6) [cnf transformation 111]
111. ! [X0,X1] : ((~lt(X0,X1) | (leq(X0,X1) & ~leq(X1,X0))) & (~leq(X0,X1) | leq(X1,X0) | lt(X0,X1)))[flattening 110]
110. ! [X0,X1] : ((~lt(X0,X1) | (leq(X0,X1) & ~leq(X1,X0))) & ((~leq(X0,X1) | leq(X1,X0)) | lt(X0,X1)))[ennf transformation 63]
63. ! [X0,X1] : ((~lt(X0,X1) | (leq(X0,X1) & ~leq(X1,X0))) & (~(leq(X0,X1) & ~leq(X1,X0)) | lt(X0,X1)))[flattening 40]
40. ! [X0] : ! [X1] : ((~lt(X0,X1) | (leq(X0,X1) & ~leq(X1,X0))) & (~(leq(X0,X1) & ~leq(X1,X0)) | lt(X0,X1)))[input]
1527. ~leq(intersection(sK0,sK1),X0) | ~leq(X0,sK2) {71} (4:8) [resolution 1289,247]
247. leq(X0,X2) | ~leq(X1,X2) | ~leq(X0,X1) (0:9) [cnf transformation 139]
139. ! [X0,X1,X2] : (~leq(X0,X1) | ~leq(X1,X2) | leq(X0,X2))[flattening 138]
138. ! [X0,X1,X2] : ((~leq(X0,X1) | ~leq(X1,X2)) | leq(X0,X2))[ennf transformation 84]
84. ! [X0,X1,X2] : (~(leq(X0,X1) & leq(X1,X2)) | leq(X0,X2))[flattening 34]
34. ! [X0] : ! [X1] : ! [X2] : (~(leq(X0,X1) & leq(X1,X2)) | leq(X0,X2))[input]
1149. leq(sK0,sK2) {17} (3:3) [backtracking split refutation 951,1046,1148]
1148. $false {17, 55} (2:0) [subsumption resolution 456,1129]
1129. ~eqdim(sK2,sK0) {55} (4:3) [resolution 1046,214]
1046. ~leq(sK2,sK0) {55} (3:3) [backtracking splitting component]
951. leq(sK0,sK2) | ~leq(sK2,sK0) (3:6) [resolution 455,219]
219. lt(X0,X1) | leq(X1,X0) | ~leq(X0,X1) (0:9) [cnf transformation 111]
4841. lt(intersection(sK0,sK1),sK0) {217} (7:5) [backtracking splitting component]
1640. ~cont(intersection(sK0,sK1),X0) | lt(intersection(sK0,sK1),sK0) | ~sc(sK0,X0) {71} (7:13) [resolution 1582,192]
192. ~cont(X3,X0) | ~cont(X3,X1) | lt(X3,X0) | ~sc(X0,X1) (0:12) [cnf transformation 151]
151. ! [X0,X1] : ((~sc(X0,X1) | ((cont(sK6(X1,X0),X0) & cont(sK6(X1,X0),X1)) & ! [X3] : (~cont(X3,X0) | ~cont(X3,X1) | (lt(X3,X0) & lt(X3,X1))))) & (! [X4] : (~cont(X4,X0) | ~cont(X4,X1)) | (cont(sK7(X1,X0),X0) & cont(sK7(X1,X0),X1) & (~lt(sK7(X1,X0),X0) | ~lt(sK7(X1,X0),X1))) | sc(X0,X1)))[skolemisation 102]
102. ! [X0,X1] : ((~sc(X0,X1) | (? [X2] : (cont(X2,X0) & cont(X2,X1)) & ! [X3] : (~cont(X3,X0) | ~cont(X3,X1) | (lt(X3,X0) & lt(X3,X1))))) & (! [X4] : (~cont(X4,X0) | ~cont(X4,X1)) | ? [X5] : (cont(X5,X0) & cont(X5,X1) & (~lt(X5,X0) | ~lt(X5,X1))) | sc(X0,X1)))[flattening 101]
101. ! [X0,X1] : ((~sc(X0,X1) | (? [X2] : (cont(X2,X0) & cont(X2,X1)) & ! [X3] : ((~cont(X3,X0) | ~cont(X3,X1)) | (lt(X3,X0) & lt(X3,X1))))) & ((! [X4] : (~cont(X4,X0) | ~cont(X4,X1)) | ? [X5] : ((cont(X5,X0) & cont(X5,X1)) & (~lt(X5,X0) | ~lt(X5,X1)))) | sc(X0,X1)))[ennf transformation 54]
54. ! [X0,X1] : ((~sc(X0,X1) | (? [X2] : (cont(X2,X0) & cont(X2,X1)) & ! [X3] : (~(cont(X3,X0) & cont(X3,X1)) | (lt(X3,X0) & lt(X3,X1))))) & (~(? [X4] : (cont(X4,X0) & cont(X4,X1)) & ! [X5] : (~(cont(X5,X0) & cont(X5,X1)) | (lt(X5,X0) & lt(X5,X1)))) | sc(X0,X1)))[flattening 53]
53. ! [X0] : ! [X1] : ((~sc(X0,X1) | (? [X2] : (cont(X2,X0) & cont(X2,X1)) & ! [X3] : (~(cont(X3,X0) & cont(X3,X1)) | (lt(X3,X0) & lt(X3,X1))))) & (~(? [X4] : (cont(X4,X0) & cont(X4,X1)) & ! [X5] : (~(cont(X5,X0) & cont(X5,X1)) | (lt(X5,X0) & lt(X5,X1)))) | sc(X0,X1)))[rectify 8]
8. ! [X0] : ! [X1] : ((~sc(X0,X1) | (? [X2] : (cont(X2,X0) & cont(X2,X1)) & ! [X2] : (~(cont(X2,X0) & cont(X2,X1)) | (lt(X2,X0) & lt(X2,X1))))) & (~(? [X2] : (cont(X2,X0) & cont(X2,X1)) & ! [X2] : (~(cont(X2,X0) & cont(X2,X1)) | (lt(X2,X0) & lt(X2,X1)))) | sc(X0,X1)))[input]
1289. ~leq(intersection(sK0,sK1),sK2) {71} (3:5) [backtracking splitting component]
1184. ~leq(sK2,intersection(sK0,sK1)) | ~leq(intersection(sK0,sK1),sK2) (3:10) [resolution 493,216]
493. ~eqdim(intersection(sK0,sK1),sK2) (2:5) [resolution 320,225]
225. eqdim(X1,X0) | ~eqdim(X0,X1) (0:6) [cnf transformation 114]
114. ! [X0,X1] : (~eqdim(X0,X1) | eqdim(X1,X0))[ennf transformation 68]
68. ! [X0,X1] : (~eqdim(X0,X1) | eqdim(X1,X0))[flattening 14]
14. ! [X0] : ! [X1] : (~eqdim(X0,X1) | eqdim(X1,X0))[input]
1287. ~leq(intersection(sK0,sK1),sK2) (2:5) [backtracking split refutation 494,1013,1286]
1286. $false {51} (3:0) [subsumption resolution 1050,1284]
1284. ~cont(sK2,sK1) {51} (3:3) [backtracking split refutation 1224,1282,1283]
1283. $false {70} (3:0) [subsumption resolution 323,1282]
323. cont(sK2,sK0) (3:3) [backtracking split refutation 286,318,319]
319. $false {8} (1:0) [subsumption resolution 261,318]
318. ~cont(sK2,sK0) {8} (3:3) [backtracking splitting component]
286. ~p(sK2,X1) | ~cont(sK2,sK0) | inc(sK0,X1) {4} (3:9) [resolution 271,203]
203. ~lt(X3,X0) | ~p(X3,X1) | ~cont(X3,X0) | inc(X0,X1) (0:12) [cnf transformation 156]
156. ! [X0,X1] : ((~inc(X0,X1) | sP0(X1,X0) | (lt(sK9(X1,X0),X1) & cont(sK9(X1,X0),X1) & p(sK9(X1,X0),X0))) & ((! [X3] : (~lt(X3,X0) | ~cont(X3,X0) | ~p(X3,X1)) & ! [X4] : (~lt(X4,X1) | ~cont(X4,X1) | ~p(X4,X0))) | inc(X0,X1)))[skolemisation 155]
155. ! [X0,X1] : ((~inc(X0,X1) | sP0(X1,X0) | ? [X2] : (lt(X2,X1) & cont(X2,X1) & p(X2,X0))) & ((! [X3] : (~lt(X3,X0) | ~cont(X3,X0) | ~p(X3,X1)) & ! [X4] : (~lt(X4,X1) | ~cont(X4,X1) | ~p(X4,X0))) | inc(X0,X1)))[rectify 146]
146. ! [X0,X1] : ((~inc(X0,X1) | sP0(X1,X0) | ? [X3] : (lt(X3,X1) & cont(X3,X1) & p(X3,X0))) & ((! [X4] : (~lt(X4,X0) | ~cont(X4,X0) | ~p(X4,X1)) & ! [X5] : (~lt(X5,X1) | ~cont(X5,X1) | ~p(X5,X0))) | inc(X0,X1)))[definition folding 145]
145. ! [X1,X0] : (~sP0(X1,X0) | ? [X2] : (lt(X2,X0) & cont(X2,X0) & p(X2,X1)))[predicate definition introduction]
271. lt(sK2,sK0) {4} (2:3) [backtracking splitting component]
1282. ~cont(sK2,sK0) {70} (3:3) [backtracking splitting component]
1224. ~cont(sK2,sK1) | ~cont(sK2,sK0) {51} (3:6) [resolution 1013,249]
249. leq(X2,intersection(X0,X1)) | ~cont(X2,X1) | ~cont(X2,X0) (0:11) [cnf transformation 143]
143. ! [X0,X1,X2] : (~cont(X2,X0) | ~cont(X2,X1) | leq(X2,intersection(X0,X1)))[flattening 142]
142. ! [X0,X1,X2] : ((~cont(X2,X0) | ~cont(X2,X1)) | leq(X2,intersection(X0,X1)))[ennf transformation 86]
86. ! [X0,X1,X2] : (~(cont(X2,X0) & cont(X2,X1)) | leq(X2,intersection(X0,X1)))[flattening 4]
4. ! [X0] : ! [X1] : ! [X2] : (~(cont(X2,X0) & cont(X2,X1)) | leq(X2,intersection(X0,X1)))[input]
1050. cont(sK2,sK1) (3:3) [backtracking split refutation 956,1047,1048]
1048. $false {56} (1:0) [subsumption resolution 321,1047]
321. cont(sK2,sK1) (1:3) [backtracking split refutation 260,262,317]
1047. ~cont(sK2,sK1) {56} (3:3) [backtracking splitting component]
956. ~p(sK2,X1) | ~cont(sK2,sK1) | inc(sK1,X1) {44} (3:9) [resolution 929,203]
929. lt(sK2,sK1) {44} (2:3) [backtracking splitting component]
1013. ~leq(sK2,intersection(sK0,sK1)) {51} (2:5) [backtracking splitting component]
494. ~leq(intersection(sK0,sK1),sK2) | ~leq(sK2,intersection(sK0,sK1)) (2:10) [resolution 320,216]
456. eqdim(sK2,sK0) {17} (2:3) [backtracking splitting component]
267. lt(sK2,sK0) | eqdim(sK2,sK0) (2:6) [resolution 261,228]
455. ~lt(sK2,sK0) (2:3) [backtracking split refutation 263,271,453]
453. $false {4} (0:0) [subsumption resolution 164,443]
443. ~p(sK2,sK0) {4} (4:3) [resolution 289,212]
212. eqdim(X0,X1) | ~p(X0,X1) (0:6) [cnf transformation 107]
289. ~eqdim(sK2,sK0) {4} (3:3) [resolution 271,226]
226. ~lt(X0,X1) | ~eqdim(X0,X1) (0:6) [cnf transformation 115]
115. ! [X0,X1] : (~lt(X0,X1) | ~eqdim(X0,X1))[ennf transformation 69]
69. ! [X0,X1] : (~lt(X0,X1) | ~eqdim(X0,X1))[flattening 16]
16. ! [X0] : ! [X1] : (~lt(X0,X1) | ~eqdim(X0,X1))[input]
263. ~cont(sK2,X0) | lt(sK2,sK0) | ~sc(sK0,X0) (2:9) [resolution 261,192]
------------------------------
Version: Vampire 0.6 (revision 903)
Termination reason: Refutation

Active clauses: 1113
Passive clauses: 3117
Generated clauses: 9289
Final active clauses: 369
Final passive clauses: 365
Input formulas: 44
Initial clauses: 91

Duplicate literals: 71
Trivial inequalities: 85
Bw subsumption resolutions: 373
Fw demodulations: 1317

Simple tautologies: 93
Equational tautologies: 45
Forward subsumptions: 3741

Binary resolution: 4376
Forward superposition: 36
Backward superposition: 245

Backtracking splits: 368
Backtracking splits refuted: 255
Backtracking splits refuted at zero level: 22

Memory used: 1023KB
Time elapsed: 0.321 s
------------------------------
% Success in time 2.263 s
