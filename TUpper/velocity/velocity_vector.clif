/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved.
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger - initial implementation
 *******************************************************************************/

(cl-text https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/velocity/velocity_vector.clif

(cl-module vector (cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/algebra/vectorspace.clif))


(forall (x y)
	(iff	(velocity (velq x y))
		(and	(vector x)
			(velocity y))))

(forall (v1 v2 x)
	(if	(and	(vector v1)
			(vector v2)
			(velocity x))
		(= (velq (add v1 v2) x) 
		   (add_velocity (velq v1 x) (velq v2 x)))))

(forall (v x y)
	(if	(and	(vector v)
			(velocity x)
			(velocity y))
		(= (velq v (add_velocity x y)) (add_velocity (velq v x) (velq v y)))))

(forall (a v x)
	(if	(and	(vector v)
			(velocity x)
			(field a))
		(= (velq (mult a v) x) (mult_velocity a (velq v x)))))

(forall (a v x)
	(if	(and	(velocity x)
			(vector v)
			(field a))
		(= (velq v (mult_velocity a x)) (mult_velocity a (velq v x)))))

)

