============================== prooftrans ============================
Prover9 (32) version Dec-2007, Dec 2007.
Process 7536 was started by Cleo1 on Cleo1-PC,
Sun Jul 17 00:01:56 2016
The command was "/cygdrive/c/Program Files (x86)/Prover9-Mace4/bin-win32/prover9".
============================== end of head ===========================

============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.67 (+ 0.08) seconds.
% Length of proof is 184.
% Level of proof is 23.
% Maximum clause weight is 16.
% Given clauses 1140.

1 (all x all y (part(x,y) -> Object(x) & Object(y))) # label(non_clause).  [assumption].
2 (all x (Object(x) -> part(x,x))) # label(non_clause).  [assumption].
3 (all x all y (part(x,y) & part(y,x) -> x = y)) # label(non_clause).  [assumption].
4 (all x all y all z (part(x,y) & part(y,z) -> part(x,z))) # label(non_clause).  [assumption].
5 (all o2 all o1 (overlapsSpatially(o1,o2) <-> (exists o3 (part(o3,o1) & part(o3,o2))))) # label(non_clause).  [assumption].
18 (all x all y (partlyLocated(x,y) -> Physical(x) & Object(y))) # label(non_clause).  [assumption].
19 (all x all y (Object(x) & partlyLocated(x,y) -> overlapsSpatially(x,y))) # label(non_clause).  [assumption].
20 (all x all y (Object(x) & partlyLocated(x,y) -> (exists s (part(s,x) & exactlyLocated(s,y))))) # label(non_clause).  [assumption].
21 (all x all y (located(x,y) -> partlyLocated(x,y))) # label(non_clause).  [assumption].
23 (all x all y all z (located(x,y) & located(y,z) -> located(x,z))) # label(non_clause).  [assumption].
24 (all x all y (located(x,y) -> (all s (part(s,x) -> located(s,y))))) # label(non_clause).  [assumption].
25 (all x (Physical(x) -> (exists l located(x,l)))) # label(non_clause).  [assumption].
26 (all x all r (exactlyLocated(x,r) -> located(x,r))) # label(non_clause).  [assumption].
27 (all x all r (exactlyLocated(x,r) -> -(exists y (exactlyLocated(y,r) & y != x)))) # label(non_clause).  [assumption].
32 (all x (located(x,x) -> Region(x))) # label(non_clause).  [assumption].
35 (all x all y all z all u (part(x,y) & exactlyLocated(x,z) & exactlyLocated(y,u) -> part(z,u))) # label(non_clause).  [assumption].
36 (all x all y all z (part(x,y) & exactlyLocated(z,y) -> partlyLocated(z,x))) # label(non_clause).  [assumption].
37 (all x all y (Object(x) -> (partlyLocated(x,y) <-> (exists s (part(s,x) & exactlyLocated(s,y)))))) # label(non_clause).  [assumption].
38 (all x all y (Object(x) -> (located(x,y) <-> (exists z (part(z,y) & exactlyLocated(x,z)))))) # label(non_clause).  [assumption].
39 (all x all y (L(x,y) <-> Region(y) & exactlyLocated(x,y))) # label(non_clause).  [assumption].
40 (all x all y (P(x,y) <-> part(x,y))) # label(non_clause).  [assumption].
42 (all x all y (PL(x,y) <-> Object(x) & partlyLocated(x,y))) # label(non_clause).  [assumption].
44 (all x all y (PL(x,y) -> (exists z (P(z,x) & L(z,y))))) # label(non_clause) # label(goal).  [goal].
45 overlapsSpatially(x,y) | -part(z,x) | -part(z,y).  [clausify(5)].
46 -overlapsSpatially(x,y) | part(f1(y,x),x).  [clausify(5)].
47 -overlapsSpatially(x,y) | part(f1(y,x),y).  [clausify(5)].
51 -Object(x) | -partlyLocated(x,y) | overlapsSpatially(x,y).  [clausify(19)].
52 -located(x,y) | partlyLocated(x,y).  [clausify(21)].
53 -partlyLocated(x,y) | Physical(x).  [clausify(18)].
54 -partlyLocated(x,y) | Object(y).  [clausify(18)].
55 -Object(x) | -partlyLocated(x,y) | part(f2(x,y),x).  [clausify(20)].
56 -Object(x) | -partlyLocated(x,y) | exactlyLocated(f2(x,y),y).  [clausify(20)].
57 -part(x,y) | -exactlyLocated(z,y) | partlyLocated(z,x).  [clausify(36)].
58 -Object(x) | -partlyLocated(x,y) | part(f5(x,y),x).  [clausify(37)].
59 -Object(x) | -partlyLocated(x,y) | exactlyLocated(f5(x,y),y).  [clausify(37)].
60 -Object(x) | partlyLocated(x,y) | -part(z,x) | -exactlyLocated(z,y).  [clausify(37)].
61 -PL(x,y) | partlyLocated(x,y).  [clausify(42)].
63 -Object(x) | -partlyLocated(x,y) | part(f1(y,x),x).  [resolve(51,c,46,a)].
64 -Object(x) | -partlyLocated(x,y) | part(f1(y,x),y).  [resolve(51,c,47,a)].
68 -Physical(x) | located(x,f3(x)).  [clausify(25)].
73 -Object(x) | -part(y,x) | -exactlyLocated(y,z) | Physical(x).  [resolve(60,b,53,a)].
74 -PL(x,y) | Physical(x).  [resolve(61,b,53,a)].
75 -located(x,x) | Region(x).  [clausify(32)].
80 L(x,y) | -Region(y) | -exactlyLocated(x,y).  [clausify(39)].
91 PL(c1,c2).  [deny(44)].
92 -PL(x,y) | Object(x).  [clausify(42)].
93 -PL(x,y) | Object(y).  [resolve(61,b,54,a)].
94 -PL(x,y) | -Object(x) | part(f2(x,y),x).  [resolve(61,b,55,b)].
95 -PL(x,y) | -Object(x) | exactlyLocated(f2(x,y),y).  [resolve(61,b,56,b)].
101 -Object(x) | part(f1(y,x),x) | -PL(x,y).  [resolve(63,b,61,b)].
102 -Object(x) | part(f1(y,x),y) | -PL(x,y).  [resolve(64,b,61,b)].
105 -PL(x,y) | located(x,f3(x)).  [resolve(74,b,68,a)].
118 -part(x,y) | Object(x).  [clausify(1)].
120 -Object(x) | part(x,x).  [clausify(2)].
121 -part(x,y) | -part(y,x) | y = x.  [clausify(3)].
122 -part(x,y) | -part(y,z) | part(x,z).  [clausify(4)].
135 -located(x,y) | -located(y,z) | located(x,z).  [clausify(23)].
136 -located(x,y) | -part(z,x) | located(z,y).  [clausify(24)].
137 -exactlyLocated(x,y) | located(x,y).  [clausify(26)].
138 -exactlyLocated(x,y) | -exactlyLocated(z,y) | z = x.  [clausify(27)].
140 -part(x,y) | -exactlyLocated(x,z) | -exactlyLocated(y,u) | part(z,u).  [clausify(35)].
141 -Object(x) | -located(x,y) | part(f6(x,y),y).  [clausify(38)].
142 -Object(x) | -located(x,y) | exactlyLocated(x,f6(x,y)).  [clausify(38)].
146 P(x,y) | -part(x,y).  [clausify(40)].
147 -P(x,c1) | -L(x,c2).  [deny(44)].
149 -part(x,y) | -part(x,z) | part(f1(z,y),z).  [resolve(45,a,47,a)].
155 -located(x,y) | -Object(x) | part(f2(x,y),x).  [resolve(52,b,55,b)].
156 -located(x,y) | -Object(x) | exactlyLocated(f2(x,y),y).  [resolve(52,b,56,b)].
157 -part(x,y) | -exactlyLocated(z,y) | -Object(z) | part(f2(z,x),z).  [resolve(57,c,55,b)].
159 -Object(x) | part(f5(x,y),x) | -located(x,y).  [resolve(58,b,52,b)].
160 -Object(x) | part(f5(x,y),x) | -part(y,z) | -exactlyLocated(x,z).  [resolve(58,b,57,c)].
161 -Object(x) | exactlyLocated(f5(x,y),y) | -located(x,y).  [resolve(59,b,52,b)].
162 -Object(x) | exactlyLocated(f5(x,y),y) | -part(y,z) | -exactlyLocated(x,z).  [resolve(59,b,57,c)].
190 -Object(x) | -part(y,x) | -exactlyLocated(y,z) | located(x,f3(x)).  [resolve(73,d,68,a)].
196 L(x,y) | -exactlyLocated(x,y) | -located(y,y).  [resolve(80,b,75,b)].
198 Object(c1).  [resolve(91,a,92,a)].
199 Object(c2).  [resolve(93,a,91,a)].
200 -Object(c1) | part(f2(c1,c2),c1).  [resolve(94,a,91,a)].
201 part(f2(c1,c2),c1).  [copy(200),unit_del(a,198)].
202 -Object(c1) | exactlyLocated(f2(c1,c2),c2).  [resolve(95,a,91,a)].
203 exactlyLocated(f2(c1,c2),c2).  [copy(202),unit_del(a,198)].
221 -Object(c1) | part(f1(c2,c1),c1).  [resolve(101,c,91,a)].
222 part(f1(c2,c1),c1).  [copy(221),unit_del(a,198)].
226 -Object(c1) | part(f1(c2,c1),c2).  [resolve(102,c,91,a)].
227 part(f1(c2,c1),c2).  [copy(226),unit_del(a,198)].
241 located(c1,f3(c1)).  [resolve(105,a,91,a)].
266 -part(c1,f2(c1,c2)) | f2(c1,c2) = c1.  [resolve(201,a,121,b)].
267 Object(f2(c1,c2)).  [resolve(201,a,118,a)].
283 -part(x,c2) | part(f2(f2(c1,c2),x),f2(c1,c2)).  [resolve(203,a,157,b),unit_del(b,267)].
285 -part(x,f2(c1,c2)) | -exactlyLocated(x,y) | part(y,c2).  [resolve(203,a,140,c)].
286 -part(f2(c1,c2),x) | -exactlyLocated(x,y) | part(c2,y).  [resolve(203,a,140,b)].
288 -exactlyLocated(x,c2) | f2(c1,c2) = x.  [resolve(203,a,138,b)].
289 located(f2(c1,c2),c2).  [resolve(203,a,137,a)].
334 -part(c1,f1(c2,c1)) | f1(c2,c1) = c1.  [resolve(222,a,121,b)].
335 Object(f1(c2,c1)).  [resolve(222,a,118,a)].
338 -part(f1(c2,c1),x) | part(f1(c2,x),c2).  [resolve(227,a,149,b)].
345 -part(c2,x) | part(f1(c2,c1),x).  [resolve(227,a,122,a)].
354 exactlyLocated(f2(c1,f3(c1)),f3(c1)).  [resolve(241,a,156,a),unit_del(a,198)].
355 part(f2(c1,f3(c1)),c1).  [resolve(241,a,155,a),unit_del(a,198)].
357 exactlyLocated(c1,f6(c1,f3(c1))).  [resolve(241,a,142,b),unit_del(a,198)].
358 part(f6(c1,f3(c1)),f3(c1)).  [resolve(241,a,141,b),unit_del(a,198)].
359 -part(x,c1) | located(x,f3(c1)).  [resolve(241,a,136,a)].
408 part(f1(c2,c1),f1(c2,c1)).  [resolve(335,a,120,a)].
437 -located(c2,x) | located(f2(c1,c2),x).  [resolve(289,a,135,a)].
580 -Object(x) | -part(c1,x) | located(x,f3(x)).  [resolve(357,a,190,c)].
592 exactlyLocated(f5(c1,x),x) | -part(x,f6(c1,f3(c1))).  [resolve(357,a,162,d),unit_del(a,198)].
593 part(f5(c1,x),c1) | -part(x,f6(c1,f3(c1))).  [resolve(357,a,160,d),unit_del(a,198)].
597 -part(x,c1) | -exactlyLocated(x,y) | part(y,f6(c1,f3(c1))).  [resolve(357,a,140,c)].
601 located(c1,f6(c1,f3(c1))).  [resolve(357,a,137,a)].
655 exactlyLocated(c1,f6(c1,f6(c1,f3(c1)))).  [resolve(601,a,142,b),unit_del(a,198)].
739 -part(f3(c1),f6(c1,f3(c1))) | f6(c1,f3(c1)) = f3(c1).  [resolve(358,a,121,b)].
742 located(f1(c2,c1),f3(c1)).  [resolve(359,a,222,a)].
744 located(f2(c1,c2),f3(c1)).  [resolve(359,a,201,a)].
765 exactlyLocated(f2(f1(c2,c1),f3(c1)),f3(c1)).  [resolve(742,a,156,a),unit_del(a,335)].
766 part(f2(f1(c2,c1),f3(c1)),f1(c2,c1)).  [resolve(742,a,155,a),unit_del(a,335)].
791 exactlyLocated(f5(f2(c1,c2),f3(c1)),f3(c1)).  [resolve(744,a,161,c),unit_del(a,267)].
792 part(f5(f2(c1,c2),f3(c1)),f2(c1,c2)).  [resolve(744,a,159,c),unit_del(a,267)].
1167 part(c2,f6(c1,f3(c1))).  [resolve(286,b,357,a),unit_del(a,201)].
1457 part(f1(c2,f1(c2,c1)),c2).  [resolve(338,a,408,a)].
1515 -part(x,f1(c2,f1(c2,c1))) | part(x,c2).  [resolve(1457,a,122,b)].
1517 -part(c2,f1(c2,f1(c2,c1))) | f1(c2,f1(c2,c1)) = c2.  [resolve(1457,a,121,b)].
1557 part(f1(c2,c1),f6(c1,f3(c1))).  [resolve(345,a,1167,a)].
2249 part(c2,f6(c1,f6(c1,f3(c1)))).  [resolve(655,a,286,b),unit_del(a,201)].
2250 -part(c1,f2(c1,c2)) | part(f6(c1,f6(c1,f3(c1))),c2).  [resolve(655,a,285,b)].
2271 -exactlyLocated(x,f6(c1,f6(c1,f3(c1)))) | c1 = x.  [resolve(655,a,138,b)].
3495 -part(f6(c1,f6(c1,f3(c1))),c2) | f6(c1,f6(c1,f3(c1))) = c2.  [resolve(2249,a,121,b),flip(b)].
4714 exactlyLocated(f5(c1,f1(c2,c1)),f1(c2,c1)).  [resolve(592,b,1557,a)].
4796 part(f5(c1,f1(c2,c1)),c1).  [resolve(593,b,1557,a)].
4867 located(f5(c1,f1(c2,c1)),f3(c1)).  [resolve(4796,a,359,a)].
4874 P(f5(c1,f1(c2,c1)),c1).  [resolve(4796,a,146,b)].
4878 -part(c1,f5(c1,f1(c2,c1))) | f5(c1,f1(c2,c1)) = c1.  [resolve(4796,a,121,b)].
4879 Object(f5(c1,f1(c2,c1))).  [resolve(4796,a,118,a)].
4904 -L(f5(c1,f1(c2,c1)),c2).  [resolve(4874,a,147,a)].
4956 part(f3(c1),f6(c1,f3(c1))).  [resolve(597,b,354,a),unit_del(a,355)].
4957 f6(c1,f3(c1)) = f3(c1).  [back_unit_del(739),unit_del(a,4956)].
4984 -part(f3(c1),c2) | f3(c1) = c2.  [back_rewrite(3495),rewrite([4957(5),4957(4),4957(9),4957(8)])].
5090 -exactlyLocated(x,f3(c1)) | c1 = x.  [back_rewrite(2271),rewrite([4957(5),4957(4)])].
5109 -part(c1,f2(c1,c2)) | part(f3(c1),c2).  [back_rewrite(2250),rewrite([4957(10),4957(9)])].
5482 f2(f1(c2,c1),f3(c1)) = c1.  [resolve(5090,a,765,a),flip(a)].
5488 part(c1,f1(c2,c1)).  [back_rewrite(766),rewrite([5482(6)])].
5491 f1(c2,c1) = c1.  [back_unit_del(334),unit_del(a,5488)].
5535 -L(f5(c1,c1),c2).  [back_rewrite(4904),rewrite([5491(4)])].
5549 Object(f5(c1,c1)).  [back_rewrite(4879),rewrite([5491(4)])].
5550 -part(c1,f5(c1,c1)) | f5(c1,c1) = c1.  [back_rewrite(4878),rewrite([5491(5),5491(9)])].
5561 located(f5(c1,c1),f3(c1)).  [back_rewrite(4867),rewrite([5491(4)])].
5563 part(f5(c1,c1),c1).  [back_rewrite(4796),rewrite([5491(4)])].
5564 exactlyLocated(f5(c1,c1),c1).  [back_rewrite(4714),rewrite([5491(4),5491(6)])].
5565 -part(c2,c1) | c2 = c1.  [back_rewrite(1517),rewrite([5491(5),5491(4),5491(7),5491(6)]),flip(b)].
5567 -part(x,c1) | part(x,c2).  [back_rewrite(1515),rewrite([5491(4),5491(3)])].
5579 part(c1,c2).  [back_rewrite(1457),rewrite([5491(4),5491(3)])].
5580 located(c2,f3(c2)).  [resolve(5579,a,580,b),unit_del(a,199)].
5598 located(f2(c1,c2),f3(c2)).  [resolve(5580,a,437,a)].
5609 -part(x,c2) | located(x,f3(c2)).  [resolve(5580,a,136,a)].
5703 -part(f2(c1,c2),f5(c1,c1)) | part(c2,c1).  [resolve(5564,a,286,b)].
5931 exactlyLocated(f2(f5(c1,c1),f3(c1)),f3(c1)).  [resolve(5561,a,156,a),unit_del(a,5549)].
5932 part(f2(f5(c1,c1),f3(c1)),f5(c1,c1)).  [resolve(5561,a,155,a),unit_del(a,5549)].
5939 part(f5(c1,c1),c2).  [resolve(5567,a,5563,a)].
5953 part(f2(f2(c1,c2),f5(c1,c1)),f2(c1,c2)).  [resolve(5939,a,283,a)].
6077 -part(x,f2(c1,c2)) | located(x,f3(c2)).  [resolve(5598,a,136,a)].
6297 f5(f2(c1,c2),f3(c1)) = c1.  [resolve(791,a,5090,a),flip(a)].
6298 part(c1,f2(c1,c2)).  [back_rewrite(792),rewrite([6297(6)])].
6299 part(f3(c1),c2).  [back_unit_del(5109),unit_del(a,6298)].
6300 f2(c1,c2) = c1.  [back_unit_del(266),unit_del(a,6298)].
6301 f3(c1) = c2.  [back_unit_del(4984),unit_del(a,6299)].
6339 -part(x,c1) | located(x,f3(c2)).  [back_rewrite(6077),rewrite([6300(3)])].
6360 part(f2(c1,f5(c1,c1)),c1).  [back_rewrite(5953),rewrite([6300(3),6300(8)])].
6363 -part(c1,f5(c1,c1)) | part(c2,c1).  [back_rewrite(5703),rewrite([6300(3)])].
6389 -exactlyLocated(x,c2) | c1 = x.  [back_rewrite(288),rewrite([6300(5)])].
6420 part(f2(f5(c1,c1),c2),f5(c1,c1)).  [back_rewrite(5932),rewrite([6301(5)])].
6421 exactlyLocated(f2(f5(c1,c1),c2),c2).  [back_rewrite(5931),rewrite([6301(5),6301(7)])].
6938 located(f5(c1,c1),f3(c2)).  [resolve(5609,a,5939,a)].
6962 exactlyLocated(f2(f5(c1,c1),f3(c2)),f3(c2)).  [resolve(6938,a,156,a),unit_del(a,5549)].
7631 located(f2(c1,f5(c1,c1)),f3(c2)).  [resolve(6360,a,6339,a)].
7735 f2(f5(c1,c1),c2) = c1.  [resolve(6421,a,6389,a),flip(a)].
7736 part(c1,f5(c1,c1)).  [back_rewrite(6420),rewrite([7735(5)])].
7737 part(c2,c1).  [back_unit_del(6363),unit_del(a,7736)].
7738 f5(c1,c1) = c1.  [back_unit_del(5550),unit_del(a,7736)].
7740 c2 = c1.  [back_unit_del(5565),unit_del(a,7737)].
7741 f2(c1,c1) = c1.  [back_rewrite(7735),rewrite([7738(3),7740(2)])].
7762 located(c1,c1).  [back_rewrite(7631),rewrite([7738(4),7741(3),7740(2),6301(3),7740(2)])].
7781 exactlyLocated(c1,c1).  [back_rewrite(6962),rewrite([7738(3),7740(2),6301(3),7740(2),7741(3),7740(2),6301(3),7740(2)])].
7782 -L(c1,c1).  [back_rewrite(5535),rewrite([7738(3),7740(2)])].
7786 L(x,c1) | -exactlyLocated(x,c1).  [resolve(7762,a,196,c)].
7802 $F.  [resolve(7786,b,7781,a),unit_del(a,7782)].

============================== end of proof ==========================
