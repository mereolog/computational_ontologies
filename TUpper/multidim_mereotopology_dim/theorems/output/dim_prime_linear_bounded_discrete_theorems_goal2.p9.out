============================== Prover9 ===============================
Prover9 (32) version Dec-2007, Dec 2007.
Process 13864 was started by torsten on torsten-2016,
Wed Jan 23 15:09:50 2019
The command was "/cygdrive/c/Reasoning/prover9-bin/bin-win32/prover9 -t600 -f C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\theorems\conversions\dim_prime_linear_bounded_discrete_theorems_goal2.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_discrete.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_bounded_discrete.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\dim_basic_defs.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\eq_dim.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\covers.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_bounded.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\min_max_dim.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_unbounded.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\generated\codi_int_relevance1.order".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\theorems\conversions\dim_prime_linear_bounded_discrete_theorems_goal2.p9


formulas(goals).
(all x22 all x21 (eqdim(x22,x21) -> eqdim(x21,x22))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_discrete.p9


formulas(sos).
(all x12 (-maxdim(x12) -> (exists x11 covers(x11,x12)))).
(all x22 (-zex(x22) & -mindim(x22) -> (exists x21 covers(x22,x21)))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_bounded_discrete.p9


formulas(sos).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\dim_basic_defs.p9


formulas(sos).
(all x12 all x11 (lt(x12,x11) <-> leq(x12,x11) & -leq(x11,x12))).
(all x22 all x21 (gt(x22,x21) <-> leq(x21,x22) & -leq(x22,x21))).
(all x32 all x31 (geq(x32,x31) <-> leq(x31,x32))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\eq_dim.p9


formulas(sos).
(all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\covers.p9


formulas(sos).
(all x13 all x12 (covers(x13,x12) <-> lt(x12,x13) & (all x11 -(lt(x12,x11) & lt(x11,x13))))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_bounded.p9


formulas(sos).
(exists x2 maxdim(x2)).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear.p9


formulas(sos).
(exists x2 mindim(x2)).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\min_max_dim.p9


formulas(sos).
(all x12 (maxdim(x12) <-> -zex(x12) & (all x11 leq(x11,x12)))).
(all x22 (mindim(x22) <-> -zex(x22) & (all x21 (-zex(x21) -> leq(x22,x21))))).
end_of_list.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_unbounded.p9


formulas(sos).
(all x11 leq(x11,x11)).
(all x22 all x21 (leq(x22,x21) | leq(x21,x22))).
(all x33 all x32 all x31 (leq(x33,x32) & leq(x32,x31) -> leq(x33,x31))).
(all x42 all x41 (zex(x42) & zex(x41) -> x42 = x41)).
(all x52 all x51 (zex(x52) -> leq(x52,x51))).
end_of_list.
WARNING, predicate symbols in predicate_order (lex) command not found in formulas: sc, inc, po, c, p, cont.

% Reading from file C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\generated\codi_int_relevance1.order

predicate_order([covers,maxdim,mindim,sc,inc,po,c,=,leq,eqdim,lt,p,cont,zex]).
set(inverse_order).
assign(order,kbo).
WARNING, predicate symbols in predicate_order (lex) command not found in formulas: sc, inc, po, c, p, cont.

============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x12 (-maxdim(x12) -> (exists x11 covers(x11,x12)))) # label(non_clause).  [assumption].
2 (all x22 (-zex(x22) & -mindim(x22) -> (exists x21 covers(x22,x21)))) # label(non_clause).  [assumption].
3 (all x12 all x11 (lt(x12,x11) <-> leq(x12,x11) & -leq(x11,x12))) # label(non_clause).  [assumption].
4 (all x22 all x21 (gt(x22,x21) <-> leq(x21,x22) & -leq(x22,x21))) # label(non_clause).  [assumption].
5 (all x32 all x31 (geq(x32,x31) <-> leq(x31,x32))) # label(non_clause).  [assumption].
6 (all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))) # label(non_clause).  [assumption].
7 (all x13 all x12 (covers(x13,x12) <-> lt(x12,x13) & (all x11 -(lt(x12,x11) & lt(x11,x13))))) # label(non_clause).  [assumption].
8 (exists x2 maxdim(x2)) # label(non_clause).  [assumption].
9 (exists x2 mindim(x2)) # label(non_clause).  [assumption].
10 (all x12 (maxdim(x12) <-> -zex(x12) & (all x11 leq(x11,x12)))) # label(non_clause).  [assumption].
11 (all x22 (mindim(x22) <-> -zex(x22) & (all x21 (-zex(x21) -> leq(x22,x21))))) # label(non_clause).  [assumption].
12 (all x11 leq(x11,x11)) # label(non_clause).  [assumption].
13 (all x22 all x21 (leq(x22,x21) | leq(x21,x22))) # label(non_clause).  [assumption].
14 (all x33 all x32 all x31 (leq(x33,x32) & leq(x32,x31) -> leq(x33,x31))) # label(non_clause).  [assumption].
15 (all x42 all x41 (zex(x42) & zex(x41) -> x42 = x41)) # label(non_clause).  [assumption].
16 (all x52 all x51 (zex(x52) -> leq(x52,x51))) # label(non_clause).  [assumption].
17 (all x22 all x21 (eqdim(x22,x21) -> eqdim(x21,x22))) # label(non_clause) # label(goal).  [goal].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
maxdim(x) | covers(f1(x),x).  [clausify(1)].
zex(x) | mindim(x) | covers(x,f2(x)).  [clausify(2)].
-lt(x,y) | leq(x,y).  [clausify(3)].
-lt(x,y) | -leq(y,x).  [clausify(3)].
lt(x,y) | -leq(x,y) | leq(y,x).  [clausify(3)].
-gt(x,y) | leq(y,x).  [clausify(4)].
-gt(x,y) | -leq(x,y).  [clausify(4)].
gt(x,y) | -leq(y,x) | leq(x,y).  [clausify(4)].
-geq(x,y) | leq(y,x).  [clausify(5)].
geq(x,y) | -leq(y,x).  [clausify(5)].
-eqdim(x,y) | leq(x,y).  [clausify(6)].
-eqdim(x,y) | leq(y,x).  [clausify(6)].
eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(6)].
-covers(x,y) | lt(y,x).  [clausify(7)].
-covers(x,y) | -lt(y,z) | -lt(z,x).  [clausify(7)].
covers(x,y) | -lt(y,x) | lt(y,f3(x,y)).  [clausify(7)].
covers(x,y) | -lt(y,x) | lt(f3(x,y),x).  [clausify(7)].
maxdim(c1).  [clausify(8)].
mindim(c2).  [clausify(9)].
-maxdim(x) | -zex(x).  [clausify(10)].
-maxdim(x) | leq(y,x).  [clausify(10)].
maxdim(x) | zex(x) | -leq(f4(x),x).  [clausify(10)].
-mindim(x) | -zex(x).  [clausify(11)].
-mindim(x) | zex(y) | leq(x,y).  [clausify(11)].
mindim(x) | zex(x) | -zex(f5(x)).  [clausify(11)].
mindim(x) | zex(x) | -leq(x,f5(x)).  [clausify(11)].
leq(x,x).  [clausify(12)].
leq(x,y) | leq(y,x).  [clausify(13)].
-leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(14)].
-zex(x) | -zex(y) | y = x.  [clausify(15)].
-zex(x) | leq(x,y).  [clausify(16)].
eqdim(c3,c4).  [deny(17)].
-eqdim(c4,c3).  [deny(17)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

Eliminating maxdim/1
18 -maxdim(x) | -zex(x).  [clausify(10)].
19 maxdim(x) | covers(f1(x),x).  [clausify(1)].
20 maxdim(c1).  [clausify(8)].
Derived: -zex(x) | covers(f1(x),x).  [resolve(18,a,19,a)].
Derived: -zex(c1).  [resolve(18,a,20,a)].
21 -maxdim(x) | leq(y,x).  [clausify(10)].
Derived: leq(x,y) | covers(f1(y),y).  [resolve(21,a,19,a)].
Derived: leq(x,c1).  [resolve(21,a,20,a)].
22 maxdim(x) | zex(x) | -leq(f4(x),x).  [clausify(10)].
Derived: zex(x) | -leq(f4(x),x) | leq(y,x).  [resolve(22,a,21,a)].

Eliminating mindim/1
23 -mindim(x) | -zex(x).  [clausify(11)].
24 zex(x) | mindim(x) | covers(x,f2(x)).  [clausify(2)].
25 mindim(c2).  [clausify(9)].
Derived: -zex(c2).  [resolve(23,a,25,a)].
26 -mindim(x) | zex(y) | leq(x,y).  [clausify(11)].
Derived: zex(x) | leq(y,x) | zex(y) | covers(y,f2(y)).  [resolve(26,a,24,b)].
Derived: zex(x) | leq(c2,x).  [resolve(26,a,25,a)].
27 mindim(x) | zex(x) | -zex(f5(x)).  [clausify(11)].
Derived: zex(x) | -zex(f5(x)) | zex(y) | leq(x,y).  [resolve(27,a,26,a)].
28 mindim(x) | zex(x) | -leq(x,f5(x)).  [clausify(11)].
Derived: zex(x) | -leq(x,f5(x)) | zex(y) | leq(x,y).  [resolve(28,a,26,a)].

Eliminating gt/2
29 gt(x,y) | -leq(y,x) | leq(x,y).  [clausify(4)].
30 -gt(x,y) | leq(y,x).  [clausify(4)].
31 -gt(x,y) | -leq(x,y).  [clausify(4)].

Eliminating geq/2
32 geq(x,y) | -leq(y,x).  [clausify(5)].
33 -geq(x,y) | leq(y,x).  [clausify(5)].

Eliminating covers/2
34 covers(x,y) | -lt(y,x) | lt(y,f3(x,y)).  [clausify(7)].
35 -covers(x,y) | lt(y,x).  [clausify(7)].
36 -covers(x,y) | -lt(y,z) | -lt(z,x).  [clausify(7)].
Derived: -lt(x,y) | lt(x,f3(y,x)) | -lt(x,z) | -lt(z,y).  [resolve(34,a,36,a)].
37 covers(x,y) | -lt(y,x) | lt(f3(x,y),x).  [clausify(7)].
Derived: -lt(x,y) | lt(f3(y,x),y) | -lt(x,z) | -lt(z,y).  [resolve(37,a,36,a)].
38 -zex(x) | covers(f1(x),x).  [resolve(18,a,19,a)].
Derived: -zex(x) | lt(x,f1(x)).  [resolve(38,b,35,a)].
Derived: -zex(x) | -lt(x,y) | -lt(y,f1(x)).  [resolve(38,b,36,a)].
39 leq(x,y) | covers(f1(y),y).  [resolve(21,a,19,a)].
Derived: leq(x,y) | lt(y,f1(y)).  [resolve(39,b,35,a)].
Derived: leq(x,y) | -lt(y,z) | -lt(z,f1(y)).  [resolve(39,b,36,a)].
40 zex(x) | leq(y,x) | zex(y) | covers(y,f2(y)).  [resolve(26,a,24,b)].
Derived: zex(x) | leq(y,x) | zex(y) | lt(f2(y),y).  [resolve(40,d,35,a)].
Derived: zex(x) | leq(y,x) | zex(y) | -lt(f2(y),z) | -lt(z,y).  [resolve(40,d,36,a)].

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Function symbol KB weights:  c1=1. c2=1. c3=1. c4=1. f3=1. f1=1. f2=1. f4=1. f5=1.
Predicate symbol precedence:  predicate_order([ =, leq, eqdim, lt, zex ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, f3, f1, f2, f4, f5 ]).
Skipping inverse_order, because term ordering is KBO.
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
  % set(binary_resolution).  % (non-Horn)
  % set(neg_ur_resolution).  % (non-Horn, less than 100 clauses)

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(unit_deletion).  % (non-Horn)

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
41 -lt(x,y) | leq(x,y).  [clausify(3)].
42 -lt(x,y) | -leq(y,x).  [clausify(3)].
43 lt(x,y) | -leq(x,y) | leq(y,x).  [clausify(3)].
44 -eqdim(x,y) | leq(x,y).  [clausify(6)].
45 -eqdim(x,y) | leq(y,x).  [clausify(6)].
46 eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(6)].
47 leq(x,x).  [clausify(12)].
48 leq(x,y) | leq(y,x).  [clausify(13)].
49 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(14)].
50 -zex(x) | -zex(y) | y = x.  [clausify(15)].
51 -zex(x) | leq(x,y).  [clausify(16)].
52 eqdim(c3,c4).  [deny(17)].
53 -eqdim(c4,c3).  [deny(17)].
54 -zex(c1).  [resolve(18,a,20,a)].
55 leq(x,c1).  [resolve(21,a,20,a)].
56 zex(x) | -leq(f4(x),x) | leq(y,x).  [resolve(22,a,21,a)].
57 -zex(c2).  [resolve(23,a,25,a)].
58 zex(x) | leq(c2,x).  [resolve(26,a,25,a)].
59 zex(x) | -zex(f5(x)) | zex(y) | leq(x,y).  [resolve(27,a,26,a)].
60 zex(x) | -leq(x,f5(x)) | zex(y) | leq(x,y).  [resolve(28,a,26,a)].
61 -lt(x,y) | lt(x,f3(y,x)) | -lt(x,z) | -lt(z,y).  [resolve(34,a,36,a)].
62 -lt(x,y) | lt(f3(y,x),y) | -lt(x,z) | -lt(z,y).  [resolve(37,a,36,a)].
63 -zex(x) | lt(x,f1(x)).  [resolve(38,b,35,a)].
64 -zex(x) | -lt(x,y) | -lt(y,f1(x)).  [resolve(38,b,36,a)].
65 leq(x,y) | lt(y,f1(y)).  [resolve(39,b,35,a)].
66 leq(x,y) | -lt(y,z) | -lt(z,f1(y)).  [resolve(39,b,36,a)].
67 zex(x) | leq(y,x) | zex(y) | lt(f2(y),y).  [resolve(40,d,35,a)].
68 zex(x) | leq(y,x) | zex(y) | -lt(f2(y),z) | -lt(z,y).  [resolve(40,d,36,a)].
69 eqdim(x,x).  [factor(46,b,c),unit_del(b,47)].
70 -lt(x,y) | lt(x,f3(y,x)) | -lt(y,y).  [factor(61,a,c)].
71 -lt(x,y) | lt(x,f3(y,x)) | -lt(x,x).  [factor(61,a,d)].
72 -lt(x,x) | lt(x,f3(x,x)).  [factor(61,c,d),merge(c)].
73 -lt(x,y) | lt(f3(y,x),y) | -lt(y,y).  [factor(62,a,c)].
74 -lt(x,y) | lt(f3(y,x),y) | -lt(x,x).  [factor(62,a,d)].
75 -lt(x,x) | lt(f3(x,x),x).  [factor(62,c,d),merge(c)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.00 seconds.

given #1 (I,wt=6): 41 -lt(x,y) | leq(x,y).  [clausify(3)].

given #2 (I,wt=6): 42 -lt(x,y) | -leq(y,x).  [clausify(3)].

given #3 (I,wt=9): 43 lt(x,y) | -leq(x,y) | leq(y,x).  [clausify(3)].

given #4 (I,wt=6): 44 -eqdim(x,y) | leq(x,y).  [clausify(6)].

given #5 (I,wt=6): 45 -eqdim(x,y) | leq(y,x).  [clausify(6)].

given #6 (I,wt=9): 46 eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(6)].

given #7 (I,wt=3): 47 leq(x,x).  [clausify(12)].

given #8 (I,wt=6): 48 leq(x,y) | leq(y,x).  [clausify(13)].

given #9 (I,wt=9): 49 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(14)].

given #10 (I,wt=7): 50 -zex(x) | -zex(y) | y = x.  [clausify(15)].

given #11 (I,wt=5): 51 -zex(x) | leq(x,y).  [clausify(16)].

given #12 (I,wt=3): 52 eqdim(c3,c4).  [deny(17)].

given #13 (I,wt=3): 53 -eqdim(c4,c3).  [deny(17)].

given #14 (I,wt=2): 54 -zex(c1).  [resolve(18,a,20,a)].

given #15 (I,wt=3): 55 leq(x,c1).  [resolve(21,a,20,a)].

given #16 (I,wt=9): 56 zex(x) | -leq(f4(x),x) | leq(y,x).  [resolve(22,a,21,a)].

given #17 (I,wt=2): 57 -zex(c2).  [resolve(23,a,25,a)].

given #18 (I,wt=5): 58 zex(x) | leq(c2,x).  [resolve(26,a,25,a)].

given #19 (I,wt=10): 59 zex(x) | -zex(f5(x)) | zex(y) | leq(x,y).  [resolve(27,a,26,a)].

given #20 (I,wt=11): 60 zex(x) | -leq(x,f5(x)) | zex(y) | leq(x,y).  [resolve(28,a,26,a)].

given #21 (I,wt=14): 61 -lt(x,y) | lt(x,f3(y,x)) | -lt(x,z) | -lt(z,y).  [resolve(34,a,36,a)].

given #22 (I,wt=14): 62 -lt(x,y) | lt(f3(y,x),y) | -lt(x,z) | -lt(z,y).  [resolve(37,a,36,a)].

given #23 (I,wt=6): 63 -zex(x) | lt(x,f1(x)).  [resolve(38,b,35,a)].

given #24 (I,wt=9): 64 -zex(x) | -lt(x,y) | -lt(y,f1(x)).  [resolve(38,b,36,a)].

given #25 (I,wt=7): 65 leq(x,y) | lt(y,f1(y)).  [resolve(39,b,35,a)].

given #26 (I,wt=10): 66 leq(x,y) | -lt(y,z) | -lt(z,f1(y)).  [resolve(39,b,36,a)].

given #27 (I,wt=11): 67 zex(x) | leq(y,x) | zex(y) | lt(f2(y),y).  [resolve(40,d,35,a)].

given #28 (I,wt=14): 68 zex(x) | leq(y,x) | zex(y) | -lt(f2(y),z) | -lt(z,y).  [resolve(40,d,36,a)].

given #29 (I,wt=3): 69 eqdim(x,x).  [factor(46,b,c),unit_del(b,47)].

given #30 (A,wt=3): 76 -lt(x,x).  [ur(42,b,47,a)].

given #31 (F,wt=3): 84 -lt(c1,x).  [ur(42,b,55,a)].

given #32 (T,wt=3): 79 leq(c4,c3).  [resolve(52,a,45,a)].
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 0.00 (+ 0.03) seconds.
% Length of proof is 10.
% Level of proof is 3.
% Maximum clause weight is 9.
% Given clauses 32.

6 (all x12 all x11 (eqdim(x12,x11) <-> leq(x12,x11) & leq(x11,x12))) # label(non_clause).  [assumption].
17 (all x22 all x21 (eqdim(x22,x21) -> eqdim(x21,x22))) # label(non_clause) # label(goal).  [goal].
44 -eqdim(x,y) | leq(x,y).  [clausify(6)].
45 -eqdim(x,y) | leq(y,x).  [clausify(6)].
46 eqdim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(6)].
52 eqdim(c3,c4).  [deny(17)].
53 -eqdim(c4,c3).  [deny(17)].
79 leq(c4,c3).  [resolve(52,a,45,a)].
80 leq(c3,c4).  [resolve(52,a,44,a)].
115 $F.  [resolve(79,a,46,b),unit_del(a,53),unit_del(b,80)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=32. Generated=133. Kept=74. proofs=1.
Usable=30. Sos=27. Demods=0. Limbo=2, Disabled=66. Hints=0.
Weight_deleted=0. Literals_deleted=0.
Forward_subsumed=58. Back_subsumed=15.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=0 (0 lex), Back_demodulated=0. Back_unit_deleted=0.
Demod_attempts=0. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=134. Nonunit_bsub_feature_tests=181.
Megabytes=0.09.
User_CPU=0.00, System_CPU=0.03, Wall_clock=0.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 13864 exit (max_proofs) ------

Process 13864 exit (max_proofs) Wed Jan 23 15:09:50 2019
============================= C:\Reasoning\prover9-bin\bin-win32\prover9 ================================
execution finished: Wed Jan 23 15:09:52 2019
total CPU time used: 0
The command was "C:\Reasoning\prover9-bin\bin-win32\prover9 -t600 -f C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\theorems\conversions\dim_prime_linear_bounded_discrete_theorems_goal2.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_discrete.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_bounded_discrete.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\dim_basic_defs.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\eq_dim.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\covers.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_bounded.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\definitions\conversions\min_max_dim.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_dim\conversions\dim_prime_linear_unbounded.p9 C:\Users\torsten\Documents\github\colore\ontologies\multidim_mereotopology_codi\generated\codi_int_relevance1.order"
Input read from 
============================ end of footer ===========================
