


(all x all y
	(leq(x,y)
	->
	(D(x) & D(y)))).

% Reflexive
all x
	(D(x)
	->
	(leq(x,x))).

% Antisymmetry
all x all y
	((leq(x,y)
	& leq(y,x))
	->
	(x=y)).

% Transitive
all x all y all z
	((leq(x,y)
	& leq(y,z))
	->
	leq(x,z)).

(all x all y
	(lt(x,y)
	<->
	(leq(x,y)
	& (x != y)))).

%antichain
(all x all y
	(leq(x,y)
	->
	(x=y))).


%definitions

all x(arboreal(x) <-> D(x)).

all x all y(
	arboreal_subocc(x,y) <-> part(x,y)
).