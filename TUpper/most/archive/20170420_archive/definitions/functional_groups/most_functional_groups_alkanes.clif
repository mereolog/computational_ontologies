/*******************************************************************************
* Copyright (c) University of Toronto and others. All rights reserved.
* The content of this file is licensed under the Creative Commons Attribution-
* ShareAlike 4.0 Unported license. The legal text of this license can be
* found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
*
* Contributors:
* Carmen Chui, Michael Gruninger
*******************************************************************************/

(cl-text https://raw.githubusercontent.com/gruninger/colore/master/ontologies/most/definitions/most_functional_groups_alkanes.clif

(cl-imports https://raw.githubusercontent.com/gruninger/colore/master/ontologies/most/definitions/most_shape.clif)
(cl-imports https://raw.githubusercontent.com/gruninger/colore/master/ontologies/most/definitions/most_connections.clif)

(cl-comment 'We note that R groups are simply another functional group in this axiomatization.')

(cl-comment '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')
(cl-comment ' H Y D R O C A R B O N S ')
(cl-comment 'These are axioms for functional groups that contain hydrocarbons.')
(cl-comment 'Only carbon and hydrogens.')
(cl-comment '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')

(cl-comment '================================================')
(cl-comment 'ALKYL GROUP R(CH2)nH')
(cl-comment '1 carbon - methane')
(cl-comment '2 carbon - ethane')
(cl-comment '3 carbon - propane')
(cl-comment '4 carbon - butane, isobutane')
(cl-comment '5 carbon - pentane, isopentane, neopentane')
(cl-comment '6 carbon - hexane, 2-methylpentane, 3-methylpentane, 2,2-dimethylebutane, 2,3-dimethylbutane')
(cl-comment 'Comprehensive listing of isomers for alkanes: http://www.kentchemistry.com/links/organic/isomersofalkanes.htm')
(cl-comment '================================================')

(forall (x)
	(iff (alkyl_group x)
		(and (saturated x)
			(forall (a)
				(if (and (atom a)(inGroup a x))
					(carbon a))))))

(cl-comment 'METHANE CH4')
(forall (x)
	(iff (methane x)
		(and (chain x)(saturated x)
			(exists (c1)
				(and (carbon c1)
					(forall (y)
						(if (inGroup y x)
							(= y c1))))))))

(cl-comment 'ETHANE C2H6')
(forall (x)
	(iff (ethane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 b1)
				(and (carbon c1)(carbon c2)
					(not (= c1 c2))
					(end c1 x)
					(end c2 x)
					(singlebond b1 c1 c2)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)))))))))

(cl-comment 'PROPANE C3H8')
(forall (x)
	(iff (propane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 c3 b1 b2)
				(and (carbon c1)(carbon c2)(carbon c3)
					(not (= c1 c2))(not (= c1 c3))(not (= c2 c3))
					(end c1 x)
					(end c3 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)))))))))

(cl-comment 'BUTANE C4H10')
(forall (x)
	(iff (butane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 c3 c4 b1 b2 b3)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))
					(not (= c2 c3))(not (= c2 c4))
					(not (= c3 c4))
					(end c1 x)
					(end c4 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)))))))))

(forall (x)
	(iff (isobutane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 b1 b2 b3)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))
					(not (= c2 c3))(not (= c2 c4))
					(not (= c3 c4))
					(fork c2 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c2 c4)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)))))))))

(cl-comment 'PENTANE C5H12')
(forall (x)
	(iff (pentane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 c3 c4 c5 b1 b2 b3 b4)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))
					(not (= c3 c4))(not (= c3 c5))
					(not (= c4 c5))
					(end c1 x)
					(end c5 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(singlebond b4 c4 c5)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)))))))))


(forall (x)
	(iff (isopentane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 b1 b2 b3 b4)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))
					(not (= c3 c4))(not (= c3 c5))
					(not (= c4 c5))
					(fork c2 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c2 c4)
					(singlebond b4 c4 c5)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)))))))))

(forall (x)
	(iff (neopentane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 b1 b2 b3 b4)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))
					(not (= c3 c4))(not (= c3 c5))
					(not (= c4 c5))
					(fork c2 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c2 c4)
					(singlebond b4 c2 c5)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)))))))))
							
(cl-comment 'HEXANE C6H14')
(forall (x)
	(iff (hexane x)
		(and (chain x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(end c1 x)
					(end c6 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c2 c4)
					(singlebond b4 c4 c5)
					(singlebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (isohexane x)
		(2_methylpentane x)))

(forall (x)
	(iff (2_methylpentane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(fork c2 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c2 c4)
					(singlebond b4 c4 c5)
					(singlebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (3_methylpentane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(fork c3 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(singlebond b4 c3 c5)
					(singlebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (2_3_dimethylbutane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(fork c2 x)
					(fork c4 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c2 c4)
					(singlebond b4 c4 c5)
					(singlebond b5 c4 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (2_2_dimethylbutane x)
		(neohexane x)))

(forall (x)
	(iff (neohexane x)
		(and (branchedgroup x)(saturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6)
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(fork c2 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c2 c4)
					(singlebond b4 c2 c5)
					(singlebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(cl-comment 'HEPTANE C7H16')
(cl-comment 'Heptane has 1 CHAIN isomer:')
(cl-comment ' -  n-heptane')
(cl-comment 'Heptane has 8 BRANCHED isomers:')
(cl-comment ' -  2-methylhexane')
(cl-comment ' -  3-methylhexane')
(cl-comment ' -  2,2-dimethylpentane')
(cl-comment ' -  2,3-dimethylpentane')
(cl-comment ' -  2,4-dimethylpentane')
(cl-comment ' -  3,3-dimethylpentane')
(cl-comment ' -  3-ethylpentane')
(cl-comment ' -  2,2,3-trimethylbutane')
(cl-comment 'See https://web.viu.ca/patrick/Isomers.htm')

(cl-comment ' to do later! ')

)