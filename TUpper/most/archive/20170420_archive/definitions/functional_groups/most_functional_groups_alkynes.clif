/*******************************************************************************
* Copyright (c) University of Toronto and others. All rights reserved.
* The content of this file is licensed under the Creative Commons Attribution-
* ShareAlike 4.0 Unported license. The legal text of this license can be
* found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
*
* Contributors:
* Carmen Chui, Michael Gruninger
*******************************************************************************/

(cl-text https://raw.githubusercontent.com/gruninger/colore/master/ontologies/most/definitions/most_functional_groups_alkynes.clif

(cl-imports https://raw.githubusercontent.com/gruninger/colore/master/ontologies/most/definitions/most_shape.clif)
(cl-imports https://raw.githubusercontent.com/gruninger/colore/master/ontologies/most/definitions/most_connections.clif)

(cl-comment 'We note that R groups are simply another functional group in this axiomatization.')

(cl-comment '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')
(cl-comment ' H Y D R O C A R B O N S ')
(cl-comment 'These are axioms for functional groups that contain hydrocarbons.')
(cl-comment 'Only carbon and hydrogens.')
(cl-comment '+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++')


(cl-comment '================================================')
(cl-comment 'ALKYNYL GROUP CnH2n')
(cl-comment 'The alkynes are unsaturated hydrocarbons containing at least one carbonï¿½Xcarbon triple bond between two carbon atoms.')
(cl-comment '2 carbon - ethyne')
(cl-comment '3 carbon - propyne')
(cl-comment '4 carbon - butyne')
(cl-comment '5 carbon - pentyne')
(cl-comment '6 carbon - hexyne')
(cl-comment '================================================')

(forall (x)
	(iff (alkynyl_group x)
		(and (unsaturated x)
			(forall (a)
				(if (and (atom a)(inGroup a x))
					(carbon a))))))

(cl-comment 'ETHYNE C2H2')
(forall (x)
	(iff (acetylene x)
		(ethyne x)))

(forall (x)
	(iff (ethyne x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 b1)
				(and (carbon c1)(carbon c2)
					(not (= c1 c2))
					(end c1 x)
					(end c2 x)
					(triplebond b1 c1 c2)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)))))))))

(cl-comment 'PROPYNE C3H4')
(forall (x)
	(iff (or (methylacetylene x)(methyl_acetylene x)(allylene x))
		(propyne x)))

(forall (x)
	(iff (propyne x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 b1 b2)
				(and (carbon c1)(carbon c2)(carbon c3)
					(not (= c1 c2))(not (= c1 c3))
					(not (= c2 c3))
					(end c1 x)
					(end c3 x)
					(triplebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)))))))))

(cl-comment 'BUTYNE C4H6')
(cl-comment 'Butyne has two isomers:')
(cl-comment ' - but-1-yne')
(cl-comment ' - but-2-yne')
(cl-comment 'See http://intro.chem.okstate.edu/1014/Lecture/Lec111699.html')
							
(forall (x)
	(iff (or (ethylacetylene x)(ethylethyne x)(1_butyne x))
		(but_1_yne x)))

(forall (x)
	(iff (but_1_yne x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 c4 b1 b2 b3)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)
					(not (= c1 c2))(not (= c1 c3))
					(not (= c2 c3))
					(end c1 x)
					(end c4 x)
					(triplebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)))))))))


(forall (x)
	(iff (or (dimethylacetylene x)(crotonylene x)(2_butyne x))
		(but_1_yne x)))

(forall (x)
	(iff (but_2_yne x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 c4 b1 b2 b3)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)
					(not (= c1 c2))(not (= c1 c3))
					(not (= c2 c3))
					(end c1 x)
					(end c4 x)
					(singlebond b1 c1 c2)
					(triplebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)))))))))

(cl-comment 'PENTYNE C5H8')
(cl-comment 'Pentyne has two CHAIN isomers:')
(cl-comment ' - pent-1-yne')
(cl-comment ' - pent-2-yne')
(cl-comment 'Pentyne has one BRANCHED isomer:')
(cl-comment ' - 3-methyl-1-butyne')
(cl-comment 'See http://intro.chem.okstate.edu/1014/Lecture/Lec111699.html')

(forall (x)
	(iff (or (propylacetylene x)(1_pentyne x))
		(pent_1_yne x)))

(forall (x)
	(iff (pent_1_yne x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 b1 b2 b3 b4)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))
					(not (= c3 c4))(not (= c3 c5))
					(not (= c4 c5))
					(end c1 x)
					(end c5 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(triplebond b4 c4 c5)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)))))))))

(forall (x)
	(iff (or (ethylmethylacetylene x)(1_ethyl_2_methylacetylene x)(2_pentyne x))
		(pent_2_yne x)))

(forall (x)
	(iff (pent_2_yne x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 b1 b2 b3 b4)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))
					(not (= c3 c4))(not (= c3 c5))
					(not (= c4 c5))
					(end c1 x)
					(end c5 x)
					(singlebond b1 c1 c2)
					(triplebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(singlebond b4 c4 c5)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)))))))))

(forall (x)
	(iff (3_methylbut_1_yne x)
		(3_methyl_1_butyne x)))

(forall (x)
	(iff (3_methyl_1_butyne x)
		(and (branchedgroup x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 b1 b2 b3 b4)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))
					(not (= c3 c4))(not (= c3 c5))
					(not (= c4 c5))
					(fork c3 x)
					(triplebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(singlebond b4 c3 c5)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)))))))))

(cl-comment 'HEXYNE C6H10')
(cl-comment 'Hexyne has three CHAIN isomers:')
(cl-comment ' - hex-1-yne')
(cl-comment ' - hex-2-yne')
(cl-comment ' - hex-3-yne')
(cl-comment 'Hexyne has four BRANCHED isomers:')
(cl-comment ' - 3_methyl_1_pentyne')
(cl-comment ' - 3_3_dimethyl_1_butyne')
(cl-comment ' - 4_methyl_2_pentyne')
(cl-comment ' - 4_methyl_1_pentyne')

(cl-comment 'http://www.stenutz.eu/chem/solv6.php?name=1-hexyne')

(forall (x)
	(iff (or (hexyne x)(1_hexyne x)(butylacetylene x))
		(hex_1_yne x)))

(forall (x)
	(iff (hex_1_yne x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(end c1 x)
					(end c6 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(singlebond b4 c4 c5)
					(triplebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (or (2_hexyne x)(methylpropylacetylene x))
		(hex_2_yne x)))

(forall (x)
	(iff (hex_2_yne x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(end c1 x)
					(end c6 x)
					(singlebond b1 c1 c2)
					(triplebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(singlebond b4 c4 c5)
					(singlebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (or (3_hexyne x)(diethylacetylene x))
		(hex_3_yne x)))

(forall (x)
	(iff (hex_3_yne x)
		(and (chain x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(end c1 x)
					(end c6 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(triplebond b3 c3 c4)
					(singlebond b4 c4 c5)
					(singlebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (3_methyl_1_pentyne x)
		(and (branchedgroup x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(fork c3 x)
					(triplebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(singlebond b4 c3 c5)
					(singlebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (or (t_butylacetylene x)(tert_butylacetylene x))
		(3_3_dimethyl_1_butyne x)))

(forall (x)
	(iff (3_3_dimethyl_1_butyne x)
		(and (branchedgroup x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(fork c3 x)
					(triplebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c3 c4)
					(singlebond b4 c3 c5)
					(singlebond b5 c3 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))

(forall (x)
	(iff (4_methyl_2_pentyne x)
		(and (branchedgroup x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(fork c2 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c2 c4)
					(doublebond b4 c4 c5)
					(singlebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))
							
(forall (x)
	(iff (isobutylethyne x)
		(4_methyl_1_pentyne x)))
		
(forall (x)
	(iff (4_methyl_1_pentyne x)
		(and (branchedgroup x)(unsaturated x)
			(exists (c1 c2 c3 c4 c5 c6 b1 b2 b3 b4 b5)
				(and (carbon c1)(carbon c2)(carbon c3)(carbon c4)(carbon c5)(carbon c6)
					(not (= c1 c2))(not (= c1 c3))(not (= c1 c4))(not (= c1 c5))(not (= c1 c6))
					(not (= c2 c3))(not (= c2 c4))(not (= c2 c5))(not (= c2 c6))
					(not (= c3 c4))(not (= c3 c5))(not (= c3 c6))
					(not (= c4 c5))(not (= c4 c6))
					(not (= c5 c6))
					(fork c2 x)
					(singlebond b1 c1 c2)
					(singlebond b2 c2 c3)
					(singlebond b3 c2 c4)
					(singlebond b4 c4 c5)
					(doublebond b5 c5 c6)
					(forall (y)
						(iff (inGroup y x)
							(or (= y c1)(= y c2)(= y c3)(= y c4)(= y c5)(= y c6)))))))))
							
)