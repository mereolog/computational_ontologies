if(Mace4).
  assign(max_seconds, 30).
end_if.

if(Prover9).
  assign(max_seconds, 60).
end_if.

formulas(assumptions).

%cem
(all x
	(part(x,x))).

(all x all y
	((part(x,y)
	& part(y,x))
	->
	(x=y))).

(all x all y all z
	((part(x,y)
	& part(y,z))
	->
	part(x,z))).

(all x all y
	(ppart(x,y)
	<->
	(part(x,y)
	& -part(y,x)))).

(all x all y
	(overlaps(x,y)
	<->
	(exists z
		(part(z,x)
		& part(z,y))))).



(all x all y
	(underlaps(x,y)
	<->
	(exists z
		(part(x,z)
		& part(y,z))))).

(all x all y
	(-part(x,y)
	->
	(exists z
		(part(z,x)
		& -overlaps(z,y))))).

(all x all y
	(underlaps(x,y)
	->
	(exists z
		(all v
			(overlaps(v,z)
			<->
			(overlaps(v,x) | overlaps(v,y))))))).

(all x all y
	(overlaps(x,y)
	->
	(exists z
		(all v
			(ppart(v,z)
			<->
			(ppart(v,x) | ppart(v,y))))))).

(all x all y all z
        (sum(x,y,z)
        <->
                (all v
                        (overlaps(v,z)
                        <->
                        (overlaps(v,x)
                        | overlaps(v,y)))))).

%translation definition


(all x (edge(x) <-> (
	exists y exists z(
		atom(y) & atom(z) & (y!=z) & sum(y,z,x)
	)
))).

(all x all y (part(x,y) <-> sum(x,y,y))).

(all x all y all z all l (
	(atom(x) & atom(y) & atom(z) & edge(l) & 
	part(x,l) & part(y,l) & part(z,l))
	->
	(z=x|z=y|x=y)
)).

(all x all y all z (
	(atom(x) & atom(y) & part(x,z) & part(y,z) & edge(z))
	->
	sum(x,y,z)
)).

(all x all y all z all u (
	(sum(x,y,z) & sum(x,y,u))
	->
	z = u
)).

end_of_list.


formulas(goals).

%unique_line
%(all p1 all p2 all l1 all l2(
%    (point(p1) & point(p2) & line(l1) & line(l2) & 
%    in(p1,l1) & in(p1,l2) & in(p2,l1) & in(p2,l2))
%    ->
%    (p1=p2 | l1=l2)
%)).

(all p1 all p2 all l1 all l2 (
	((atom(p1) & atom(p2) & edge(l1) & edge(l2) & 
	part(p1,l1) & part(p1,l2) & part(p2,l1) & part(p2,l2)))
	->
	(p1=p2 | l1=l2)
)).

end_of_list.