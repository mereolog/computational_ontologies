% Saved by Prover9-Mace4 Version 0.5B, March 2008 (Dec 2007 LADR).

set(ignore_option_dependencies). % GUI handles dependencies

if(Prover9). % Options for Prover9
  assign(max_seconds, 60).
end_if.

if(Mace4).   % Options for Mace4
  assign(max_seconds, 60).
end_if.

formulas(assumptions).
%codi
%CD-A1
(all x all y
	(Cont(x,y)
	-> 
	(<(x,y) | EqDim(x,y)))
).

%D-A6
(exists x (point(x))).

%D-A1
(all x (-<(x,x))).

%D-A2
(all x all y (<(x,y) -> -<(y,x))).

%D-A3
(all x all y all z
		((<(x,y) & <=(y,z))
		->
		<(x,z)
)).

%D-A4
%(all x all y ((ZEX(x) & ZEX(y)) -> (x = y))).

%D-A5
%(all x all y ((ZEX(x) & -ZEX(y)) -> <(x,y))).

% C-A1
%(all x ((-(ZEX(x)) <-> Cont(x, x)))).

% C-A2
(all x all y ((Cont(x, y) & Cont(y, x) -> (x = y)))).

% C-A3
(all x all y all z ((Cont(x, y) & Cont(y, z) -> Cont(x, z)))).

% C-A4
%(all x all y ((ZEX(x) -> -(Cont(y, x)) & -(Cont(x, y))))).


(all x (ArealRegion(x) -> all y (Curve(y) <-> Covers(x,y)))).
(all x all y ((Curve(y) & Covers(x,y)) -> ArealRegion(x))).

(all x (Curve(x) -> (-point(x) & all y (point(y) <-> Covers(x,y))))).
(all x ((-point(x) & all y(point(y) <-> Covers(x,y)) & exists z (point(z))) -> Curve(x))).

(all x all y (Covers(x,y) <-> (
    <(y,x) & all z (
        -(<(y,z) & <(z,x))
    )
))).

(all x (point(x) | Curve(x) | ArealRegion(x))).

%translation definition of CODI
(all x (Curve(x) <-> line(x))).
(all x (ArealRegion(x) <-> plane(x))).
(all x all y (Cont(x,y) <-> part(x,y))).

(all x all y 
	(<(x,y)
	<->
	((point(x) & (line(y) | plane(y)))
	| (line(x) & plane(y))
	)
	)
).

(all x all y
	(EqDim(x,y)
	<->
	((point(x) & point(y))
	| (line(x) & line(y))
	| (plane(x) & plane(y))
	)
	)
).

(all x all y (Cont(x,y) <-> part(x,y))).

(all x all y (<=(x,y) <-> (<(x,y) | EqDim(x,y)))).

(all x all y (<=(x,y) <-> leq(x,y))).

%weak quadripartite incidence
(all x all y (in(x,y) -> in(y,x))).

(all x (in(x,x))).

(all p (point(p) -> (-line(p) & -plane(p)))).

(all x (line(x) -> -plane(x))).

%(all x (plane(x) -> -space(x))).

(all x all y 
	((in(x,y) & point(x) & point(y))
	->
	(x = y))).

(all x all y 
	((in(x,y) & line(x) & line(y))
	->
	(x = y))).

(all x all y 
	((in(x,y) & plane(x) & plane(y))
	->
	(x = y))).

%m-mereology
(all x (part(x,x))).

(all x all y 
	((part(x,y) & part(y,x))
	->
	(x = y)
)). 

(all x all y all z
		((part(x,y) & part(y,z))
		->
		part(x,z))
).

end_of_list.

formulas(goals).

(all x all y (in(x,y) -> (leq(x,y) | leq(y,x)))).

end_of_list.