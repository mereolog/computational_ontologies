/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved. 
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Torsten Hahmann - initial implementation
 *******************************************************************************/

(cl-text https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/multidim_space_codib/codib_simple_curves.clif

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/multidim_space_codi/definitions/point.clif)

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/multidim_space_codi/definitions/simple_curve.clif)

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/multidim_space_codib/definitions/simple_curve_segment.clif)

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/multidim_space_codib/definitions/simple_loop_curve.clif)

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/multidim_space_codib/definitions/simple_ray_curve.clif)

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/multidim_space_codib/definitions/simple_infinite_curve.clif)

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/multidim_space_codib/definitions/closed.clif)

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/multidim_space_codib/codib.clif)



(cl-comment 'Postulates that any two points on a simple, i.e. non-branching curve, define a simple curve segment that is part of the simple curve.')


(forall (x y z)
	(if
		(and
			(SimpleCurve x)
			(Cont y x)
			(Cont z x)
			(not (= y z))
		)
		(exists (v)
			(and
				(SimpleCurveSegment v)
				(P v x)
				(BCont y v)
				(BCont z v)
			)
		)
	)
)


(cl-comment 'A simple curve is either a simple curve segment, loop curve, ray curve, or infinite curve.')


(forall (x)
	(iff
		(SimpleCurve x)
		(or
			(SimpleCurveSegment x)
			(SimpleLoopCurve x)
			(SimpleRayCurve x)
			(SimpleInfiniteCurve x)
		)
	)
)



)