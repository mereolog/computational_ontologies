/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved. 
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger - initial implementation
 *******************************************************************************/

(cl-text https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/vision_cardworld/kernel.clif

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/vision_cardworld/scene.clif)

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/vision_cardworld/image.clif)

(cl-comment 'All elements are either scene objects or image objects.')
(forall (x) 
	(iff 	(scene_object x) 
		(not (image_object x))))

(cl-comment 'Depiction is a relation between image objects and scene objects.')
(forall (i s) 
	(if 	(depicts i s) 
		(and 	(image_object i) 
			(scene_object s))))

(cl-comment 'Points are depicted by pixels.')
(forall (i s) 
	(if 	(and 	(point s) 
			(depicts i s)) 
		(pixel i)))

(cl-comment 'Edges are depicted by lines.')
(forall (i s) 
	(if 	(and 	(edge s) 
			(depicts i s)) 
		(line i)))

(cl-comment 'Surfaces are depicted by regions.')
(forall (i s) 
	(if 	(and 	(surface s) 
			(depicts i s)) 
		(region i)))

(cl-comment 'Lines do not depict points or surfaces.')
(forall (i s) 
	(if 	(and 	(line i) 
			(depicts i s)) 
		(and 	(not (point s)) 
			(not (surface s)))))

(cl-comment 'Pixels do not depict edges or surfaces.')
(forall (i s) 
	(if 	(and 	(pixel i) 
			(depicts i s)) 
		(and 	(not (edge s)) 
			(not (surface s)))))

(cl-comment 'Regions do not depict points or edges.')
(forall (i s) 
	(if 	(and 	(region i) 
			(depicts i s)) 
		(and 	(not (point s)) 
			(not (edge s)))))

(cl-comment 'If an edge is depicted, then there exists a point contained in the edge which is depicted by a pixel in the line depicting the edge.')
(forall (l e) 
	(if 	(and 	(depicts l e) 
			(line l) 
			(edge e)) 
		(exists (p q) 
			(and 	(part p e) 
				(in q l) 
				(depicts q p)))))

(cl-comment 'If a line is in two regions, then the surface containing the edge depicted by the line is depicted by one of these two regions.')
(forall (l e s r t) 
	(if 	(and 	(depicts l e) 
			(part e s) 
			(in l r) 
			(in l t) 
			(not (= r t))) 
		(or 	(depicts r s) 
			(depicts t s))))

)
