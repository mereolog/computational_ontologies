/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved.
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger - initial implementation
*******************************************************************************/


(cl-text https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/combinatorial_semigroup/theoryF.clif

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/tupper/magma/semigroup.clif)

(forall (x y z)
	(if	(= (op x y) (op x z))
		(= y z)))

(forall (x y z)
	(if	(= (op x z) (op y z))
		(= x y)))

(forall (z)
	(or	(generator z)
		(exists (x y)
			(and	(generator y)
				(= z (op x y))))))

(forall (x y z w)
	(if	(and	(generator w)
			(generator z)
			(= (op x w) (op y z)))
		(= w z)))

(forall (x y)
	(not (= (x (op x y)))))

)
