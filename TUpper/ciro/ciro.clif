/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved. 
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Riley Moher - initial implementation
 *******************************************************************************/

(cl-text https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/ciro/ciro.clif

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/psl_subactivity/subactivity.clif)
(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/psl_complex/complex.clif)
(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/psl_actocc/actocc.clif)

(cl-comment '--------Structural Definition Axioms--------')

(cl-comment 'An action plan is an activity assigned to a compliance issue')

(forall (x)
	(iff	(action_plan x)
			(and 	(activity x)
					(exists (y)
					(compliance_issue y)
					(assigned_to x y)))))
					
(cl-comment 'Compliance issues are objects')
(forall (x)
	(if 	(compliance_issue x)
			(object x)))
															
(cl-comment 'Action plans are assigned to at most one compliance issue')

(forall (x y)
	(if		(assigned_to x y)
			(and	(action_plan x)
					(compliance_issue y)
					(forall (z)
						(if		(assigned_to z y)
								(= z x)))))
					
(cl-comment 'All action plans are assigned to at least one compliance issue')					

(forall (x)
	(if		(action_plan x)
			(exists (y)
				(and	(compliance_issue(y))
						(assigned_to x y)))))
						
(cl-comment 'A step for remediation is the primitive subactivity of an action plan')	
			
(forall (x)		
	(if 	(step_for_remediation x)
			(exists (y)
				(and	(action_plan y)
						(subactivity x y)
						(primitive x)))))			
			
(cl-comment 'Every action plan consists of at least one step for remediation')					

(forall (x)
	(if		(action_plan x)
			(exists (y)
			(and	(step_for_remediation y)
					(subactivity y x)))))
					
(cl-comment 'Compliance issues and Action plans are the monitoring objects')
(forall (x)
	(iff	(monitoring_object x)
			(or		(compliance_issue x)
					(action_plan x))))
					
(cl-comment 'Compliance issues and action plans are assigned a unique monitor activity')
(forall (x)
	(if 	(monitoring_object x)
			(exists (a)
				(and 	(monitor_activity a x)
						(forall (a1)
							(if		(monitor_activity a1 x)
									(a1 = a)))))))

(cl-comment 'Monitor activities are activities which apply only to monitoring objects')
(forall (x y)
	(if		(monitor_activity x y)
			(and	(activity x)
					(monitoring_object x))))
		
(cl-comment 'Material change is an activity within a monitor activity)
(forall (x)
	(if		(material_change x)
			(and	(activity (material_change x))
					(exists (a)
						(and	(monitor_activity a x)
								(subactivity (effective_challenge x) a))))))
							
(cl-comment 'Completion is a class of material change activity')
(forall (x)
	(if	(completion x)
		(material_change x)))
		
(cl-comment 'Validation is a class of material change activity')
(forall (x)
	(if	(validation x)
		(material_change x)))
														
(cl-comment 'Effective challenge is an activity within a monitor activity)
(forall (x)
	(if		(effective_challenge x)
			(and	(activity (effective_challenge x))
					(exists (a)
						(and	(monitor_activity a x)
								(subactivity (effective_challenge x) a))))))
			
(cl-comment 'Approval is an activity within a monitor activity)
(forall (x)
	(if		(approval x)
			(and	(activity (effective_challenge x))
					(exists (a)
						(and	(monitor_activity a x)
								(subactivity (effective_challenge x) a))))))						

(cl-comment 'Rejection is an activity within a monitor activity)
(forall (x)
	(if		(rejection x)
			(and	(activity (effective_challenge x))
					(exists (a)
						(and	(monitor_activity a x)
								(subactivity (effective_challenge x) a))))))


(cl-comment '---------Ordering Constraint Axioms--------')							
						
(cl-comment 'Material change occurrences must be followed by an effective challenge occurrence')

(forall (o1 x a)
	(if	(and	(occurrence_of o1 (material_change x))
				(legal o1)
				(monitor_activity a x)
		(exists (y o2)
			(and	(occurrence_of o2 (effective_challenge y))
					(legal o2)
					(next_subocc o1 o2 a))))))

(cl-comment 'Effective_challenge occurrences result in either an approval or a rejection')

(forall (o1 x a)
	(if	(and	(occurrence_of o1 (effective_challenge x))
				(legal o1)
				(monitor_activity a x)
		(exists (y o2)
			(and	(or		(occurrence_of o2 (approval y))
							(occurrence_of o2 (rejection y)))
					(legal o2)
					(next_subocc o1 o2 a))))))
				
(cl-comment 'A Compliance issue will be validated after all of its assigned action plans are completed')
(forall (o x t)
	(if 	(and	(occurrence_of o (validation x))
					(legal o)
			(forall (y o1)
				(if		(and	(action_plan y)
								(assigned_to y x)
								(occurrence_of o1 y)
								(legal o1))
						(earlier endof(o1) o)))))
						
(cl-comment 'The status_of function relates monitoring objects to points in time')

(forall (x t)
	(if 	(status_of x t)	
			(and	(timepoint t)
					(monitoring_object x))))

							
(cl-comment '--------Status Value Axioms--------')
							
(cl-comment 'A Compliance issue or action plan has status 'Draft' at a point in time if and only if there has been:
no effective challenge occurrences 
applying to that issue/plan')

(forall (x t)
	(iff	(= (status_of x t) 'Draft')
			(exists o a
				(and	(monitor_activity a x)
						(occurrence_of o a)
						(forall (o1)
						(and	(occurrence_of o1 (effective_challenge x))
								(subactivity_occurrence o1 o))
								(earlier t (beginof o1)))))))	
						
(cl-comment 'A Compliance issue or action plan has status 'Revise - Under Review' at a point in time if and only if there has been:
one effective challenge occurrence
an ongoing occurrence of effective challenge
applying to that issue/plan')			
										
(forall (x t)
	(iff	(= (status_of x t) 'Revise - Under Review')
			(exists o a o1 o2
				(and	(monitor_activity a x)
						(occurrence_of o a)
						(occurrence_of o1 (material_change x))
						(subactivity_occurrence o1 o)
						(occurrence_of o2 (effective_challenge x))
						(next_subocc o1 o2)
						(earlier (endof o1) t)
						(earlier t (endof o2))))))																				

)