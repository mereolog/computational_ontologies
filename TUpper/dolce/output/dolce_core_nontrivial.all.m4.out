============================== Mace4 =================================
Mace4 (32) version Oct-2007, Oct 2007.
Process 15852 was started by torsten on LAPTOP-UF9R3IH7,
Thu Mar 18 09:01:25 2021
The command was "/cygdrive/c/Users/torsten/macleod/mace4 -v0 -t600 -s60 -n2 -N40 -f C:\Users\torsten\GitHub\colore\ontologies\dolce\conversions\dolce_core_nontrivial.all.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file C:\Users\torsten\GitHub\colore\ontologies\dolce\conversions\dolce_core_nontrivial.all.p9


formulas(sos).
(all x all y (O(x,y) <-> (exists z (P(z,x) & P(z,y))))).
(all x all y all z (Sum(z,x,y) <-> (all w (O(w,z) <-> O(w,x) | O(w,y))))).
(all x P(x,x)).
(all x all y all z (P(x,y) & P(y,z) -> P(x,z))).
(all x all y all z (P(x,y) & P(y,x) -> x = y)).
(all x all y (-P(x,y) -> (exists z (P(z,x) & -O(z,y))))).
(all x all y (Obj(y) & P(x,y) -> Obj(x))).
(all x all y (E(y) & P(x,y) -> E(x))).
(all x all y (Qi(y) & P(x,y) -> Qi(x))).
(all x all y (Sjk(y) & P(x,y) -> Sjk(x))).
(all x all y (C(y) & P(x,y) -> C(x))).
(all x all y all z (Obj(x) & Obj(y) & SUM(z,x,y) -> Obj(z))).
(all x all y all z (E(x) & E(y) & SUM(z,x,y) -> E(z))).
(all x all y all z (Qi(x) & Qi(y) & SUM(z,x,y) -> Qi(z))).
(all x all y all z (Sjk(x) & Sjk(y) & SUM(z,x,y) -> Sjk(z))).
(all x all y all z (C(x) & C(y) & SUM(z,x,y) -> C(z))).
(all x all t all t1 (R(x) & PRE(x,t) & PRE(x,t1) -> (all y (P_t(y,x,t) <-> P_t(y,x,t1))))).
(all x all y all t (sij(x) & sij(y) & PRE(x,t) -> PRE(y,t))).
(all x all y all t (L(x,y,t) -> R(x) & Q(y))).
(all x all y all t (L(x,y,t) -> PRE(y,t))).
(all x all x1 all y all t all t1 (L(x,y,t) & P(t1,t) & L(x1,y,t1) & sij(x) & sij(x1) -> (all t2 (PRE(x,t2) -> P_t(x1,x,t2))))).
(all x all x1 all x2 all y all t all t1 all t2 (L(x1,y,t1) & L(x2,y,t2) & SUM(t,t1,t2) & SUM(x,x1,x2) & sij(x1) & sij(x2) -> L(x,y,t))).
(all x all y all t (L(x,y,t) & Qi(y) -> sij(x))).
(all y all t (Q(y) & PRE(y,t) -> (exists x L(x,y,t)))).
(all x all x1 all y all t (L(x,y,t) & L(x1,y,t) & sjk(x) & sjk(x1) -> x = x1)).
(all x all y all t all t1 (L(x,y,t) & PRE(y,t1) & sjk(x) -> (exists x1 (L(x1,y,t1) & sjk(x1))))).
(all x all x1 all y all y1 all t (L(x,y,t) & CC(x1,x,t) & CC(y1,y,t) -> L(x1,y1,t))).
(all x all y all t (PC(x,y,t) -> Obj(x) & E(x))).
(all x all t (E(x) & PRE(x,t) -> (exists y PC(y,x,t)))).
(all x all t (Obj(x) & PRE(x,t) -> (exists y PC(y,x,t)))).
(all x all y all y1 all t (PC(x,y,t) & P_t(y,y1,t) & E(y1) -> PC(x,y1,t))).
(all x all x1 all y all t (PC(x,y,t) & P_t(x1,x,t) -> PC(x1,y,t))).
(all x all y all v all z (I(x,y) & Qi(x) & E(y) & I(z,v) & Qj(z) & Obj(v) -> -Qj(x) & -Qi(z))).
(all x all y all t (L(x,y,t) & TQ(y) -> x = t)).
(all x (E(x) -> (exists y (TQ(y) & I(y,x))))).
(all x all y all t (CF(x,y,t) -> c(x))).
(all x all y all t (CF(x,y,t) -> PRE(y,t))).
(all x all t all t1 (c(x) & PRE(x,t) & PRE(x,t1) -> (all y (P_t(x,y,t) <-> P_t(y,x,t1))))).
(all x all y (I(x,y) -> Q(x))).
(all x all y all y1 (I(x,y) & I(x,y1) -> y = y1)).
(all x (Q(x) -> (exists y I(x,y)))).
(all x all y (I(x,y) -> (all t (PRE(x,t) <-> PRE(y,t))))).
(all x all x1 all y (I(x,y) & I(x1,y) & Qi(x) & Qi(x1) -> x = x1)).
(all x all y all t (CC(x,y,t) -> (exists z (I(z,x) & Qi(z) <-> (exists z1 (I(z1,y) & Qi(z1))))))).
(all x all y all z all t all z1 (CC(x,y,t) & I(z,x) & I(z1,y) & Qi(z) & Qi(z1) -> CC(z,z1,t))).
(all x all y all v all w all z all s (I(x,y) & I(v,w) & Qi(x) & Sum(z,x,v) & Sum(s,y,w) -> I(z,s))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
(all x (Obj(x) | E(x) | Q(x) | R(x) | C(x) | AS(x) -> PT(x))).
(all x (PT(x) -> (exists t PRE(x,t)))).
(all x all y all t (O_t(x,y,t) <-> (exists z (P_t(z,x,t) & P_t(z,y,t))))).
(all x all y all t (P_t(x,y,t) -> PRE(x,t) & PRE(y,t))).
(all x all t (PRE(x,t) -> P_t(x,x,t))).
(all x all y all z all t (P_t(x,y,t) & P_t(y,z,t) -> P_t(x,z,t))).
(all x all y all t (PRE(x,t) & PRE(y,t) & -P_t(x,y,t) -> (exists z (P_t(z,x,t) & -O_t(z,y,t))))).
(all x all y all t (Obj(y) & P_t(x,y,t) -> Obj(x))).
(all x all y all t (E(y) & P_t(x,y,t) -> E(x))).
(all x all y all t (Qi(y) & P_t(x,y,t) -> Qi(x))).
(all x all y all t (Sjk(y) & P_t(x,y,t) -> Sjk(x))).
(all x all y all t (C(y) & P_t(x,y,t) -> C(x))).
(all x all y all t (CC(x,y,t) <-> P_t(x,y,t) & P_t(y,x,t))).
(all x all y (CP(x,y) <-> (exists t PRE(x,t)) & (all t (PRE(x,t) -> P_t(x,y,t))))).
(all x all y ((exists t PRE(x,t)) -> (CP(x,y) <-> P(x,y)))).
(exists var1 exists var2 exists var3 (SUM(var1,var2,var3) & var1 != var2 & var1 != var3 & var2 != var3)).
(exists var4 exists var5 exists var6 (-SUM(var4,var5,var6) & var4 != var5 & var4 != var6 & var5 != var6)).
(exists var7 exists var8 (P(var7,var8) & var7 != var8)).
(exists var9 exists var10 (-P(var9,var10) & var9 != var10)).
(exists var11 NPED(var11)).
(exists var12 -NPED(var12)).
(exists var13 TR(var13)).
(exists var14 -TR(var14)).
(exists var15 exists var16 exists var17 (Sum(var15,var16,var17) & var15 != var16 & var15 != var17 & var16 != var17)).
(exists var18 exists var19 exists var20 (-Sum(var18,var19,var20) & var18 != var19 & var18 != var20 & var19 != var20)).
(exists var21 exists var22 (U(var21,var22) & var21 != var22)).
(exists var23 exists var24 (-U(var23,var24) & var23 != var24)).
(exists var25 exists var26 (DJ(var25,var26) & var25 != var26)).
(exists var27 exists var28 (-DJ(var27,var28) & var27 != var28)).
(exists var29 AQ(var29)).
(exists var30 -AQ(var30)).
(exists var31 NASO(var31)).
(exists var32 -NASO(var32)).
(exists var33 F(var33)).
(exists var34 -F(var34)).
(exists var35 SL(var35)).
(exists var36 -SL(var36)).
(exists var37 sij(var37)).
(exists var38 -sij(var38)).
(exists var39 NPOB(var39)).
(exists var40 -NPOB(var40)).
(exists var41 PT(var41)).
(exists var42 -PT(var42)).
(exists var43 AS(var43)).
(exists var44 -AS(var44)).
(exists var45 ACH(var45)).
(exists var46 -ACH(var46)).
(exists var47 exists var48 exists var49 (P_t(var47,var48,var49) & var47 != var48 & var47 != var49 & var48 != var49)).
(exists var50 exists var51 exists var52 (-P_t(var50,var51,var52) & var50 != var51 & var50 != var52 & var51 != var52)).
(exists var53 TQ(var53)).
(exists var54 -TQ(var54)).
(exists var55 R(var55)).
(exists var56 -R(var56)).
(exists var57 AB(var57)).
(exists var58 -AB(var58)).
(exists var59 ASO(var59)).
(exists var60 -ASO(var60)).
(exists var61 MOB(var61)).
(exists var62 -MOB(var62)).
(exists var63 ACC(var63)).
(exists var64 -ACC(var64)).
(exists var65 PED(var65)).
(exists var66 -PED(var66)).
(exists var67 sjk(var67)).
(exists var68 -sjk(var68)).
(exists var69 Qj(var69)).
(exists var70 -Qj(var70)).
(exists var71 M(var71)).
(exists var72 -M(var72)).
(exists var73 PQ(var73)).
(exists var74 -PQ(var74)).
(exists var75 APO(var75)).
(exists var76 -APO(var76)).
(exists var77 exists var78 (PP(var77,var78) & var77 != var78)).
(exists var79 exists var80 (-PP(var79,var80) & var79 != var80)).
(exists var81 SC(var81)).
(exists var82 -SC(var82)).
(exists var83 exists var84 (I(var83,var84) & var83 != var84)).
(exists var85 exists var86 (-I(var85,var86) & var85 != var86)).
(exists var87 exists var88 exists var89 (O_t(var87,var88,var89) & var87 != var88 & var87 != var89 & var88 != var89)).
(exists var90 exists var91 exists var92 (-O_t(var90,var91,var92) & var90 != var91 & var90 != var92 & var91 != var92)).
(exists var93 AtP(var93)).
(exists var94 -AtP(var94)).
(exists var95 exists var96 exists var97 (CC(var95,var96,var97) & var95 != var96 & var95 != var97 & var96 != var97)).
(exists var98 exists var99 exists var100 (-CC(var98,var99,var100) & var98 != var99 & var98 != var100 & var99 != var100)).
(exists var101 ED(var101)).
(exists var102 -ED(var102)).
(exists var103 Q(var103)).
(exists var104 -Q(var104)).
(exists var105 STV(var105)).
(exists var106 -STV(var106)).
(exists var107 PR(var107)).
(exists var108 -PR(var108)).
(exists var109 PD(var109)).
(exists var110 -PD(var110)).
(exists var111 Qi(var111)).
(exists var112 -Qi(var112)).
(exists var113 c(var113)).
(exists var114 -c(var114)).
(exists var115 T(var115)).
(exists var116 -T(var116)).
(exists var117 AR(var117)).
(exists var118 -AR(var118)).
(exists var119 EV(var119)).
(exists var120 -EV(var120)).
(exists var121 exists var122 (PRE(var121,var122) & var121 != var122)).
(exists var123 exists var124 (-PRE(var123,var124) & var123 != var124)).
(exists var125 ST(var125)).
(exists var126 -ST(var126)).
(exists var127 C(var127)).
(exists var128 -C(var128)).
(exists var129 PRO(var129)).
(exists var130 -PRO(var130)).
(exists var131 SOB(var131)).
(exists var132 -SOB(var132)).
(exists var133 Sjk(var133)).
(exists var134 -Sjk(var134)).
(exists var135 exists var136 exists var137 (L(var135,var136,var137) & var135 != var136 & var135 != var137 & var136 != var137)).
(exists var138 exists var139 exists var140 (-L(var138,var139,var140) & var138 != var139 & var138 != var140 & var139 != var140)).
(exists var141 Obj(var141)).
(exists var142 -Obj(var142)).
(exists var143 exists var144 exists var145 (CF(var143,var144,var145) & var143 != var144 & var143 != var145 & var144 != var145)).
(exists var146 exists var147 exists var148 (-CF(var146,var147,var148) & var146 != var147 & var146 != var148 & var147 != var148)).
(exists var149 TL(var149)).
(exists var150 -TL(var150)).
(exists var151 exists var152 (CP(var151,var152) & var151 != var152)).
(exists var153 exists var154 (-CP(var153,var154) & var153 != var154)).
(exists var155 E(var155)).
(exists var156 -E(var156)).
(exists var157 exists var158 exists var159 (PC(var157,var158,var159) & var157 != var158 & var157 != var159 & var158 != var159)).
(exists var160 exists var161 exists var162 (-PC(var160,var161,var162) & var160 != var161 & var160 != var162 & var161 != var162)).
(exists var163 exists var164 (O(var163,var164) & var163 != var164)).
(exists var165 exists var166 (-O(var165,var166) & var165 != var166)).
(exists var167 POB(var167)).
(exists var168 -POB(var168)).
(exists var169 S(var169)).
(exists var170 -S(var170)).
(exists var171 SAG(var171)).
(exists var172 -SAG(var172)).
(exists var173 NAPO(var173)).
(exists var174 -NAPO(var174)).
(all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))).
(all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))).
(all x all t (PRE(x,t) -> T(t))).
(all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (P(x,y) -> (T(x) <-> T(y)))).
(all x all y (T(x) -> P(x,x))).
(all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)).
(all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))).
(all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))).
(all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))).
(all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))).
(all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))).
(all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))).
(all x (T(x) -> (AtP(x) <-> (all y (T(y) & P(y,x) -> y = x))))).
(all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))).
(all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))).
(all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))).
(all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))).
(all x (PED(x) | NPED(x) | AS(x) -> ED(x))).
(all x (EV(x) | STV(x) -> PD(x))).
(all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))).
(all x (R(x) -> AB(x))).
(all x (M(x) | F(x) | POB(x) -> PED(x))).
(all x (NPOB(x) -> NPED(x))).
(all x (ACH(x) | ACC(x) -> EV(x))).
(all x (ST(x) | PRO(x) -> STV(x))).
(all x (TL(x) -> TQ(x))).
(all x (SL(x) -> PQ(x))).
(all x (TR(x) | PR(x) | AR(x) -> R(x))).
(all x (APO(x) | NAPO(x) -> POB(x))).
(all x (MOB(x) | SOB(x) -> NPOB(x))).
(all x (T(x) -> TR(x))).
(all x (S(x) -> PR(x))).
(all x (ASO(x) | NASO(x) -> SOB(x))).
(all x (SAG(x) | SC(x) -> ASO(x))).
(all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))).
(all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))).
(all x (PD(x) -> -Q(x) & -AB(x))).
(all x (Q(x) -> -AB(x))).
(all x (ED(x) <-> PED(x) | NPED(x) | AS(x))).
(all x (PED(x) -> -NPED(x) & -AS(x))).
(all x (NPED(x) -> -AS(x))).
(all x (PD(x) <-> EV(x) | STV(x))).
(all x (EV(x) -> -STV(x))).
(all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))).
(all x (TQ(x) -> -PQ(x) & -AQ(x))).
(all x (PQ(x) -> -AQ(x))).
(all x (PED(x) <-> M(x) | F(x) | POB(x))).
(all x (M(x) -> -F(x) & -POB(x))).
(all x (F(x) -> -POB(x))).
(all x (EV(x) <-> ACH(x) | ACC(x))).
(all x (ACH(x) -> -ACC(x))).
(all x (STV(x) <-> ST(x) | PRO(x))).
(all x (ST(x) -> -PRO(x))).
(all x (R(x) <-> TR(x) | PR(x) | AR(x))).
(all x (TR(x) -> -PR(x) & -AR(x))).
(all x (PR(x) -> -AR(x))).
(all x (POB(x) <-> APO(x) | NAPO(x))).
(all x (APO(x) -> -NAPO(x))).
(all x (NPOB(x) <-> MOB(x) | SOB(x))).
(all x (MOB(x) -> -SOB(x))).
(all x (SOB(x) <-> ASO(x) | NASO(x))).
(all x (ASO(x) -> -NASO(x))).
(all x (ASO(x) <-> SAG(x) | SC(x))).
(all x (SAG(x) -> -SC(x))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).

% From the command line: assign(domain_size, 2).

% From the command line: assign(iterate_up_to, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x all y (O(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
2 (all x all y all z (Sum(z,x,y) <-> (all w (O(w,z) <-> O(w,x) | O(w,y))))) # label(non_clause).  [assumption].
3 (all x P(x,x)) # label(non_clause).  [assumption].
4 (all x all y all z (P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
5 (all x all y all z (P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
6 (all x all y (-P(x,y) -> (exists z (P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
7 (all x all y (Obj(y) & P(x,y) -> Obj(x))) # label(non_clause).  [assumption].
8 (all x all y (E(y) & P(x,y) -> E(x))) # label(non_clause).  [assumption].
9 (all x all y (Qi(y) & P(x,y) -> Qi(x))) # label(non_clause).  [assumption].
10 (all x all y (Sjk(y) & P(x,y) -> Sjk(x))) # label(non_clause).  [assumption].
11 (all x all y (C(y) & P(x,y) -> C(x))) # label(non_clause).  [assumption].
12 (all x all y all z (Obj(x) & Obj(y) & SUM(z,x,y) -> Obj(z))) # label(non_clause).  [assumption].
13 (all x all y all z (E(x) & E(y) & SUM(z,x,y) -> E(z))) # label(non_clause).  [assumption].
14 (all x all y all z (Qi(x) & Qi(y) & SUM(z,x,y) -> Qi(z))) # label(non_clause).  [assumption].
15 (all x all y all z (Sjk(x) & Sjk(y) & SUM(z,x,y) -> Sjk(z))) # label(non_clause).  [assumption].
16 (all x all y all z (C(x) & C(y) & SUM(z,x,y) -> C(z))) # label(non_clause).  [assumption].
17 (all x all t all t1 (R(x) & PRE(x,t) & PRE(x,t1) -> (all y (P_t(y,x,t) <-> P_t(y,x,t1))))) # label(non_clause).  [assumption].
18 (all x all y all t (sij(x) & sij(y) & PRE(x,t) -> PRE(y,t))) # label(non_clause).  [assumption].
19 (all x all y all t (L(x,y,t) -> R(x) & Q(y))) # label(non_clause).  [assumption].
20 (all x all y all t (L(x,y,t) -> PRE(y,t))) # label(non_clause).  [assumption].
21 (all x all x1 all y all t all t1 (L(x,y,t) & P(t1,t) & L(x1,y,t1) & sij(x) & sij(x1) -> (all t2 (PRE(x,t2) -> P_t(x1,x,t2))))) # label(non_clause).  [assumption].
22 (all x all x1 all x2 all y all t all t1 all t2 (L(x1,y,t1) & L(x2,y,t2) & SUM(t,t1,t2) & SUM(x,x1,x2) & sij(x1) & sij(x2) -> L(x,y,t))) # label(non_clause).  [assumption].
23 (all x all y all t (L(x,y,t) & Qi(y) -> sij(x))) # label(non_clause).  [assumption].
24 (all y all t (Q(y) & PRE(y,t) -> (exists x L(x,y,t)))) # label(non_clause).  [assumption].
25 (all x all x1 all y all t (L(x,y,t) & L(x1,y,t) & sjk(x) & sjk(x1) -> x = x1)) # label(non_clause).  [assumption].
26 (all x all y all t all t1 (L(x,y,t) & PRE(y,t1) & sjk(x) -> (exists x1 (L(x1,y,t1) & sjk(x1))))) # label(non_clause).  [assumption].
27 (all x all x1 all y all y1 all t (L(x,y,t) & CC(x1,x,t) & CC(y1,y,t) -> L(x1,y1,t))) # label(non_clause).  [assumption].
28 (all x all y all t (PC(x,y,t) -> Obj(x) & E(x))) # label(non_clause).  [assumption].
29 (all x all t (E(x) & PRE(x,t) -> (exists y PC(y,x,t)))) # label(non_clause).  [assumption].
30 (all x all t (Obj(x) & PRE(x,t) -> (exists y PC(y,x,t)))) # label(non_clause).  [assumption].
31 (all x all y all y1 all t (PC(x,y,t) & P_t(y,y1,t) & E(y1) -> PC(x,y1,t))) # label(non_clause).  [assumption].
32 (all x all x1 all y all t (PC(x,y,t) & P_t(x1,x,t) -> PC(x1,y,t))) # label(non_clause).  [assumption].
33 (all x all y all v all z (I(x,y) & Qi(x) & E(y) & I(z,v) & Qj(z) & Obj(v) -> -Qj(x) & -Qi(z))) # label(non_clause).  [assumption].
34 (all x all y all t (L(x,y,t) & TQ(y) -> x = t)) # label(non_clause).  [assumption].
35 (all x (E(x) -> (exists y (TQ(y) & I(y,x))))) # label(non_clause).  [assumption].
36 (all x all y all t (CF(x,y,t) -> c(x))) # label(non_clause).  [assumption].
37 (all x all y all t (CF(x,y,t) -> PRE(y,t))) # label(non_clause).  [assumption].
38 (all x all t all t1 (c(x) & PRE(x,t) & PRE(x,t1) -> (all y (P_t(x,y,t) <-> P_t(y,x,t1))))) # label(non_clause).  [assumption].
39 (all x all y (I(x,y) -> Q(x))) # label(non_clause).  [assumption].
40 (all x all y all y1 (I(x,y) & I(x,y1) -> y = y1)) # label(non_clause).  [assumption].
41 (all x (Q(x) -> (exists y I(x,y)))) # label(non_clause).  [assumption].
42 (all x all y (I(x,y) -> (all t (PRE(x,t) <-> PRE(y,t))))) # label(non_clause).  [assumption].
43 (all x all x1 all y (I(x,y) & I(x1,y) & Qi(x) & Qi(x1) -> x = x1)) # label(non_clause).  [assumption].
44 (all x all y all t (CC(x,y,t) -> (exists z (I(z,x) & Qi(z) <-> (exists z1 (I(z1,y) & Qi(z1))))))) # label(non_clause).  [assumption].
45 (all x all y all z all t all z1 (CC(x,y,t) & I(z,x) & I(z1,y) & Qi(z) & Qi(z1) -> CC(z,z1,t))) # label(non_clause).  [assumption].
46 (all x all y all v all w all z all s (I(x,y) & I(v,w) & Qi(x) & Sum(z,x,v) & Sum(s,y,w) -> I(z,s))) # label(non_clause).  [assumption].
47 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
48 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
49 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
50 (all x (Obj(x) | E(x) | Q(x) | R(x) | C(x) | AS(x) -> PT(x))) # label(non_clause).  [assumption].
51 (all x (PT(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
52 (all x all y all t (O_t(x,y,t) <-> (exists z (P_t(z,x,t) & P_t(z,y,t))))) # label(non_clause).  [assumption].
53 (all x all y all t (P_t(x,y,t) -> PRE(x,t) & PRE(y,t))) # label(non_clause).  [assumption].
54 (all x all t (PRE(x,t) -> P_t(x,x,t))) # label(non_clause).  [assumption].
55 (all x all y all z all t (P_t(x,y,t) & P_t(y,z,t) -> P_t(x,z,t))) # label(non_clause).  [assumption].
56 (all x all y all t (PRE(x,t) & PRE(y,t) & -P_t(x,y,t) -> (exists z (P_t(z,x,t) & -O_t(z,y,t))))) # label(non_clause).  [assumption].
57 (all x all y all t (Obj(y) & P_t(x,y,t) -> Obj(x))) # label(non_clause).  [assumption].
58 (all x all y all t (E(y) & P_t(x,y,t) -> E(x))) # label(non_clause).  [assumption].
59 (all x all y all t (Qi(y) & P_t(x,y,t) -> Qi(x))) # label(non_clause).  [assumption].
60 (all x all y all t (Sjk(y) & P_t(x,y,t) -> Sjk(x))) # label(non_clause).  [assumption].
61 (all x all y all t (C(y) & P_t(x,y,t) -> C(x))) # label(non_clause).  [assumption].
62 (all x all y all t (CC(x,y,t) <-> P_t(x,y,t) & P_t(y,x,t))) # label(non_clause).  [assumption].
63 (all x all y (CP(x,y) <-> (exists t PRE(x,t)) & (all t (PRE(x,t) -> P_t(x,y,t))))) # label(non_clause).  [assumption].
64 (all x all y ((exists t PRE(x,t)) -> (CP(x,y) <-> P(x,y)))) # label(non_clause).  [assumption].
65 (exists var1 exists var2 exists var3 (SUM(var1,var2,var3) & var1 != var2 & var1 != var3 & var2 != var3)) # label(non_clause).  [assumption].
66 (exists var4 exists var5 exists var6 (-SUM(var4,var5,var6) & var4 != var5 & var4 != var6 & var5 != var6)) # label(non_clause).  [assumption].
67 (exists var7 exists var8 (P(var7,var8) & var7 != var8)) # label(non_clause).  [assumption].
68 (exists var9 exists var10 (-P(var9,var10) & var9 != var10)) # label(non_clause).  [assumption].
69 (exists var11 NPED(var11)) # label(non_clause).  [assumption].
70 (exists var12 -NPED(var12)) # label(non_clause).  [assumption].
71 (exists var13 TR(var13)) # label(non_clause).  [assumption].
72 (exists var14 -TR(var14)) # label(non_clause).  [assumption].
73 (exists var15 exists var16 exists var17 (Sum(var15,var16,var17) & var15 != var16 & var15 != var17 & var16 != var17)) # label(non_clause).  [assumption].
74 (exists var18 exists var19 exists var20 (-Sum(var18,var19,var20) & var18 != var19 & var18 != var20 & var19 != var20)) # label(non_clause).  [assumption].
75 (exists var21 exists var22 (U(var21,var22) & var21 != var22)) # label(non_clause).  [assumption].
76 (exists var23 exists var24 (-U(var23,var24) & var23 != var24)) # label(non_clause).  [assumption].
77 (exists var25 exists var26 (DJ(var25,var26) & var25 != var26)) # label(non_clause).  [assumption].
78 (exists var27 exists var28 (-DJ(var27,var28) & var27 != var28)) # label(non_clause).  [assumption].
79 (exists var29 AQ(var29)) # label(non_clause).  [assumption].
80 (exists var30 -AQ(var30)) # label(non_clause).  [assumption].
81 (exists var31 NASO(var31)) # label(non_clause).  [assumption].
82 (exists var32 -NASO(var32)) # label(non_clause).  [assumption].
83 (exists var33 F(var33)) # label(non_clause).  [assumption].
84 (exists var34 -F(var34)) # label(non_clause).  [assumption].
85 (exists var35 SL(var35)) # label(non_clause).  [assumption].
86 (exists var36 -SL(var36)) # label(non_clause).  [assumption].
87 (exists var37 sij(var37)) # label(non_clause).  [assumption].
88 (exists var38 -sij(var38)) # label(non_clause).  [assumption].
89 (exists var39 NPOB(var39)) # label(non_clause).  [assumption].
90 (exists var40 -NPOB(var40)) # label(non_clause).  [assumption].
91 (exists var41 PT(var41)) # label(non_clause).  [assumption].
92 (exists var42 -PT(var42)) # label(non_clause).  [assumption].
93 (exists var43 AS(var43)) # label(non_clause).  [assumption].
94 (exists var44 -AS(var44)) # label(non_clause).  [assumption].
95 (exists var45 ACH(var45)) # label(non_clause).  [assumption].
96 (exists var46 -ACH(var46)) # label(non_clause).  [assumption].
97 (exists var47 exists var48 exists var49 (P_t(var47,var48,var49) & var47 != var48 & var47 != var49 & var48 != var49)) # label(non_clause).  [assumption].
98 (exists var50 exists var51 exists var52 (-P_t(var50,var51,var52) & var50 != var51 & var50 != var52 & var51 != var52)) # label(non_clause).  [assumption].
99 (exists var53 TQ(var53)) # label(non_clause).  [assumption].
100 (exists var54 -TQ(var54)) # label(non_clause).  [assumption].
101 (exists var55 R(var55)) # label(non_clause).  [assumption].
102 (exists var56 -R(var56)) # label(non_clause).  [assumption].
103 (exists var57 AB(var57)) # label(non_clause).  [assumption].
104 (exists var58 -AB(var58)) # label(non_clause).  [assumption].
105 (exists var59 ASO(var59)) # label(non_clause).  [assumption].
106 (exists var60 -ASO(var60)) # label(non_clause).  [assumption].
107 (exists var61 MOB(var61)) # label(non_clause).  [assumption].
108 (exists var62 -MOB(var62)) # label(non_clause).  [assumption].
109 (exists var63 ACC(var63)) # label(non_clause).  [assumption].
110 (exists var64 -ACC(var64)) # label(non_clause).  [assumption].
111 (exists var65 PED(var65)) # label(non_clause).  [assumption].
112 (exists var66 -PED(var66)) # label(non_clause).  [assumption].
113 (exists var67 sjk(var67)) # label(non_clause).  [assumption].
114 (exists var68 -sjk(var68)) # label(non_clause).  [assumption].
115 (exists var69 Qj(var69)) # label(non_clause).  [assumption].
116 (exists var70 -Qj(var70)) # label(non_clause).  [assumption].
117 (exists var71 M(var71)) # label(non_clause).  [assumption].
118 (exists var72 -M(var72)) # label(non_clause).  [assumption].
119 (exists var73 PQ(var73)) # label(non_clause).  [assumption].
120 (exists var74 -PQ(var74)) # label(non_clause).  [assumption].
121 (exists var75 APO(var75)) # label(non_clause).  [assumption].
122 (exists var76 -APO(var76)) # label(non_clause).  [assumption].
123 (exists var77 exists var78 (PP(var77,var78) & var77 != var78)) # label(non_clause).  [assumption].
124 (exists var79 exists var80 (-PP(var79,var80) & var79 != var80)) # label(non_clause).  [assumption].
125 (exists var81 SC(var81)) # label(non_clause).  [assumption].
126 (exists var82 -SC(var82)) # label(non_clause).  [assumption].
127 (exists var83 exists var84 (I(var83,var84) & var83 != var84)) # label(non_clause).  [assumption].
128 (exists var85 exists var86 (-I(var85,var86) & var85 != var86)) # label(non_clause).  [assumption].
129 (exists var87 exists var88 exists var89 (O_t(var87,var88,var89) & var87 != var88 & var87 != var89 & var88 != var89)) # label(non_clause).  [assumption].
130 (exists var90 exists var91 exists var92 (-O_t(var90,var91,var92) & var90 != var91 & var90 != var92 & var91 != var92)) # label(non_clause).  [assumption].
131 (exists var93 AtP(var93)) # label(non_clause).  [assumption].
132 (exists var94 -AtP(var94)) # label(non_clause).  [assumption].
133 (exists var95 exists var96 exists var97 (CC(var95,var96,var97) & var95 != var96 & var95 != var97 & var96 != var97)) # label(non_clause).  [assumption].
134 (exists var98 exists var99 exists var100 (-CC(var98,var99,var100) & var98 != var99 & var98 != var100 & var99 != var100)) # label(non_clause).  [assumption].
135 (exists var101 ED(var101)) # label(non_clause).  [assumption].
136 (exists var102 -ED(var102)) # label(non_clause).  [assumption].
137 (exists var103 Q(var103)) # label(non_clause).  [assumption].
138 (exists var104 -Q(var104)) # label(non_clause).  [assumption].
139 (exists var105 STV(var105)) # label(non_clause).  [assumption].
140 (exists var106 -STV(var106)) # label(non_clause).  [assumption].
141 (exists var107 PR(var107)) # label(non_clause).  [assumption].
142 (exists var108 -PR(var108)) # label(non_clause).  [assumption].
143 (exists var109 PD(var109)) # label(non_clause).  [assumption].
144 (exists var110 -PD(var110)) # label(non_clause).  [assumption].
145 (exists var111 Qi(var111)) # label(non_clause).  [assumption].
146 (exists var112 -Qi(var112)) # label(non_clause).  [assumption].
147 (exists var113 c(var113)) # label(non_clause).  [assumption].
148 (exists var114 -c(var114)) # label(non_clause).  [assumption].
149 (exists var115 T(var115)) # label(non_clause).  [assumption].
150 (exists var116 -T(var116)) # label(non_clause).  [assumption].
151 (exists var117 AR(var117)) # label(non_clause).  [assumption].
152 (exists var118 -AR(var118)) # label(non_clause).  [assumption].
153 (exists var119 EV(var119)) # label(non_clause).  [assumption].
154 (exists var120 -EV(var120)) # label(non_clause).  [assumption].
155 (exists var121 exists var122 (PRE(var121,var122) & var121 != var122)) # label(non_clause).  [assumption].
156 (exists var123 exists var124 (-PRE(var123,var124) & var123 != var124)) # label(non_clause).  [assumption].
157 (exists var125 ST(var125)) # label(non_clause).  [assumption].
158 (exists var126 -ST(var126)) # label(non_clause).  [assumption].
159 (exists var127 C(var127)) # label(non_clause).  [assumption].
160 (exists var128 -C(var128)) # label(non_clause).  [assumption].
161 (exists var129 PRO(var129)) # label(non_clause).  [assumption].
162 (exists var130 -PRO(var130)) # label(non_clause).  [assumption].
163 (exists var131 SOB(var131)) # label(non_clause).  [assumption].
164 (exists var132 -SOB(var132)) # label(non_clause).  [assumption].
165 (exists var133 Sjk(var133)) # label(non_clause).  [assumption].
166 (exists var134 -Sjk(var134)) # label(non_clause).  [assumption].
167 (exists var135 exists var136 exists var137 (L(var135,var136,var137) & var135 != var136 & var135 != var137 & var136 != var137)) # label(non_clause).  [assumption].
168 (exists var138 exists var139 exists var140 (-L(var138,var139,var140) & var138 != var139 & var138 != var140 & var139 != var140)) # label(non_clause).  [assumption].
169 (exists var141 Obj(var141)) # label(non_clause).  [assumption].
170 (exists var142 -Obj(var142)) # label(non_clause).  [assumption].
171 (exists var143 exists var144 exists var145 (CF(var143,var144,var145) & var143 != var144 & var143 != var145 & var144 != var145)) # label(non_clause).  [assumption].
172 (exists var146 exists var147 exists var148 (-CF(var146,var147,var148) & var146 != var147 & var146 != var148 & var147 != var148)) # label(non_clause).  [assumption].
173 (exists var149 TL(var149)) # label(non_clause).  [assumption].
174 (exists var150 -TL(var150)) # label(non_clause).  [assumption].
175 (exists var151 exists var152 (CP(var151,var152) & var151 != var152)) # label(non_clause).  [assumption].
176 (exists var153 exists var154 (-CP(var153,var154) & var153 != var154)) # label(non_clause).  [assumption].
177 (exists var155 E(var155)) # label(non_clause).  [assumption].
178 (exists var156 -E(var156)) # label(non_clause).  [assumption].
179 (exists var157 exists var158 exists var159 (PC(var157,var158,var159) & var157 != var158 & var157 != var159 & var158 != var159)) # label(non_clause).  [assumption].
180 (exists var160 exists var161 exists var162 (-PC(var160,var161,var162) & var160 != var161 & var160 != var162 & var161 != var162)) # label(non_clause).  [assumption].
181 (exists var163 exists var164 (O(var163,var164) & var163 != var164)) # label(non_clause).  [assumption].
182 (exists var165 exists var166 (-O(var165,var166) & var165 != var166)) # label(non_clause).  [assumption].
183 (exists var167 POB(var167)) # label(non_clause).  [assumption].
184 (exists var168 -POB(var168)) # label(non_clause).  [assumption].
185 (exists var169 S(var169)) # label(non_clause).  [assumption].
186 (exists var170 -S(var170)) # label(non_clause).  [assumption].
187 (exists var171 SAG(var171)) # label(non_clause).  [assumption].
188 (exists var172 -SAG(var172)) # label(non_clause).  [assumption].
189 (exists var173 NAPO(var173)) # label(non_clause).  [assumption].
190 (exists var174 -NAPO(var174)) # label(non_clause).  [assumption].
191 (all x (ED(x) | PD(x) | Q(x) -> (exists t PRE(x,t)))) # label(non_clause).  [assumption].
192 (all x all t all t1 (PRE(x,t) & P(t1,t) -> PRE(x,t1))) # label(non_clause).  [assumption].
193 (all x all t (PRE(x,t) -> T(t))) # label(non_clause).  [assumption].
194 (all x all t all t1 all t2 (PRE(x,t1) & PRE(x,t2) & SUM(t,t1,t2) -> PRE(x,t))) # label(non_clause).  [assumption].
195 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
196 (all x all y (P(x,y) -> (T(x) <-> T(y)))) # label(non_clause).  [assumption].
197 (all x all y (T(x) -> P(x,x))) # label(non_clause).  [assumption].
198 (all x all y (T(x) & T(y) & P(x,y) & P(y,x) -> x = y)) # label(non_clause).  [assumption].
199 (all x all y all z (T(x) & T(y) & P(x,y) & P(y,z) -> P(x,z))) # label(non_clause).  [assumption].
200 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (T(z) & P(z,x) & -O(z,y))))) # label(non_clause).  [assumption].
201 (all x all y (T(x) & T(y) & -P(x,y) -> (exists z (P(z,x) & DJ(z,y) & T(z))))) # label(non_clause).  [assumption].
202 (all x all y (T(x) & T(y) -> (PP(x,y) <-> P(x,y) & -P(y,x)))) # label(non_clause).  [assumption].
203 (all x all y (T(x) & T(y) -> (O(x,y) <-> (exists z (P(z,x) & P(z,y) & T(z)))))) # label(non_clause).  [assumption].
204 (all x all y (T(x) & T(y) -> (DJ(x,y) <-> -O(x,y)))) # label(non_clause).  [assumption].
205 (all x all y (T(x) & T(y) -> (U(x,y) <-> (exists z (P(x,z) & P(y,z) & T(z)))))) # label(non_clause).  [assumption].
206 (all x (T(x) -> (AtP(x) <-> (all y (T(y) & P(y,x) -> y = x))))) # label(non_clause).  [assumption].
207 (all x all y (T(x) & T(y) & U(x,y) -> (exists z (T(z) & (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y)))))))) # label(non_clause).  [assumption].
208 (all x all y (T(x) & T(y) & O(x,y) -> (exists z (T(z) & (all w (T(w) -> (PP(w,z) <-> PP(w,x) & PP(w,y)))))))) # label(non_clause).  [assumption].
209 (all x all y all z (T(x) & T(y) & T(z) -> (SUM(z,x,y) <-> (all w (T(w) -> (O(w,z) <-> O(w,x) | O(w,y))))))) # label(non_clause).  [assumption].
210 (all x (ED(x) | PD(x) | Q(x) | AB(x) -> PT(x))) # label(non_clause).  [assumption].
211 (all x (PED(x) | NPED(x) | AS(x) -> ED(x))) # label(non_clause).  [assumption].
212 (all x (EV(x) | STV(x) -> PD(x))) # label(non_clause).  [assumption].
213 (all x (TQ(x) | PQ(x) | AQ(x) -> Q(x))) # label(non_clause).  [assumption].
214 (all x (R(x) -> AB(x))) # label(non_clause).  [assumption].
215 (all x (M(x) | F(x) | POB(x) -> PED(x))) # label(non_clause).  [assumption].
216 (all x (NPOB(x) -> NPED(x))) # label(non_clause).  [assumption].
217 (all x (ACH(x) | ACC(x) -> EV(x))) # label(non_clause).  [assumption].
218 (all x (ST(x) | PRO(x) -> STV(x))) # label(non_clause).  [assumption].
219 (all x (TL(x) -> TQ(x))) # label(non_clause).  [assumption].
220 (all x (SL(x) -> PQ(x))) # label(non_clause).  [assumption].
221 (all x (TR(x) | PR(x) | AR(x) -> R(x))) # label(non_clause).  [assumption].
222 (all x (APO(x) | NAPO(x) -> POB(x))) # label(non_clause).  [assumption].
223 (all x (MOB(x) | SOB(x) -> NPOB(x))) # label(non_clause).  [assumption].
224 (all x (T(x) -> TR(x))) # label(non_clause).  [assumption].
225 (all x (S(x) -> PR(x))) # label(non_clause).  [assumption].
226 (all x (ASO(x) | NASO(x) -> SOB(x))) # label(non_clause).  [assumption].
227 (all x (SAG(x) | SC(x) -> ASO(x))) # label(non_clause).  [assumption].
228 (all x (PT(x) <-> ED(x) | PD(x) | Q(x) | AB(x))) # label(non_clause).  [assumption].
229 (all x (ED(x) -> -PD(x) & -Q(x) & -AB(x))) # label(non_clause).  [assumption].
230 (all x (PD(x) -> -Q(x) & -AB(x))) # label(non_clause).  [assumption].
231 (all x (Q(x) -> -AB(x))) # label(non_clause).  [assumption].
232 (all x (ED(x) <-> PED(x) | NPED(x) | AS(x))) # label(non_clause).  [assumption].
233 (all x (PED(x) -> -NPED(x) & -AS(x))) # label(non_clause).  [assumption].
234 (all x (NPED(x) -> -AS(x))) # label(non_clause).  [assumption].
235 (all x (PD(x) <-> EV(x) | STV(x))) # label(non_clause).  [assumption].
236 (all x (EV(x) -> -STV(x))) # label(non_clause).  [assumption].
237 (all x (Q(x) <-> TQ(x) | PQ(x) | AQ(x))) # label(non_clause).  [assumption].
238 (all x (TQ(x) -> -PQ(x) & -AQ(x))) # label(non_clause).  [assumption].
239 (all x (PQ(x) -> -AQ(x))) # label(non_clause).  [assumption].
240 (all x (PED(x) <-> M(x) | F(x) | POB(x))) # label(non_clause).  [assumption].
241 (all x (M(x) -> -F(x) & -POB(x))) # label(non_clause).  [assumption].
242 (all x (F(x) -> -POB(x))) # label(non_clause).  [assumption].
243 (all x (EV(x) <-> ACH(x) | ACC(x))) # label(non_clause).  [assumption].
244 (all x (ACH(x) -> -ACC(x))) # label(non_clause).  [assumption].
245 (all x (STV(x) <-> ST(x) | PRO(x))) # label(non_clause).  [assumption].
246 (all x (ST(x) -> -PRO(x))) # label(non_clause).  [assumption].
247 (all x (R(x) <-> TR(x) | PR(x) | AR(x))) # label(non_clause).  [assumption].
248 (all x (TR(x) -> -PR(x) & -AR(x))) # label(non_clause).  [assumption].
249 (all x (PR(x) -> -AR(x))) # label(non_clause).  [assumption].
250 (all x (POB(x) <-> APO(x) | NAPO(x))) # label(non_clause).  [assumption].
251 (all x (APO(x) -> -NAPO(x))) # label(non_clause).  [assumption].
252 (all x (NPOB(x) <-> MOB(x) | SOB(x))) # label(non_clause).  [assumption].
253 (all x (MOB(x) -> -SOB(x))) # label(non_clause).  [assumption].
254 (all x (SOB(x) <-> ASO(x) | NASO(x))) # label(non_clause).  [assumption].
255 (all x (ASO(x) -> -NASO(x))) # label(non_clause).  [assumption].
256 (all x (ASO(x) <-> SAG(x) | SC(x))) # label(non_clause).  [assumption].
257 (all x (SAG(x) -> -SC(x))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-O(x,y) | P(f1(x,y),x).
-O(x,y) | P(f1(x,y),y).
O(x,y) | -P(z,x) | -P(z,y).
-Sum(x,y,z) | -O(u,x) | O(u,y) | O(u,z).
-Sum(x,y,z) | O(u,x) | -O(u,y).
-Sum(x,y,z) | O(u,x) | -O(u,z).
Sum(x,y,z) | O(f2(y,z,x),x) | O(f2(y,z,x),y) | O(f2(y,z,x),z).
Sum(x,y,z) | -O(f2(y,z,x),x) | -O(f2(y,z,x),y).
Sum(x,y,z) | -O(f2(y,z,x),x) | -O(f2(y,z,x),z).
P(x,x).
-P(x,y) | -P(y,z) | P(x,z).
-P(x,y) | -P(y,x) | y = x.
P(x,y) | P(f3(x,y),x).
P(x,y) | -O(f3(x,y),y).
-Obj(x) | -P(y,x) | Obj(y).
-E(x) | -P(y,x) | E(y).
-Qi(x) | -P(y,x) | Qi(y).
-Sjk(x) | -P(y,x) | Sjk(y).
-C(x) | -P(y,x) | C(y).
-Obj(x) | -Obj(y) | -SUM(z,x,y) | Obj(z).
-E(x) | -E(y) | -SUM(z,x,y) | E(z).
-Qi(x) | -Qi(y) | -SUM(z,x,y) | Qi(z).
-Sjk(x) | -Sjk(y) | -SUM(z,x,y) | Sjk(z).
-C(x) | -C(y) | -SUM(z,x,y) | C(z).
-R(x) | -PRE(x,y) | -PRE(x,z) | -P_t(u,x,y) | P_t(u,x,z).
-R(x) | -PRE(x,y) | -PRE(x,z) | P_t(u,x,y) | -P_t(u,x,z).
-sij(x) | -sij(y) | -PRE(x,z) | PRE(y,z).
-L(x,y,z) | R(x).
-L(x,y,z) | Q(y).
-L(x,y,z) | PRE(y,z).
-L(x,y,z) | -P(u,z) | -L(w,y,u) | -sij(x) | -sij(w) | -PRE(x,v5) | P_t(w,x,v5).
-L(x,y,z) | -L(u,y,w) | -SUM(v5,z,w) | -SUM(v6,x,u) | -sij(x) | -sij(u) | L(v6,y,v5).
-L(x,y,z) | -Qi(y) | sij(x).
-Q(x) | -PRE(x,y) | L(f4(x,y),x,y).
-L(x,y,z) | -L(u,y,z) | -sjk(x) | -sjk(u) | u = x.
-L(x,y,z) | -PRE(y,u) | -sjk(x) | L(f5(x,y,z,u),y,u).
-L(x,y,z) | -PRE(y,u) | -sjk(x) | sjk(f5(x,y,z,u)).
-L(x,y,z) | -CC(u,x,z) | -CC(w,y,z) | L(u,w,z).
-PC(x,y,z) | Obj(x).
-PC(x,y,z) | E(x).
-E(x) | -PRE(x,y) | PC(f6(x,y),x,y).
-Obj(x) | -PRE(x,y) | PC(f7(x,y),x,y).
-PC(x,y,z) | -P_t(y,u,z) | -E(u) | PC(x,u,z).
-PC(x,y,z) | -P_t(u,x,z) | PC(u,y,z).
-I(x,y) | -Qi(x) | -E(y) | -I(z,u) | -Qj(z) | -Obj(u) | -Qj(x).
-I(x,y) | -Qi(x) | -E(y) | -I(z,u) | -Qj(z) | -Obj(u) | -Qi(z).
-L(x,y,z) | -TQ(y) | z = x.
-E(x) | TQ(f8(x)).
-E(x) | I(f8(x),x).
-CF(x,y,z) | c(x).
-CF(x,y,z) | PRE(y,z).
-c(x) | -PRE(x,y) | -PRE(x,z) | -P_t(x,u,y) | P_t(u,x,z).
-c(x) | -PRE(x,y) | -PRE(x,z) | P_t(x,u,y) | -P_t(u,x,z).
-I(x,y) | Q(x).
-I(x,y) | -I(x,z) | z = y.
-Q(x) | I(x,f9(x)).
-I(x,y) | -PRE(x,z) | PRE(y,z).
-I(x,y) | PRE(x,z) | -PRE(y,z).
-I(x,y) | -I(z,y) | -Qi(x) | -Qi(z) | z = x.
-CC(x,y,z) | -I(f10(x,y,z),x) | -Qi(f10(x,y,z)) | I(f11(x,y,z),y).
-CC(x,y,z) | -I(f10(x,y,z),x) | -Qi(f10(x,y,z)) | Qi(f11(x,y,z)).
-CC(x,y,z) | I(f10(x,y,z),x) | -I(u,y) | -Qi(u).
-CC(x,y,z) | Qi(f10(x,y,z)) | -I(u,y) | -Qi(u).
-CC(x,y,z) | -I(u,x) | -I(w,y) | -Qi(u) | -Qi(w) | CC(u,w,z).
-I(x,y) | -I(z,u) | -Qi(x) | -Sum(w,x,z) | -Sum(v5,y,u) | I(w,v5).
-PRE(x,y) | T(y).
-PRE(x,y) | -P(z,y) | PRE(x,z).
-PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).
-Obj(x) | PT(x).
-E(x) | PT(x).
-Q(x) | PT(x).
-R(x) | PT(x).
-C(x) | PT(x).
-AS(x) | PT(x).
-PT(x) | PRE(x,f12(x)).
-O_t(x,y,z) | P_t(f13(x,y,z),x,z).
-O_t(x,y,z) | P_t(f13(x,y,z),y,z).
O_t(x,y,z) | -P_t(u,x,z) | -P_t(u,y,z).
-P_t(x,y,z) | PRE(x,z).
-P_t(x,y,z) | PRE(y,z).
-PRE(x,y) | P_t(x,x,y).
-P_t(x,y,z) | -P_t(y,u,z) | P_t(x,u,z).
-PRE(x,y) | -PRE(z,y) | P_t(x,z,y) | P_t(f14(x,z,y),x,y).
-PRE(x,y) | -PRE(z,y) | P_t(x,z,y) | -O_t(f14(x,z,y),z,y).
-Obj(x) | -P_t(y,x,z) | Obj(y).
-E(x) | -P_t(y,x,z) | E(y).
-Qi(x) | -P_t(y,x,z) | Qi(y).
-Sjk(x) | -P_t(y,x,z) | Sjk(y).
-C(x) | -P_t(y,x,z) | C(y).
-CC(x,y,z) | P_t(x,y,z).
-CC(x,y,z) | P_t(y,x,z).
CC(x,y,z) | -P_t(x,y,z) | -P_t(y,x,z).
-CP(x,y) | PRE(x,f15(x,y)).
-CP(x,y) | -PRE(x,z) | P_t(x,y,z).
CP(x,y) | -PRE(x,z) | PRE(x,f16(x,y)).
CP(x,y) | -PRE(x,z) | -P_t(x,y,f16(x,y)).
-PRE(x,y) | -CP(x,z) | P(x,z).
-PRE(x,y) | CP(x,z) | -P(x,z).
SUM(c1,c2,c3).
c2 != c1.
c3 != c1.
c3 != c2.
-SUM(c4,c5,c6).
c5 != c4.
c6 != c4.
c6 != c5.
P(c7,c8).
c8 != c7.
-P(c9,c10).
c10 != c9.
NPED(c11).
-NPED(c12).
TR(c13).
-TR(c14).
Sum(c15,c16,c17).
c16 != c15.
c17 != c15.
c17 != c16.
-Sum(c18,c19,c20).
c19 != c18.
c20 != c18.
c20 != c19.
U(c21,c22).
c22 != c21.
-U(c23,c24).
c24 != c23.
DJ(c25,c26).
c26 != c25.
-DJ(c27,c28).
c28 != c27.
AQ(c29).
-AQ(c30).
NASO(c31).
-NASO(c32).
F(c33).
-F(c34).
SL(c35).
-SL(c36).
sij(c37).
-sij(c38).
NPOB(c39).
-NPOB(c40).
PT(c41).
-PT(c42).
AS(c43).
-AS(c44).
ACH(c45).
-ACH(c46).
P_t(c47,c48,c49).
c48 != c47.
c49 != c47.
c49 != c48.
-P_t(c50,c51,c52).
c51 != c50.
c52 != c50.
c52 != c51.
TQ(c53).
-TQ(c54).
R(c55).
-R(c56).
AB(c57).
-AB(c58).
ASO(c59).
-ASO(c60).
MOB(c61).
-MOB(c62).
ACC(c63).
-ACC(c64).
PED(c65).
-PED(c66).
sjk(c67).
-sjk(c68).
Qj(c69).
-Qj(c70).
M(c71).
-M(c72).
PQ(c73).
-PQ(c74).
APO(c75).
-APO(c76).
PP(c77,c78).
c78 != c77.
-PP(c79,c80).
c80 != c79.
SC(c81).
-SC(c82).
I(c83,c84).
c84 != c83.
-I(c85,c86).
c86 != c85.
O_t(c87,c88,c89).
c88 != c87.
c89 != c87.
c89 != c88.
-O_t(c90,c91,c92).
c91 != c90.
c92 != c90.
c92 != c91.
AtP(c93).
-AtP(c94).
CC(c95,c96,c97).
c96 != c95.
c97 != c95.
c97 != c96.
-CC(c98,c99,c100).
c99 != c98.
c100 != c98.
c100 != c99.
ED(c101).
-ED(c102).
Q(c103).
-Q(c104).
STV(c105).
-STV(c106).
PR(c107).
-PR(c108).
PD(c109).
-PD(c110).
Qi(c111).
-Qi(c112).
c(c113).
-c(c114).
T(c115).
-T(c116).
AR(c117).
-AR(c118).
EV(c119).
-EV(c120).
PRE(c121,c122).
c122 != c121.
-PRE(c123,c124).
c124 != c123.
ST(c125).
-ST(c126).
C(c127).
-C(c128).
PRO(c129).
-PRO(c130).
SOB(c131).
-SOB(c132).
Sjk(c133).
-Sjk(c134).
L(c135,c136,c137).
c136 != c135.
c137 != c135.
c137 != c136.
-L(c138,c139,c140).
c139 != c138.
c140 != c138.
c140 != c139.
Obj(c141).
-Obj(c142).
CF(c143,c144,c145).
c144 != c143.
c145 != c143.
c145 != c144.
-CF(c146,c147,c148).
c147 != c146.
c148 != c146.
c148 != c147.
TL(c149).
-TL(c150).
CP(c151,c152).
c152 != c151.
-CP(c153,c154).
c154 != c153.
E(c155).
-E(c156).
PC(c157,c158,c159).
c158 != c157.
c159 != c157.
c159 != c158.
-PC(c160,c161,c162).
c161 != c160.
c162 != c160.
c162 != c161.
O(c163,c164).
c164 != c163.
-O(c165,c166).
c166 != c165.
POB(c167).
-POB(c168).
S(c169).
-S(c170).
SAG(c171).
-SAG(c172).
NAPO(c173).
-NAPO(c174).
-ED(x) | PRE(x,f17(x)).
-PD(x) | PRE(x,f17(x)).
-Q(x) | PRE(x,f17(x)).
-PRE(x,y) | -P(z,y) | PRE(x,z).
-PRE(x,y) | T(y).
-PRE(x,y) | -PRE(x,z) | -SUM(u,y,z) | PRE(x,u).
-P(x,y) | -T(x) | T(y).
-P(x,y) | T(x) | -T(y).
-P(x,y) | -T(x) | T(y).
-P(x,y) | T(x) | -T(y).
-T(x) | P(x,x).
-T(x) | -T(y) | -P(x,y) | -P(y,x) | y = x.
-T(x) | -T(y) | -P(x,y) | -P(y,z) | P(x,z).
-T(x) | -T(y) | P(x,y) | T(f18(x,y)).
-T(x) | -T(y) | P(x,y) | P(f18(x,y),x).
-T(x) | -T(y) | P(x,y) | -O(f18(x,y),y).
-T(x) | -T(y) | P(x,y) | P(f19(x,y),x).
-T(x) | -T(y) | P(x,y) | DJ(f19(x,y),y).
-T(x) | -T(y) | P(x,y) | T(f19(x,y)).
-T(x) | -T(y) | -PP(x,y) | P(x,y).
-T(x) | -T(y) | -PP(x,y) | -P(y,x).
-T(x) | -T(y) | PP(x,y) | -P(x,y) | P(y,x).
-T(x) | -T(y) | -O(x,y) | P(f20(x,y),x).
-T(x) | -T(y) | -O(x,y) | P(f20(x,y),y).
-T(x) | -T(y) | -O(x,y) | T(f20(x,y)).
-T(x) | -T(y) | O(x,y) | -P(z,x) | -P(z,y) | -T(z).
-T(x) | -T(y) | -DJ(x,y) | -O(x,y).
-T(x) | -T(y) | DJ(x,y) | O(x,y).
-T(x) | -T(y) | -U(x,y) | P(x,f21(x,y)).
-T(x) | -T(y) | -U(x,y) | P(y,f21(x,y)).
-T(x) | -T(y) | -U(x,y) | T(f21(x,y)).
-T(x) | -T(y) | U(x,y) | -P(x,z) | -P(y,z) | -T(z).
-T(x) | -AtP(x) | -T(y) | -P(y,x) | y = x.
-T(x) | AtP(x) | T(f22(x)).
-T(x) | AtP(x) | P(f22(x),x).
-T(x) | AtP(x) | f22(x) != x.
-T(x) | -T(y) | -U(x,y) | T(f23(x,y)).
-T(x) | -T(y) | -U(x,y) | -T(z) | -O(z,f23(x,y)) | O(z,x) | O(z,y).
-T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f23(x,y)) | -O(z,x).
-T(x) | -T(y) | -U(x,y) | -T(z) | O(z,f23(x,y)) | -O(z,y).
-T(x) | -T(y) | -O(x,y) | T(f24(x,y)).
-T(x) | -T(y) | -O(x,y) | -T(z) | -PP(z,f24(x,y)) | PP(z,x).
-T(x) | -T(y) | -O(x,y) | -T(z) | -PP(z,f24(x,y)) | PP(z,y).
-T(x) | -T(y) | -O(x,y) | -T(z) | PP(z,f24(x,y)) | -PP(z,x) | -PP(z,y).
-T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | -O(u,z) | O(u,x) | O(u,y).
-T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,x).
-T(x) | -T(y) | -T(z) | -SUM(z,x,y) | -T(u) | O(u,z) | -O(u,y).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | T(f25(x,y,z)).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | O(f25(x,y,z),z) | O(f25(x,y,z),x) | O(f25(x,y,z),y).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f25(x,y,z),z) | -O(f25(x,y,z),x).
-T(x) | -T(y) | -T(z) | SUM(z,x,y) | -O(f25(x,y,z),z) | -O(f25(x,y,z),y).
-ED(x) | PT(x).
-PD(x) | PT(x).
-Q(x) | PT(x).
-AB(x) | PT(x).
-PED(x) | ED(x).
-NPED(x) | ED(x).
-AS(x) | ED(x).
-EV(x) | PD(x).
-STV(x) | PD(x).
-TQ(x) | Q(x).
-PQ(x) | Q(x).
-AQ(x) | Q(x).
-R(x) | AB(x).
-M(x) | PED(x).
-F(x) | PED(x).
-POB(x) | PED(x).
-NPOB(x) | NPED(x).
-ACH(x) | EV(x).
-ACC(x) | EV(x).
-ST(x) | STV(x).
-PRO(x) | STV(x).
-TL(x) | TQ(x).
-SL(x) | PQ(x).
-TR(x) | R(x).
-PR(x) | R(x).
-AR(x) | R(x).
-APO(x) | POB(x).
-NAPO(x) | POB(x).
-MOB(x) | NPOB(x).
-SOB(x) | NPOB(x).
-T(x) | TR(x).
-S(x) | PR(x).
-ASO(x) | SOB(x).
-NASO(x) | SOB(x).
-SAG(x) | ASO(x).
-SC(x) | ASO(x).
-PT(x) | ED(x) | PD(x) | Q(x) | AB(x).
PT(x) | -ED(x).
PT(x) | -PD(x).
PT(x) | -Q(x).
PT(x) | -AB(x).
-ED(x) | -PD(x).
-ED(x) | -Q(x).
-ED(x) | -AB(x).
-PD(x) | -Q(x).
-PD(x) | -AB(x).
-Q(x) | -AB(x).
-ED(x) | PED(x) | NPED(x) | AS(x).
ED(x) | -PED(x).
ED(x) | -NPED(x).
ED(x) | -AS(x).
-PED(x) | -NPED(x).
-PED(x) | -AS(x).
-NPED(x) | -AS(x).
-PD(x) | EV(x) | STV(x).
PD(x) | -EV(x).
PD(x) | -STV(x).
-EV(x) | -STV(x).
-Q(x) | TQ(x) | PQ(x) | AQ(x).
Q(x) | -TQ(x).
Q(x) | -PQ(x).
Q(x) | -AQ(x).
-TQ(x) | -PQ(x).
-TQ(x) | -AQ(x).
-PQ(x) | -AQ(x).
-PED(x) | M(x) | F(x) | POB(x).
PED(x) | -M(x).
PED(x) | -F(x).
PED(x) | -POB(x).
-M(x) | -F(x).
-M(x) | -POB(x).
-F(x) | -POB(x).
-EV(x) | ACH(x) | ACC(x).
EV(x) | -ACH(x).
EV(x) | -ACC(x).
-ACH(x) | -ACC(x).
-STV(x) | ST(x) | PRO(x).
STV(x) | -ST(x).
STV(x) | -PRO(x).
-ST(x) | -PRO(x).
-R(x) | TR(x) | PR(x) | AR(x).
R(x) | -TR(x).
R(x) | -PR(x).
R(x) | -AR(x).
-TR(x) | -PR(x).
-TR(x) | -AR(x).
-PR(x) | -AR(x).
-POB(x) | APO(x) | NAPO(x).
POB(x) | -APO(x).
POB(x) | -NAPO(x).
-APO(x) | -NAPO(x).
-NPOB(x) | MOB(x) | SOB(x).
NPOB(x) | -MOB(x).
NPOB(x) | -SOB(x).
-MOB(x) | -SOB(x).
-SOB(x) | ASO(x) | NASO(x).
SOB(x) | -ASO(x).
SOB(x) | -NASO(x).
-ASO(x) | -NASO(x).
-ASO(x) | SAG(x) | SC(x).
ASO(x) | -SAG(x).
ASO(x) | -SC(x).
-SAG(x) | -SC(x).
end_of_list.

============================== end of clauses for search =============

% The maximum domain element in the input is 0.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.09 seconds).
Ground clauses: seen=1772, kept=1672.
Selections=1, assignments=2, propagations=8, current_models=0.
Rewrite_terms=8, rewrite_bools=62, indexes=0.
Rules_from_neg_clauses=4, cross_offs=4.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 1.50 seconds).
Ground clauses: seen=8554, kept=8305.
Selections=615, assignments=1843, propagations=130785, current_models=0.
Rewrite_terms=20917, rewrite_bools=6250157, indexes=6858.
Rules_from_neg_clauses=6741, cross_offs=38098.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

====== Domain 4 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 61.53 seconds).
Ground clauses: seen=37714, kept=37210.
Selections=10480, assignments=41847, propagations=2767240, current_models=0.
Rewrite_terms=558392, rewrite_bools=153906472, indexes=156248.
Rules_from_neg_clauses=145907, cross_offs=914748.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

====== Domain 5 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 121.58 seconds).
Ground clauses: seen=139370, kept=138475.
Selections=13514, assignments=67401, propagations=1893824, current_models=0.
Rewrite_terms=159492, rewrite_bools=61764341, indexes=57918.
Rules_from_neg_clauses=49778, cross_offs=564370.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===

====== Domain 6 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 181.83 seconds).
Ground clauses: seen=434032, kept=432580.
Selections=6264, assignments=37262, propagations=811510, current_models=0.
Rewrite_terms=59829, rewrite_bools=38199139, indexes=21535.
Rules_from_neg_clauses=14842, cross_offs=310162.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

=== Mace4 starting on domain size 7. ===

============================== STATISTICS ============================

For domain size 7.

Current CPU time: 0.00 seconds (total CPU time: 191.17 seconds).
Ground clauses: seen=1171402, kept=1169197.
Selections=0, assignments=0, propagations=14, current_models=0.
Rewrite_terms=0, rewrite_bools=2422, indexes=0.
Rules_from_neg_clauses=0, cross_offs=0.

============================== end of statistics =====================

------ process 15852 exit (max_megs_no) ------

User_CPU=191.17, System_CPU=1.12, Wall_clock=205.

Exiting with failure.

Process 15852 exit (max_megs_no) Thu Mar 18 09:04:50 2021
The process finished Thu Mar 18 09:04:50 2021

========================== MACLEOD SUMMARY ===========================
reasoner: C:/Users/torsten/macleod/mace4
status: 
execution finished: Thu Mar 18 09:46:27 2021
total CPU time used: 0
The command was "C:/Users/torsten/macleod/mace4 -v0 -t600 -s60 -n2 -N40 -f C:\Users\torsten\GitHub\colore\ontologies\dolce\conversions\dolce_core_nontrivial.all.p9"
============================ end of footer ===========================
