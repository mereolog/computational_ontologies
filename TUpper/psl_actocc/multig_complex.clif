/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved. 
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger - initial implementation
 *******************************************************************************/

(cl-text https://raw.githubusercontent.com/gruninger/colore/master/ontologies/psl_actocc/multig_complex.clif

(cl-imports https://raw.githubusercontent.com/gruninger/colore/master/ontologies/psl_actocc/mereo_subocc.clif)

(cl-imports https://raw.githubusercontent.com/gruninger/colore/master/ontologies/psl_subactivity/atomic_sub.clif)

(cl-imports https://raw.githubusercontent.com/gruninger/colore/master/ontologies/psl_core/occ_actocc.clif)

(forall (s o)
	(if	(and	(subactivity_occurrence s o)
			(legal s))
		(exists (a)
			(atocc s a))))

(forall (a s)
	(if	(and	(atocc s a)
			(legal s))
		(root s a)))

(forall (o s1 s2 a)
	(if	(and	(occurrence_of o a)
			(subactivity_occurrence s1 o)
			(subactivity_occurrence s2 o)
			(precedes s1 s2))
		(not atomic a)))

(forall (a1 a2 s1 s2 s3)
	(if	(and	(subactivity a1 a2)
			(subtree s1 a1 s2 a2)
			(min_precedes s1 s3 a))
		(min_precedes s1 s3 a2)))

(forall (s a)
	(if	(and	(root s a)
			(not (atomic a)))
	(exists (o)
		(and	(occurrence_of o a)
			(subactivity_occurrence s o)))))

(forall (o a)
	(if	(and	(occurrence_of o a)
			(not (atomic a)))
		(exists (s)
			(and	(legal s)
				(subactivity_occurrence s o)))))

(forall (o1 o2 a1 a2)
	(if	(and	(occurrence_of o1 a1)
			(occurrence_of o2 a2)
			(not (atomic a1))
			(subactivity_occurrence o1 o2))
		(subactivity a1 a2)))

(forall (o1 o2 a1 a2)
	(if	(and	(occurrence_of o1 a1)
			(occurrence_of o2 a2)
			(subactivity a1 a2))
		(or	(subactivity_occurrence o1 o2)
			(exists (s)
				(and	(subactivity_occurrence s o1)
					(not (subactivity_occurrence s o2)))))))

(forall (o1 o2 a)
	(if	(and	(occurrence_of o1 a)
			(occurrence_of o2 a)
			(not (= o1 o2)))
		(exists (s)
			(and	(legal s)
				(subactivity_occurrence s o1)
				(not (subactivity_occurrence s o2))))))

(forall (s a)
	(iff	(atocc s a)
		(exists (a1)
			(and	(occurrence_of s a1)
				(atomic a1)
				(subactivity a a1)))))

(forall (a1 a2 s1 s2)
	(iff	(subtree s1 a1 s2 a2)
		(and	(root s1 a1)
			(root s2 a2)
			(or	(min_precedes s1 s2 a1)
				(= s1 s2))
			(forall (s3)
				(if	(min_precedes s2 s3 a2)
					(min_precedes s2 s3 a1))))))

(forall (s1 s2 a)
	(iff	(min_precedes s1 s2 a)
		(exists (o)
			(and	(occurrence_of o a)
				(subactivity_occurrence s1 o)
				(subactivity_occurrence s2 o)
				(precedes s1 s2)))))

(forall (s a)
	(iff	(root s a)
		(exists (o)
			(and	(occurrence_of o a)
				(subactivity_occurrence s o)
				(legal s)
				(not (exists (s1)
					(and	(subactivity_occurrence s1 o)
						(precedes s1 s))))))))
	

)
