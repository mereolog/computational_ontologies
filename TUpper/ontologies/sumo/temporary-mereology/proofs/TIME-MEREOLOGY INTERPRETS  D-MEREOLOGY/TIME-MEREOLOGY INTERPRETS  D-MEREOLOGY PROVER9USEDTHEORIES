% Saved by Prover9-Mace4 Version 0.5, December 2007.

set(ignore_option_dependencies). % GUI handles dependencies

if(Prover9). % Options for Prover9
  assign(max_seconds, 60).
end_if.

if(Mace4).   % Options for Mace4
  assign(max_megs, 4000).
  assign(max_seconds, 60).
end_if.

if(Prover9). % Additional input for Prover9
assign(max_seconds, -1).
end_if.

if(Mace4).   % Additional input for Mace4
% Additional input for Mace4
% Additional input for Mace4
% Additional input for Mace4
% Additional input for Mace4
assign(max_seconds, -1).
end_if.

formulas(assumptions).

%%-------------------------------------------------------------------------------------------------
%% TIME MEREOLOGY
%%------------------------------------------------------------------------------------------------
all x all y ((temporalPart(x,y) & temporalPart(y,x)) -> (x=y)).%13
all x all y all z ((temporalPart(x,y) & temporalPart(y,z))-> temporalPart(x,z)).%14
all x all y (overlapsTemporally(x,y)-> TimeInterval(x) & TimeInterval(y)).%15
all x (TimeInterval(x)-> overlapsTemporally(x,x)).%16
all x all y (overlapsTemporally(x,y)-> overlapsTemporally(y,x)).%17
all x all y (TimeInterval(x) & TimeInterval(y) -> (overlapsTemporally(x,y)->(exists z (TimeInterval(z) & temporalPart(z,x) & temporalPart(z,y))))).%18->
all x all y (TimeInterval(x) & TimeInterval(y) ->((exists z (TimeInterval(z) & temporalPart(z,x) & temporalPart(z,y)))->overlapsTemporally(x,y))).%18<-
all x (TimeInterval(x)-> temporalPart(x,x)).%19
% Translations D-MEREOLOGY into TIME MEREOLOGY
all x (T(x) <-> TimeInterval(x)).
all x all y (P(x,y)<-> (temporalPart(x,y))).
all x all y (Ov(x,y)<-> overlapsTemporally(x,y)).
all y all x all z (SUM(z,x,y)<-> all u (overlapsTemporally(u,z)<->(overlapsTemporally(u,x)|overlapsTemporally(u,y)))).

end_of_list.

formulas(goals).

%all x (T(x)->P(x,x)). %5
%all x all y all z (P(x,y) & P(y,z)->P(x,z)). %6
%all x all y (P(x,y) & P(y,x)->(x=y)). %7
%all x all y (T(x) & T(y) & SUM(z,x,y)-> T(z)).%10  additivityT

end_of_list.

