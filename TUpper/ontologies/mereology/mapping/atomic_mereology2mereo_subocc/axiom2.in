% Saved by Prover9-Mace4 Version 0.5, December 2007.

set(ignore_option_dependencies). % GUI handles dependencies

if(Prover9). % Options for Prover9
  assign(max_seconds, 60).
end_if.

if(Mace4).   % Options for Mace4
  assign(max_seconds, 60).
end_if.

formulas(assumptions).

(all x
	(part(x,x))).

(all x all y
	((part(x,y)
	& part(y,x))
	->
	(x=y))).

(all x all y all z
	((part(x,y)
	& part(y,z))
	->
	part(x,z))).

(all x all y
	(ppart(x,y)
	<->
	(part(x,y)
	& -part(y,x)))).

(all x all y
	(overlaps(x,y)
	<->
	(exists z
		(part(z,x)
		& part(z,y))))).
(all x all y
	(disjoint(x,y)
	<->
	-overlaps(x,y))).

(all x all y
	(underlaps(x,y)
	<->
	(exists z
		(part(x,z)
		& part(y,z))))).

(all x 
	(exists y
		(part(y,x)
	& (all z
		(part(z,y)
		->
		(z=y)))))).

%definitions

all x(
	activity_occurrence(x) <-> D(x)
).

all x all y(
	subactivity_occurrence(x,y) <-> part(x,y)
).

(all o1 all o 
	(subactivity_occurrence(o1,o2) 
	->
	(activity_occurrence(o1) 
	& activity_occurrence(o2)))).

(all o 
	(activity_occurrence(o) 
	->
	subactivity_occurrence(o,o))).

(all o1 all o2 
	((subactivity_occurrence(o1,o2) 
	& subactivity_occurrence(o2,o1)) 
	->
	(o1=o2))).

(all o1 all o2 all o3
	((subactivity_occurrence(o1,o2) 
	& subactivity_occurrence(o2,o3)) 
	->
	subactivity_occurrence(o1,o3))).

(all o1 all o2
	((legal(o1) 
	& subactivity_occurrence(o2,o1))
	->
	 (o1=o2))).

(all o1
	(legal(o1) 
	<->
	(activity_occurrence(o1) 
	& (all o2 
		(subactivity_occurrence(o2,o1)
		->
		 (o1=o2)))))).

(all o1 all o2 
	((subactivity_occurrence(o1,o2) 
	& (o1 != o2))
	->
	(exists o3
		(legal(o3) 
		& subactivity_occurrence(o3,o1))))).

end_of_list.

formulas(goals).

(all o 
	(activity_occurrence(o) 
	->
	subactivity_occurrence(o,o))).

end_of_list.

