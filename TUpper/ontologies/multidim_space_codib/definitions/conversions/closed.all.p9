formulas(sos).
(all x  (Closed(x) <-> \forall y\;[~BCont(y,x)])).
(all x all y  (SC(x,y) -> C(x,y))).
(all x all y  (SC(x,y) -> ~\exists z\;[(Cont(z,x) & P(z,y))])).
(all x all y  (SC(x,y) -> ~\exists z\;[(P(z,x) & Cont(z,y))])).
(all x all y  ((C(x,y) & \forall z\;[(~Cont(z,x) | ~Cont(z,y) | (~P(z,x) & ~P(z,y)))]) -> SC(x,y))).
(all x  -(SC(x,x))).
(all x all y  (SC(x,y) -> SC(y,x))).
(all x all y  (SC(x,y) -> \exists z\;[(lt(z,x) & lt(z,y) & Cont(z,x) & Cont(z,y))])).
(all x all y  (SC(x,y) <-> (\exists z\;[(Cont(z,x) & Cont(z,y))] & \forall z\;[((Cont(z,x) & Cont(z,y)) -> (leq(z,x) & ~EqDim(z,x) & leq(z,y) & ~EqDim(z,y)))]))).
(all x all y  (EqDim(x,y) <-> (leq(x,y) & leq(y,x)))).
(all x all y  (leq(x,y) -> S(x))).
(all x all y  (leq(x,y) -> S(y))).
(all x  (ZEX(x) -> S(x))).
(all x  (S(x) -> leq(x,x))).
(all x all y all z  ((leq(x,y) & leq(y,z)) -> leq(x,z))).
(all x all y  ((ZEX(x) & ZEX(y)) -> =(x,y))).
(all x all y  ((ZEX(x) & S(y)) -> leq(x,y))).
(all x all y  (Cont(x,y) -> leq(x,y))).
(exists x  MinDim(x)).
(all x  (MaxDim(x) <-> (S(x) & ~ZEX(x) & \forall y\;[(S(y) -> leq(y,x))]))).
(all x  (MinDim(x) <-> (S(x) & ~ZEX(x) & \forall y\;[((S(y) & ~ZEX(y)) -> leq(x,y))]))).
(all x  ((S(x) & ~ZEX(x)) <-> Cont(x,x))).
(all x all y  ((Cont(x,y) & Cont(y,x)) -> =(x,y))).
(all x all y all z  ((Cont(x,y) & Cont(y,z)) -> Cont(x,z))).
(all x all y  (ZEX(x) -> (S(x) & ~Cont(y,x) & ~Cont(x,y)))).
(all x all y  ((ZEX(x) & ZEX(y)) -> =(x,y))).
(all x all y  (P(x,y) <-> (Cont(x,y) & EqDim(x,y)))).
(all x all y  (C(x,y) <-> \exists z\;[(Cont(z,x) & Cont(z,y))])).
(all x  -(Inc(x,x))).
(all x all y  (Inc(x,y) -> Inc(y,x))).
(all x all y  (EqDim(x,y) -> ~Inc(x,y))).
(all x all y  (Inc(x,y) -> (lt(x,y) | lt(y,x)))).
(all x all y  ((Cont(x,y) & lt(x,y)) -> Inc(x,y))).
(all x all y all z  ((Inc(x,y) & P(y,z)) -> Inc(x,z))).
(all x all y  (Inc(x,y) <-> (\exists z\;[(leq(z,x) & ~EqDim(z,x) & Cont(z,x) & P(z,y))] | \exists z\;[(leq(z,y) & ~EqDim(z,y) & Cont(z,y) & P(z,x))]))).
(all x  ((S(x) & ~ZEX(x)) -> PO(x,x))).
(all x all y  (PO(x,y) -> PO(y,x))).
(all x all y  (PO(x,y) -> EqDim(x,y))).
(all x all y  (PO(x,y) <-> \exists z\;[(P(z,x) & P(z,y))])).
(all x  (Max(x) <-> (S(x) & ~ZEX(x) & \forall y\;[~PP(x,y)]))).
(all x  (Min(x) <-> (S(x) & ~ZEX(x) & \forall y\;[~PP(y,x)]))).
(all x all y  (PP(x,y) <-> (P(x,y) & ~=(x,y)))).
(all x all y  (BCont(x,y) -> (Cont(x,y) & ~EqDim(x,y)))).
(all x all y all v all z  ((SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y)) -> BCont(z,x))).
(all x all y all z all v  ((SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z)) -> ~BCont(z,v))).
(all x all y all z  ((BCont(x,y) & P(y,z) & \forall v,w\;[((P(v,z) & ~PO(v,y) & P(w,x)) -> ~Cont(w,v))]) -> BCont(x,z))).
(all x all y all z  ((BCont(x,y) & Cont(z,x)) -> BCont(z,y))).
(all x all y  (Covers(x,y) <-> (lt(y,x) & \forall z\;[(S(z) -> ~(lt(y,z) & lt(z,x)))]))).
(all x all y  (gt(x,y) <-> lt(y,x))).
(all x all y  (geq(x,y) <-> leq(y,x))).
(all x all y  (lt(x,y) <-> (leq(x,y) & ~EqDim(x,y)))).
end_of_list.
