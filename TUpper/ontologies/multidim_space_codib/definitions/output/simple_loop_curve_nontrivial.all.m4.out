============================== Mace4 =================================
Mace4 (32) version Oct-2007, Oct 2007.
Process 22580 was started by torsten on LAPTOP-UF9R3IH7,
Thu Feb 25 12:01:39 2021
The command was "/cygdrive/c/Users/torsten/macleod/mace4 -v0 -t600 -s60 -n2 -N40 -f C:\Users\torsten\GitHub\colore\ontologies\multidim_space_codib\definitions\conversions\simple_loop_curve_nontrivial.all.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file C:\Users\torsten\GitHub\colore\ontologies\multidim_space_codib\definitions\conversions\simple_loop_curve_nontrivial.all.p9


formulas(sos).
(all x (SimpleLoopCurve(x) <-> Curve(x) & Simple_S(x) & (all y (PointRegion(y) -> -BCont(y,x))))).
(exists var1 exists var2 (PO(var1,var2) & var1 != var2)).
(exists var3 exists var4 (-PO(var3,var4) & var3 != var4)).
(exists var5 exists var6 (PP(var5,var6) & var5 != var6)).
(exists var7 exists var8 (-PP(var7,var8) & var7 != var8)).
(exists var9 exists var10 (lt(var9,var10) & var9 != var10)).
(exists var11 exists var12 (-lt(var11,var12) & var11 != var12)).
(exists var13 Connected_S(var13)).
(exists var14 -Connected_S(var14)).
(exists var15 exists var16 (BCont(var15,var16) & var15 != var16)).
(exists var17 exists var18 (-BCont(var17,var18) & var17 != var18)).
(exists var19 exists var20 (C(var19,var20) & var19 != var20)).
(exists var21 exists var22 (-C(var21,var22) & var21 != var22)).
(exists var23 exists var24 (Inc(var23,var24) & var23 != var24)).
(exists var25 exists var26 (-Inc(var25,var26) & var25 != var26)).
(exists var27 SimpleLoopCurve(var27)).
(exists var28 -SimpleLoopCurve(var28)).
(exists var29 Min(var29)).
(exists var30 -Min(var30)).
(exists var31 Closed(var31)).
(exists var32 -Closed(var32)).
(exists var33 exists var34 (P(var33,var34) & var33 != var34)).
(exists var35 exists var36 (-P(var35,var36) & var35 != var36)).
(exists var37 exists var38 (Covers(var37,var38) & var37 != var38)).
(exists var39 exists var40 (-Covers(var39,var40) & var39 != var40)).
(exists var41 PointRegion(var41)).
(exists var42 -PointRegion(var42)).
(exists var43 exists var44 (geq(var43,var44) & var43 != var44)).
(exists var45 exists var46 (-geq(var45,var46) & var45 != var46)).
(exists var47 exists var48 (gt(var47,var48) & var47 != var48)).
(exists var49 exists var50 (-gt(var49,var50) & var49 != var50)).
(exists var51 S(var51)).
(exists var52 -S(var52)).
(exists var53 Max(var53)).
(exists var54 -Max(var54)).
(exists var55 exists var56 (SC(var55,var56) & var55 != var56)).
(exists var57 exists var58 (-SC(var57,var58) & var57 != var58)).
(exists var59 exists var60 (EqDim(var59,var60) & var59 != var60)).
(exists var61 exists var62 (-EqDim(var61,var62) & var61 != var62)).
(exists var63 Branched_S(var63)).
(exists var64 -Branched_S(var64)).
(exists var65 exists var66 (leq(var65,var66) & var65 != var66)).
(exists var67 exists var68 (-leq(var67,var68) & var67 != var68)).
(exists var69 MinDim(var69)).
(exists var70 -MinDim(var70)).
(exists var71 ZEX(var71)).
(exists var72 -ZEX(var72)).
(exists var73 Curve(var73)).
(exists var74 -Curve(var74)).
(exists var75 exists var76 (Cont(var75,var76) & var75 != var76)).
(exists var77 exists var78 (-Cont(var77,var78) & var77 != var78)).
(exists var79 Simple_S(var79)).
(exists var80 -Simple_S(var80)).
(exists var81 MaxDim(var81)).
(exists var82 -MaxDim(var82)).
(all x (Simple_S(x) <-> Connected_S(x) & -Branched_S(x))).
(all x (Branched_S(x) <-> Connected_S(x) & (exists p exists q exists r exists s (PP(p,x) & PP(q,x) & PP(r,x) & -PO(p,q) & -PO(p,r) & -PO(q,r) & Covers(p,s) & Covers(q,s) & Covers(r,s) & Cont(s,p) & Cont(s,q) & Cont(s,r))))).
(all x all y (Covers(x,y) <-> lt(y,x) & (all z (S(z) -> -(lt(y,z) & lt(z,x)))))).
(all x all y (gt(x,y) <-> lt(y,x))).
(all x all y (geq(x,y) <-> leq(y,x))).
(all x all y (lt(x,y) <-> leq(x,y) & -EqDim(x,y))).
(all x all y (EqDim(x,y) <-> leq(x,y) & leq(y,x))).
(all x all y (leq(x,y) -> S(x))).
(all x all y (leq(x,y) -> S(y))).
(all x (ZEX(x) -> S(x))).
(all x (S(x) -> leq(x,x))).
(all x all y all z (leq(x,y) & leq(y,z) -> leq(x,z))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & S(y) -> leq(x,y))).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
(all x all y (Cont(x,y) -> leq(x,y))).
(exists x MinDim(x)).
(all x (MaxDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) -> leq(y,x))))).
(all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & -ZEX(y) -> leq(x,y))))).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x (Connected_S(x) <-> S(x) & (all y (PP(y,x) -> SC(y,difference(x,y)))))).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> leq(z,x) & -EqDim(z,x) & leq(z,y) & -EqDim(z,y))))).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
(all x all y (S(x) & S(y) & -C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> leq(z,intersection(x,y)))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (lt(y,x) -> x = difference(x,y))).
(all x all y all z (leq(x,y) & Cont(z,x) & lt(intersection(z,y),z) -> Cont(z,difference(x,y)))).
(all x all y all z (leq(x,y) & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (leq(x,y) & P(z,difference(x,y)) -> lt(intersection(z,y),z))).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x (PointRegion(x) <-> MinDim(x))).
(all x (Max(x) <-> S(x) & -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> S(x) & -ZEX(x) & (all y -PP(y,x)))).
(all x all y (Inc(x,y) <-> (exists z (leq(z,x) & -EqDim(z,x) & Cont(z,x) & P(z,y))) | (exists z (leq(z,y) & -EqDim(z,y) & Cont(z,y) & P(z,x))))).
(all x (Curve(x) <-> -ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))))).
(all x all y (SC(x,y) -> C(x,y))).
(all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))).
(all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
(all x -SC(x,x)).
(all x all y (SC(x,y) -> SC(y,x))).
(all x all y (SC(x,y) -> (exists z (lt(z,x) & lt(z,y) & Cont(z,x) & Cont(z,y))))).
(all x -Inc(x,x)).
(all x all y (Inc(x,y) -> Inc(y,x))).
(all x all y (EqDim(x,y) -> -Inc(x,y))).
(all x all y (Inc(x,y) -> lt(x,y) | lt(y,x))).
(all x all y (Cont(x,y) & lt(x,y) -> Inc(x,y))).
(all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))).
(all x (S(x) & -ZEX(x) -> PO(x,x))).
(all x all y (PO(x,y) -> PO(y,x))).
(all x all y (PO(x,y) -> EqDim(x,y))).
(all x all y (BCont(x,y) -> Cont(x,y) & -EqDim(x,y))).
(all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).

% From the command line: assign(domain_size, 2).

% From the command line: assign(iterate_up_to, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (SimpleLoopCurve(x) <-> Curve(x) & Simple_S(x) & (all y (PointRegion(y) -> -BCont(y,x))))) # label(non_clause).  [assumption].
2 (exists var1 exists var2 (PO(var1,var2) & var1 != var2)) # label(non_clause).  [assumption].
3 (exists var3 exists var4 (-PO(var3,var4) & var3 != var4)) # label(non_clause).  [assumption].
4 (exists var5 exists var6 (PP(var5,var6) & var5 != var6)) # label(non_clause).  [assumption].
5 (exists var7 exists var8 (-PP(var7,var8) & var7 != var8)) # label(non_clause).  [assumption].
6 (exists var9 exists var10 (lt(var9,var10) & var9 != var10)) # label(non_clause).  [assumption].
7 (exists var11 exists var12 (-lt(var11,var12) & var11 != var12)) # label(non_clause).  [assumption].
8 (exists var13 Connected_S(var13)) # label(non_clause).  [assumption].
9 (exists var14 -Connected_S(var14)) # label(non_clause).  [assumption].
10 (exists var15 exists var16 (BCont(var15,var16) & var15 != var16)) # label(non_clause).  [assumption].
11 (exists var17 exists var18 (-BCont(var17,var18) & var17 != var18)) # label(non_clause).  [assumption].
12 (exists var19 exists var20 (C(var19,var20) & var19 != var20)) # label(non_clause).  [assumption].
13 (exists var21 exists var22 (-C(var21,var22) & var21 != var22)) # label(non_clause).  [assumption].
14 (exists var23 exists var24 (Inc(var23,var24) & var23 != var24)) # label(non_clause).  [assumption].
15 (exists var25 exists var26 (-Inc(var25,var26) & var25 != var26)) # label(non_clause).  [assumption].
16 (exists var27 SimpleLoopCurve(var27)) # label(non_clause).  [assumption].
17 (exists var28 -SimpleLoopCurve(var28)) # label(non_clause).  [assumption].
18 (exists var29 Min(var29)) # label(non_clause).  [assumption].
19 (exists var30 -Min(var30)) # label(non_clause).  [assumption].
20 (exists var31 Closed(var31)) # label(non_clause).  [assumption].
21 (exists var32 -Closed(var32)) # label(non_clause).  [assumption].
22 (exists var33 exists var34 (P(var33,var34) & var33 != var34)) # label(non_clause).  [assumption].
23 (exists var35 exists var36 (-P(var35,var36) & var35 != var36)) # label(non_clause).  [assumption].
24 (exists var37 exists var38 (Covers(var37,var38) & var37 != var38)) # label(non_clause).  [assumption].
25 (exists var39 exists var40 (-Covers(var39,var40) & var39 != var40)) # label(non_clause).  [assumption].
26 (exists var41 PointRegion(var41)) # label(non_clause).  [assumption].
27 (exists var42 -PointRegion(var42)) # label(non_clause).  [assumption].
28 (exists var43 exists var44 (geq(var43,var44) & var43 != var44)) # label(non_clause).  [assumption].
29 (exists var45 exists var46 (-geq(var45,var46) & var45 != var46)) # label(non_clause).  [assumption].
30 (exists var47 exists var48 (gt(var47,var48) & var47 != var48)) # label(non_clause).  [assumption].
31 (exists var49 exists var50 (-gt(var49,var50) & var49 != var50)) # label(non_clause).  [assumption].
32 (exists var51 S(var51)) # label(non_clause).  [assumption].
33 (exists var52 -S(var52)) # label(non_clause).  [assumption].
34 (exists var53 Max(var53)) # label(non_clause).  [assumption].
35 (exists var54 -Max(var54)) # label(non_clause).  [assumption].
36 (exists var55 exists var56 (SC(var55,var56) & var55 != var56)) # label(non_clause).  [assumption].
37 (exists var57 exists var58 (-SC(var57,var58) & var57 != var58)) # label(non_clause).  [assumption].
38 (exists var59 exists var60 (EqDim(var59,var60) & var59 != var60)) # label(non_clause).  [assumption].
39 (exists var61 exists var62 (-EqDim(var61,var62) & var61 != var62)) # label(non_clause).  [assumption].
40 (exists var63 Branched_S(var63)) # label(non_clause).  [assumption].
41 (exists var64 -Branched_S(var64)) # label(non_clause).  [assumption].
42 (exists var65 exists var66 (leq(var65,var66) & var65 != var66)) # label(non_clause).  [assumption].
43 (exists var67 exists var68 (-leq(var67,var68) & var67 != var68)) # label(non_clause).  [assumption].
44 (exists var69 MinDim(var69)) # label(non_clause).  [assumption].
45 (exists var70 -MinDim(var70)) # label(non_clause).  [assumption].
46 (exists var71 ZEX(var71)) # label(non_clause).  [assumption].
47 (exists var72 -ZEX(var72)) # label(non_clause).  [assumption].
48 (exists var73 Curve(var73)) # label(non_clause).  [assumption].
49 (exists var74 -Curve(var74)) # label(non_clause).  [assumption].
50 (exists var75 exists var76 (Cont(var75,var76) & var75 != var76)) # label(non_clause).  [assumption].
51 (exists var77 exists var78 (-Cont(var77,var78) & var77 != var78)) # label(non_clause).  [assumption].
52 (exists var79 Simple_S(var79)) # label(non_clause).  [assumption].
53 (exists var80 -Simple_S(var80)) # label(non_clause).  [assumption].
54 (exists var81 MaxDim(var81)) # label(non_clause).  [assumption].
55 (exists var82 -MaxDim(var82)) # label(non_clause).  [assumption].
56 (all x (Simple_S(x) <-> Connected_S(x) & -Branched_S(x))) # label(non_clause).  [assumption].
57 (all x (Branched_S(x) <-> Connected_S(x) & (exists p exists q exists r exists s (PP(p,x) & PP(q,x) & PP(r,x) & -PO(p,q) & -PO(p,r) & -PO(q,r) & Covers(p,s) & Covers(q,s) & Covers(r,s) & Cont(s,p) & Cont(s,q) & Cont(s,r))))) # label(non_clause).  [assumption].
58 (all x all y (Covers(x,y) <-> lt(y,x) & (all z (S(z) -> -(lt(y,z) & lt(z,x)))))) # label(non_clause).  [assumption].
59 (all x all y (gt(x,y) <-> lt(y,x))) # label(non_clause).  [assumption].
60 (all x all y (geq(x,y) <-> leq(y,x))) # label(non_clause).  [assumption].
61 (all x all y (lt(x,y) <-> leq(x,y) & -EqDim(x,y))) # label(non_clause).  [assumption].
62 (all x all y (EqDim(x,y) <-> leq(x,y) & leq(y,x))) # label(non_clause).  [assumption].
63 (all x all y (leq(x,y) -> S(x))) # label(non_clause).  [assumption].
64 (all x all y (leq(x,y) -> S(y))) # label(non_clause).  [assumption].
65 (all x (ZEX(x) -> S(x))) # label(non_clause).  [assumption].
66 (all x (S(x) -> leq(x,x))) # label(non_clause).  [assumption].
67 (all x all y all z (leq(x,y) & leq(y,z) -> leq(x,z))) # label(non_clause).  [assumption].
68 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
69 (all x all y (ZEX(x) & S(y) -> leq(x,y))) # label(non_clause).  [assumption].
70 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
71 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
72 (all x all y (Cont(x,y) -> leq(x,y))) # label(non_clause).  [assumption].
73 (exists x MinDim(x)) # label(non_clause).  [assumption].
74 (all x (MaxDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) -> leq(y,x))))) # label(non_clause).  [assumption].
75 (all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & -ZEX(y) -> leq(x,y))))) # label(non_clause).  [assumption].
76 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
77 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
78 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
79 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
80 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
81 (all x (Connected_S(x) <-> S(x) & (all y (PP(y,x) -> SC(y,difference(x,y)))))) # label(non_clause).  [assumption].
82 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> leq(z,x) & -EqDim(z,x) & leq(z,y) & -EqDim(z,y))))) # label(non_clause).  [assumption].
83 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
84 (all x all y (S(x) & S(y) & -C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
85 (all x all y (S(x) & S(y) & -ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
86 (all x all y all z (Cont(z,x) & Cont(z,y) -> leq(z,intersection(x,y)))) # label(non_clause).  [assumption].
87 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
88 (all x all y (S(x) & S(y) & -ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
89 (all x all y (lt(y,x) -> x = difference(x,y))) # label(non_clause).  [assumption].
90 (all x all y all z (leq(x,y) & Cont(z,x) & lt(intersection(z,y),z) -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
91 (all x all y all z (leq(x,y) & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
92 (all x all y all z (leq(x,y) & P(z,difference(x,y)) -> lt(intersection(z,y),z))) # label(non_clause).  [assumption].
93 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
94 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
95 (all x (PointRegion(x) <-> MinDim(x))) # label(non_clause).  [assumption].
96 (all x (Max(x) <-> S(x) & -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
97 (all x (Min(x) <-> S(x) & -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
98 (all x all y (Inc(x,y) <-> (exists z (leq(z,x) & -EqDim(z,x) & Cont(z,x) & P(z,y))) | (exists z (leq(z,y) & -EqDim(z,y) & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
99 (all x (Curve(x) <-> -ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))))) # label(non_clause).  [assumption].
100 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause).  [assumption].
101 (all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))) # label(non_clause).  [assumption].
102 (all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
103 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause).  [assumption].
104 (all x -SC(x,x)) # label(non_clause).  [assumption].
105 (all x all y (SC(x,y) -> SC(y,x))) # label(non_clause).  [assumption].
106 (all x all y (SC(x,y) -> (exists z (lt(z,x) & lt(z,y) & Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
107 (all x -Inc(x,x)) # label(non_clause).  [assumption].
108 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause).  [assumption].
109 (all x all y (EqDim(x,y) -> -Inc(x,y))) # label(non_clause).  [assumption].
110 (all x all y (Inc(x,y) -> lt(x,y) | lt(y,x))) # label(non_clause).  [assumption].
111 (all x all y (Cont(x,y) & lt(x,y) -> Inc(x,y))) # label(non_clause).  [assumption].
112 (all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))) # label(non_clause).  [assumption].
113 (all x (S(x) & -ZEX(x) -> PO(x,x))) # label(non_clause).  [assumption].
114 (all x all y (PO(x,y) -> PO(y,x))) # label(non_clause).  [assumption].
115 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause).  [assumption].
116 (all x all y (BCont(x,y) -> Cont(x,y) & -EqDim(x,y))) # label(non_clause).  [assumption].
117 (all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
118 (all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
119 (all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
120 (all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
121 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-SimpleLoopCurve(x) | Curve(x).
-SimpleLoopCurve(x) | Simple_S(x).
-SimpleLoopCurve(x) | -PointRegion(y) | -BCont(y,x).
SimpleLoopCurve(x) | -Curve(x) | -Simple_S(x) | PointRegion(f1(x)).
SimpleLoopCurve(x) | -Curve(x) | -Simple_S(x) | BCont(f1(x),x).
PO(c1,c2).
c2 != c1.
-PO(c3,c4).
c4 != c3.
PP(c5,c6).
c6 != c5.
-PP(c7,c8).
c8 != c7.
lt(c9,c10).
c10 != c9.
-lt(c11,c12).
c12 != c11.
Connected_S(c13).
-Connected_S(c14).
BCont(c15,c16).
c16 != c15.
-BCont(c17,c18).
c18 != c17.
C(c19,c20).
c20 != c19.
-C(c21,c22).
c22 != c21.
Inc(c23,c24).
c24 != c23.
-Inc(c25,c26).
c26 != c25.
SimpleLoopCurve(c27).
-SimpleLoopCurve(c28).
Min(c29).
-Min(c30).
Closed(c31).
-Closed(c32).
P(c33,c34).
c34 != c33.
-P(c35,c36).
c36 != c35.
Covers(c37,c38).
c38 != c37.
-Covers(c39,c40).
c40 != c39.
PointRegion(c41).
-PointRegion(c42).
geq(c43,c44).
c44 != c43.
-geq(c45,c46).
c46 != c45.
gt(c47,c48).
c48 != c47.
-gt(c49,c50).
c50 != c49.
S(c51).
-S(c52).
Max(c53).
-Max(c54).
SC(c55,c56).
c56 != c55.
-SC(c57,c58).
c58 != c57.
EqDim(c59,c60).
c60 != c59.
-EqDim(c61,c62).
c62 != c61.
Branched_S(c63).
-Branched_S(c64).
leq(c65,c66).
c66 != c65.
-leq(c67,c68).
c68 != c67.
MinDim(c69).
-MinDim(c70).
ZEX(c71).
-ZEX(c72).
Curve(c73).
-Curve(c74).
Cont(c75,c76).
c76 != c75.
-Cont(c77,c78).
c78 != c77.
Simple_S(c79).
-Simple_S(c80).
MaxDim(c81).
-MaxDim(c82).
-Simple_S(x) | Connected_S(x).
-Simple_S(x) | -Branched_S(x).
Simple_S(x) | -Connected_S(x) | Branched_S(x).
-Branched_S(x) | Connected_S(x).
-Branched_S(x) | PP(f2(x),x).
-Branched_S(x) | PP(f3(x),x).
-Branched_S(x) | PP(f4(x),x).
-Branched_S(x) | -PO(f2(x),f3(x)).
-Branched_S(x) | -PO(f2(x),f4(x)).
-Branched_S(x) | -PO(f3(x),f4(x)).
-Branched_S(x) | Covers(f2(x),f5(x)).
-Branched_S(x) | Covers(f3(x),f5(x)).
-Branched_S(x) | Covers(f4(x),f5(x)).
-Branched_S(x) | Cont(f5(x),f2(x)).
-Branched_S(x) | Cont(f5(x),f3(x)).
-Branched_S(x) | Cont(f5(x),f4(x)).
Branched_S(x) | -Connected_S(x) | -PP(y,x) | -PP(z,x) | -PP(u,x) | PO(y,z) | PO(y,u) | PO(z,u) | -Covers(y,w) | -Covers(z,w) | -Covers(u,w) | -Cont(w,y) | -Cont(w,z) | -Cont(w,u).
-Covers(x,y) | lt(y,x).
-Covers(x,y) | -S(z) | -lt(y,z) | -lt(z,x).
Covers(x,y) | -lt(y,x) | S(f6(x,y)).
Covers(x,y) | -lt(y,x) | lt(y,f6(x,y)).
Covers(x,y) | -lt(y,x) | lt(f6(x,y),x).
-gt(x,y) | lt(y,x).
gt(x,y) | -lt(y,x).
-geq(x,y) | leq(y,x).
geq(x,y) | -leq(y,x).
-lt(x,y) | leq(x,y).
-lt(x,y) | -EqDim(x,y).
lt(x,y) | -leq(x,y) | EqDim(x,y).
-EqDim(x,y) | leq(x,y).
-EqDim(x,y) | leq(y,x).
EqDim(x,y) | -leq(x,y) | -leq(y,x).
-leq(x,y) | S(x).
-leq(x,y) | S(y).
-ZEX(x) | S(x).
-S(x) | leq(x,x).
-leq(x,y) | -leq(y,z) | leq(x,z).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | -S(y) | leq(x,y).
-PO(x,y) | P(f7(x,y),x).
-PO(x,y) | P(f7(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-Cont(x,y) | leq(x,y).
MinDim(c83).
-MaxDim(x) | S(x).
-MaxDim(x) | -ZEX(x).
-MaxDim(x) | -S(y) | leq(y,x).
MaxDim(x) | -S(x) | ZEX(x) | S(f8(x)).
MaxDim(x) | -S(x) | ZEX(x) | -leq(f8(x),x).
-MinDim(x) | S(x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -S(y) | ZEX(y) | leq(x,y).
MinDim(x) | -S(x) | ZEX(x) | S(f9(x)).
MinDim(x) | -S(x) | ZEX(x) | -ZEX(f9(x)).
MinDim(x) | -S(x) | ZEX(x) | -leq(x,f9(x)).
-S(x) | ZEX(x) | Cont(x,x).
S(x) | -Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | S(x).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
-Connected_S(x) | S(x).
-Connected_S(x) | -PP(y,x) | SC(y,difference(x,y)).
Connected_S(x) | -S(x) | PP(f10(x),x).
Connected_S(x) | -S(x) | -SC(f10(x),difference(x,f10(x))).
-SC(x,y) | Cont(f11(x,y),x).
-SC(x,y) | Cont(f11(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | leq(z,x).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,x).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | leq(z,y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f12(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f12(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -leq(f12(x,y),x) | EqDim(f12(x,y),x) | -leq(f12(x,y),y) | EqDim(f12(x,y),y).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
-S(x) | -S(y) | C(x,y) | ZEX(intersection(x,y)).
S(x) | -ZEX(intersection(x,y)).
S(x) | -ZEX(intersection(y,x)).
-C(x,y) | -ZEX(intersection(x,y)).
-S(x) | -S(y) | ZEX(intersection(x,y)) | Cont(intersection(x,y),x).
-Cont(x,y) | -Cont(x,z) | leq(x,intersection(y,z)).
-Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).
Cont(x,y) | -P(x,intersection(y,z)).
Cont(x,y) | -P(x,intersection(z,y)).
EqDim(x,intersection(y,z)) | -P(x,intersection(y,z)).
-S(x) | -S(y) | ZEX(difference(x,y)) | EqDim(x,difference(x,y)).
-lt(x,y) | difference(y,x) = y.
-leq(x,y) | -Cont(z,x) | -lt(intersection(z,y),z) | Cont(z,difference(x,y)).
-leq(x,y) | -Cont(z,difference(x,y)) | Cont(z,x).
-leq(x,y) | -P(z,difference(x,y)) | lt(intersection(z,y),z).
-ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).
ZEX(difference(x,y)) | -ZEX(x).
ZEX(difference(x,y)) | -Cont(x,y).
-C(x,y) | Cont(f13(x,y),x).
-C(x,y) | Cont(f13(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
-PointRegion(x) | MinDim(x).
PointRegion(x) | -MinDim(x).
-Max(x) | S(x).
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | -S(x) | ZEX(x) | PP(x,f14(x)).
-Min(x) | S(x).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | -S(x) | ZEX(x) | PP(f15(x),x).
-Inc(x,y) | leq(f16(x,y),x) | leq(f17(x,y),y).
-Inc(x,y) | leq(f16(x,y),x) | -EqDim(f17(x,y),y).
-Inc(x,y) | leq(f16(x,y),x) | Cont(f17(x,y),y).
-Inc(x,y) | leq(f16(x,y),x) | P(f17(x,y),x).
-Inc(x,y) | -EqDim(f16(x,y),x) | leq(f17(x,y),y).
-Inc(x,y) | -EqDim(f16(x,y),x) | -EqDim(f17(x,y),y).
-Inc(x,y) | -EqDim(f16(x,y),x) | Cont(f17(x,y),y).
-Inc(x,y) | -EqDim(f16(x,y),x) | P(f17(x,y),x).
-Inc(x,y) | Cont(f16(x,y),x) | leq(f17(x,y),y).
-Inc(x,y) | Cont(f16(x,y),x) | -EqDim(f17(x,y),y).
-Inc(x,y) | Cont(f16(x,y),x) | Cont(f17(x,y),y).
-Inc(x,y) | Cont(f16(x,y),x) | P(f17(x,y),x).
-Inc(x,y) | P(f16(x,y),y) | leq(f17(x,y),y).
-Inc(x,y) | P(f16(x,y),y) | -EqDim(f17(x,y),y).
-Inc(x,y) | P(f16(x,y),y) | Cont(f17(x,y),y).
-Inc(x,y) | P(f16(x,y),y) | P(f17(x,y),x).
Inc(x,y) | -leq(z,x) | EqDim(z,x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -leq(z,y) | EqDim(z,y) | -Cont(z,y) | -P(z,x).
-Curve(x) | -ZEX(x).
-Curve(x) | -MinDim(x).
-Curve(x) | -MinDim(y) | Covers(x,y).
-Curve(x) | MinDim(y) | -Covers(x,y).
Curve(x) | ZEX(x) | MinDim(x) | MinDim(f18(x)) | Covers(x,f18(x)).
Curve(x) | ZEX(x) | MinDim(x) | -MinDim(f18(x)) | -Covers(x,f18(x)).
-SC(x,y) | C(x,y).
-SC(x,y) | -Cont(z,x) | -P(z,y).
-SC(x,y) | -P(z,x) | -Cont(z,y).
-C(x,y) | Cont(f19(x,y),x) | SC(x,y).
-C(x,y) | Cont(f19(x,y),y) | SC(x,y).
-C(x,y) | P(f19(x,y),x) | P(f19(x,y),y) | SC(x,y).
-SC(x,x).
-SC(x,y) | SC(y,x).
-SC(x,y) | lt(f20(x,y),x).
-SC(x,y) | lt(f20(x,y),y).
-SC(x,y) | Cont(f20(x,y),x).
-SC(x,y) | Cont(f20(x,y),y).
-Inc(x,x).
-Inc(x,y) | Inc(y,x).
-EqDim(x,y) | -Inc(x,y).
-Inc(x,y) | lt(x,y) | lt(y,x).
-Cont(x,y) | -lt(x,y) | Inc(x,y).
-Inc(x,y) | -P(y,z) | Inc(x,z).
-S(x) | ZEX(x) | PO(x,x).
-PO(x,y) | PO(y,x).
-PO(x,y) | EqDim(x,y).
-BCont(x,y) | Cont(x,y).
-BCont(x,y) | -EqDim(x,y).
-SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).
-SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).
-BCont(x,y) | -P(y,z) | P(f21(x,y,z),z) | BCont(x,z).
-BCont(x,y) | -P(y,z) | -PO(f21(x,y,z),y) | BCont(x,z).
-BCont(x,y) | -P(y,z) | P(f22(x,y,z),x) | BCont(x,z).
-BCont(x,y) | -P(y,z) | Cont(f22(x,y,z),f21(x,y,z)) | BCont(x,z).
-BCont(x,y) | -Cont(z,x) | BCont(z,y).
-Closed(x) | -BCont(y,x).
Closed(x) | BCont(f23(x),x).
end_of_list.

============================== end of clauses for search =============

% The maximum domain element in the input is 0.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.05 seconds).
Ground clauses: seen=843, kept=793.
Selections=1, assignments=2, propagations=40, current_models=0.
Rewrite_terms=10, rewrite_bools=372, indexes=2.
Rules_from_neg_clauses=4, cross_offs=4.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.05 seconds).
Ground clauses: seen=2243, kept=2132.
Selections=18, assignments=52, propagations=681, current_models=0.
Rewrite_terms=120, rewrite_bools=7584, indexes=84.
Rules_from_neg_clauses=63, cross_offs=278.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.14 seconds).
Ground clauses: seen=5147, kept=4935.
Selections=86, assignments=337, propagations=6775, current_models=0.
Rewrite_terms=4030, rewrite_bools=84419, indexes=1063.
Rules_from_neg_clauses=732, cross_offs=5183.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 3.16 seconds).
Ground clauses: seen=10653, kept=10288.
Selections=12664, assignments=63268, propagations=219977, current_models=0.
Rewrite_terms=1235669, rewrite_bools=3400302, indexes=59669.
Rules_from_neg_clauses=37360, cross_offs=212224.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===

====== Domain 6 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 63.17 seconds).
Ground clauses: seen=20387, kept=19805.
Selections=151609, assignments=909444, propagations=1771825, current_models=0.
Rewrite_terms=13310841, rewrite_bools=23936968, indexes=757808.
Rules_from_neg_clauses=278749, cross_offs=2015983.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

=== Mace4 starting on domain size 7. ===

====== Domain 7 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 7.

Current CPU time: 0.00 seconds (total CPU time: 123.19 seconds).
Ground clauses: seen=36623, kept=35748.
Selections=40377, assignments=282357, propagations=1705292, current_models=0.
Rewrite_terms=7947555, rewrite_bools=21044307, indexes=746059.
Rules_from_neg_clauses=133081, cross_offs=1639938.

============================== end of statistics =====================

============================== DOMAIN SIZE 8 =========================

=== Mace4 starting on domain size 8. ===

====== Domain 8 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 8.

Current CPU time: 0.00 seconds (total CPU time: 183.22 seconds).
Ground clauses: seen=62403, kept=61147.
Selections=22935, assignments=183018, propagations=1054060, current_models=0.
Rewrite_terms=6809625, rewrite_bools=18352624, indexes=919673.
Rules_from_neg_clauses=68376, cross_offs=1155417.

============================== end of statistics =====================

============================== DOMAIN SIZE 9 =========================

=== Mace4 starting on domain size 9. ===

====== Domain 9 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 9.

Current CPU time: 0.00 seconds (total CPU time: 243.38 seconds).
Ground clauses: seen=101657, kept=99920.
Selections=14490, assignments=129987, propagations=853209, current_models=0.
Rewrite_terms=5711202, rewrite_bools=24530927, indexes=1636355.
Rules_from_neg_clauses=22993, cross_offs=840560.

============================== end of statistics =====================

============================== DOMAIN SIZE 10 ========================

=== Mace4 starting on domain size 10. ===

====== Domain 10 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 10.

Current CPU time: 0.00 seconds (total CPU time: 303.51 seconds).
Ground clauses: seen=159323, kept=156993.
Selections=65746, assignments=656410, propagations=598183, current_models=0.
Rewrite_terms=14739094, rewrite_bools=16406296, indexes=828033.
Rules_from_neg_clauses=128074, cross_offs=1666745.

============================== end of statistics =====================

============================== DOMAIN SIZE 11 ========================

=== Mace4 starting on domain size 11. ===

====== Domain 11 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 11.

Current CPU time: 0.00 seconds (total CPU time: 363.72 seconds).
Ground clauses: seen=241467, kept=238420.
Selections=12870, assignments=140889, propagations=557418, current_models=0.
Rewrite_terms=5664153, rewrite_bools=18743727, indexes=1115895.
Rules_from_neg_clauses=6139, cross_offs=534138.

============================== end of statistics =====================

============================== DOMAIN SIZE 12 ========================

=== Mace4 starting on domain size 12. ===

====== Domain 12 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 12.

Current CPU time: 0.00 seconds (total CPU time: 424.05 seconds).
Ground clauses: seen=355403, kept=351503.
Selections=7161, assignments=85000, propagations=406706, current_models=0.
Rewrite_terms=4278941, rewrite_bools=15345017, indexes=648446.
Rules_from_neg_clauses=2937, cross_offs=520086.

============================== end of statistics =====================

============================== DOMAIN SIZE 13 ========================

=== Mace4 starting on domain size 13. ===

====== Domain 13 terminated by max_seconds_per. ======

============================== STATISTICS ============================

For domain size 13.

Current CPU time: 0.00 seconds (total CPU time: 484.36 seconds).
Ground clauses: seen=509813, kept=504912.
Selections=2796, assignments=35381, propagations=343888, current_models=0.
Rewrite_terms=1658743, rewrite_bools=17766512, indexes=611567.
Rules_from_neg_clauses=577, cross_offs=757583.

============================== end of statistics =====================

============================== DOMAIN SIZE 14 ========================

=== Mace4 starting on domain size 14. ===

============================== STATISTICS ============================

For domain size 14.

Current CPU time: 0.00 seconds (total CPU time: 492.91 seconds).
Ground clauses: seen=714867, kept=708805.
Selections=0, assignments=0, propagations=42, current_models=0.
Rewrite_terms=0, rewrite_bools=109746, indexes=0.
Rules_from_neg_clauses=0, cross_offs=0.

============================== end of statistics =====================

------ process 22580 exit (max_megs_no) ------

User_CPU=492.91, System_CPU=2.64, Wall_clock=518.

Exiting with failure.

Process 22580 exit (max_megs_no) Thu Feb 25 12:10:17 2021
The process finished Thu Feb 25 12:10:17 2021
