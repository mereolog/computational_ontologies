============================== Mace4 =================================
Mace4 (32) version Oct-2007, Oct 2007.
Process 26928 was started by torsten on LAPTOP-UF9R3IH7,
Sun Apr 25 16:29:16 2021
The command was "/cygdrive/c/Users/torsten/macleod/mace4 -v0 -t600 -s60 -n2 -N40 -f C:\Users\torsten\GitHub\colore\ontologies\simple_features\conversions\sfc_fol_nontrivial.all.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file C:\Users\torsten\GitHub\colore\ontologies\simple_features\conversions\sfc_fol_nontrivial.all.p9


formulas(sos).
(exists var1 exists var2 (lt(var1,var2) & var1 != var2)).
(exists var3 exists var4 (-lt(var3,var4) & var3 != var4)).
(exists var5 exists var6 (Covers(var5,var6) & var5 != var6)).
(exists var7 exists var8 (-Covers(var7,var8) & var7 != var8)).
(exists var9 Multipart_Curve(var9)).
(exists var10 -Multipart_Curve(var10)).
(exists var11 exists var12 (C(var11,var12) & var11 != var12)).
(exists var13 exists var14 (-C(var13,var14) & var13 != var14)).
(exists var15 exists var16 (sf_contains(var15,var16) & var15 != var16)).
(exists var17 exists var18 (-sf_contains(var17,var18) & var17 != var18)).
(exists var19 Multipart_S(var19)).
(exists var20 -Multipart_S(var20)).
(exists var21 exists var22 (Inc(var21,var22) & var21 != var22)).
(exists var23 exists var24 (-Inc(var23,var24) & var23 != var24)).
(exists var25 exists var26 (P(var25,var26) & var25 != var26)).
(exists var27 exists var28 (-P(var27,var28) & var27 != var28)).
(exists var29 ZEX(var29)).
(exists var30 -ZEX(var30)).
(exists var31 exists var32 (Cont(var31,var32) & var31 != var32)).
(exists var33 exists var34 (-Cont(var33,var34) & var33 != var34)).
(exists var35 sf_geometry(var35)).
(exists var36 -sf_geometry(var36)).
(exists var37 Curve(var37)).
(exists var38 -Curve(var38)).
(exists var39 sf_multi_polygon(var39)).
(exists var40 -sf_multi_polygon(var40)).
(exists var41 sf_multi_curve(var41)).
(exists var42 -sf_multi_curve(var42)).
(exists var43 sf_multi_line_string(var43)).
(exists var44 -sf_multi_line_string(var44)).
(exists var45 MaxDim(var45)).
(exists var46 -MaxDim(var46)).
(exists var47 Min(var47)).
(exists var48 -Min(var48)).
(exists var49 sf_curve(var49)).
(exists var50 -sf_curve(var50)).
(exists var51 exists var52 (geq(var51,var52) & var51 != var52)).
(exists var53 exists var54 (-geq(var53,var54) & var53 != var54)).
(exists var55 sf_polygon(var55)).
(exists var56 -sf_polygon(var56)).
(exists var57 sf_geometry_collection(var57)).
(exists var58 -sf_geometry_collection(var58)).
(exists var59 Point(var59)).
(exists var60 -Point(var60)).
(exists var61 Simple_ArealRegion(var61)).
(exists var62 -Simple_ArealRegion(var62)).
(exists var63 Closed(var63)).
(exists var64 -Closed(var64)).
(exists var65 exists var66 (sf_intersects(var65,var66) & var65 != var66)).
(exists var67 exists var68 (-sf_intersects(var67,var68) & var67 != var68)).
(exists var69 PointRegion(var69)).
(exists var70 -PointRegion(var70)).
(exists var71 exists var72 (sf_relate(var71,var72) & var71 != var72)).
(exists var73 exists var74 (-sf_relate(var73,var74) & var73 != var74)).
(exists var75 Multipart_ArealRegion(var75)).
(exists var76 -Multipart_ArealRegion(var76)).
(exists var77 exists var78 (sf_crosses(var77,var78) & var77 != var78)).
(exists var79 exists var80 (-sf_crosses(var79,var80) & var79 != var80)).
(exists var81 exists var82 (sf_touches(var81,var82) & var81 != var82)).
(exists var83 exists var84 (-sf_touches(var83,var84) & var83 != var84)).
(exists var85 exists var86 (gt(var85,var86) & var85 != var86)).
(exists var87 exists var88 (-gt(var87,var88) & var87 != var88)).
(exists var89 Branched_S(var89)).
(exists var90 -Branched_S(var90)).
(exists var91 sf_surface(var91)).
(exists var92 -sf_surface(var92)).
(exists var93 sf_polyhedral_surface(var93)).
(exists var94 -sf_polyhedral_surface(var94)).
(exists var95 Simple_S(var95)).
(exists var96 -Simple_S(var96)).
(exists var97 sf_linear_ring(var97)).
(exists var98 -sf_linear_ring(var98)).
(exists var99 exists var100 (BCont(var99,var100) & var99 != var100)).
(exists var101 exists var102 (-BCont(var101,var102) & var101 != var102)).
(exists var103 exists var104 (EqDim(var103,var104) & var103 != var104)).
(exists var105 exists var106 (-EqDim(var105,var106) & var105 != var106)).
(exists var107 exists var108 (sf_disjoint(var107,var108) & var107 != var108)).
(exists var109 exists var110 (-sf_disjoint(var109,var110) & var109 != var110)).
(exists var111 sf_tin(var111)).
(exists var112 -sf_tin(var112)).
(exists var113 exists var114 (leq(var113,var114) & var113 != var114)).
(exists var115 exists var116 (-leq(var115,var116) & var115 != var116)).
(exists var117 sf_line_string(var117)).
(exists var118 -sf_line_string(var118)).
(exists var119 ArealRegion(var119)).
(exists var120 -ArealRegion(var120)).
(exists var121 sf_triangle(var121)).
(exists var122 -sf_triangle(var122)).
(exists var123 sf_line(var123)).
(exists var124 -sf_line(var124)).
(exists var125 sf_point(var125)).
(exists var126 -sf_point(var126)).
(exists var127 exists var128 (sf_overlaps(var127,var128) & var127 != var128)).
(exists var129 exists var130 (-sf_overlaps(var129,var130) & var129 != var130)).
(exists var131 sf_multi_surface(var131)).
(exists var132 -sf_multi_surface(var132)).
(exists var133 exists var134 (sf_equals(var133,var134) & var133 != var134)).
(exists var135 exists var136 (-sf_equals(var135,var136) & var135 != var136)).
(exists var137 S(var137)).
(exists var138 -S(var138)).
(exists var139 Connected_S(var139)).
(exists var140 -Connected_S(var140)).
(exists var141 exists var142 (SC(var141,var142) & var141 != var142)).
(exists var143 exists var144 (-SC(var143,var144) & var143 != var144)).
(exists var145 Max(var145)).
(exists var146 -Max(var146)).
(exists var147 exists var148 (sf_within(var147,var148) & var147 != var148)).
(exists var149 exists var150 (-sf_within(var149,var150) & var149 != var150)).
(exists var151 exists var152 (PP(var151,var152) & var151 != var152)).
(exists var153 exists var154 (-PP(var153,var154) & var153 != var154)).
(exists var155 MinDim(var155)).
(exists var156 -MinDim(var156)).
(exists var157 sf_multi_point(var157)).
(exists var158 -sf_multi_point(var158)).
(exists var159 exists var160 (PO(var159,var160) & var159 != var160)).
(exists var161 exists var162 (-PO(var161,var162) & var161 != var162)).
(all x all y (sf_geometry(x) <-> S(x))).
(all x all y (sf_relate(x,y) <-> sf_intersects(x,y) | sf_disjoint(x,y))).
(all x all y (SC(x,y) -> C(x,y))).
(all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))).
(all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
(all x -SC(x,x)).
(all x all y (SC(x,y) -> SC(y,x))).
(all x all y (SC(x,y) -> (exists z (lt(z,x) & lt(z,y) & Cont(z,x) & Cont(z,y))))).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> leq(z,x) & -EqDim(z,x) & leq(z,y) & -EqDim(z,y))))).
(all x all y (EqDim(x,y) <-> leq(x,y) & leq(y,x))).
(all x all y (leq(x,y) -> S(x))).
(all x all y (leq(x,y) -> S(y))).
(all x (ZEX(x) -> S(x))).
(all x (S(x) -> leq(x,x))).
(all x all y all z (leq(x,y) & leq(y,z) -> leq(x,z))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & S(y) -> leq(x,y))).
(all x all y (Cont(x,y) -> leq(x,y))).
(exists x MinDim(x)).
(all x (MaxDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) -> leq(y,x))))).
(all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & -ZEX(y) -> leq(x,y))))).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x -Inc(x,x)).
(all x all y (Inc(x,y) -> Inc(y,x))).
(all x all y (EqDim(x,y) -> -Inc(x,y))).
(all x all y (Inc(x,y) -> lt(x,y) | lt(y,x))).
(all x all y (Cont(x,y) & lt(x,y) -> Inc(x,y))).
(all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))).
(all x all y (Inc(x,y) <-> (exists z (leq(z,x) & -EqDim(z,x) & Cont(z,x) & P(z,y))) | (exists z (leq(z,y) & -EqDim(z,y) & Cont(z,y) & P(z,x))))).
(all x (S(x) & -ZEX(x) -> PO(x,x))).
(all x all y (PO(x,y) -> PO(y,x))).
(all x all y (PO(x,y) -> EqDim(x,y))).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
(all x (Max(x) <-> S(x) & -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> S(x) & -ZEX(x) & (all y -PP(y,x)))).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
(all x all y (BCont(x,y) -> Cont(x,y) & -EqDim(x,y))).
(all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))).
(all x all y (Covers(x,y) <-> lt(y,x) & (all z (S(z) -> -(lt(y,z) & lt(z,x)))))).
(all x all y (gt(x,y) <-> lt(y,x))).
(all x all y (geq(x,y) <-> leq(y,x))).
(all x all y (lt(x,y) <-> leq(x,y) & -EqDim(x,y))).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
(all x all y (sf_contains(x,y) <-> sf_geometry(x) & sf_geometry(y) & Cont(x,y))).
(all x (sf_multi_polygon(x) -> sf_multi_surface(x))).
(all x (sf_geometry_collection(x) -> -sf_point(x) & -sf_curve(x) & -sf_surface(x))).
(all x (sf_geometry_collection(x) <-> sf_multi_point(x) | sf_multi_curve(x) | sf_multi_surface(x))).
(all x (sf_point(x) -> -sf_curve(x) & -sf_surface(x) & -sf_geometry_collection(x))).
(all x (sf_geometry(x) <-> sf_point(x) | sf_curve(x) | sf_surface(x) | sf_geometry_collection(x))).
(all x (sf_surface(x) -> -sf_point(x) & -sf_curve(x) & -sf_geometry_collection(x))).
(all x (sf_curve(x) -> -sf_point(x) & -sf_surface(x) & -sf_geometry_collection(x))).
(all x (sf_multi_line_string(x) -> sf_multi_curve(x))).
(all x (sf_triangle(x) <-> sf_polygon(x) & sf_tin(x))).
(all x (sf_tin(x) -> sf_polyhedral_surface(x))).
(all x (sf_polyhedral_surface(x) -> sf_surface(x))).
(all x (sf_polygon(x) -> sf_polyhedral_surface(x))).
(all x (sf_linear_ring(x) -> sf_line_string(x))).
(all x (sf_line_string(x) -> sf_curve(x))).
(all x (sf_line(x) -> sf_line_string(x))).
(all x all y (sf_overlaps(x,y) <-> sf_geometry(x) & sf_geometry(y) & PO(x,y) & -P(x,y) & -P(y,x))).
(all x all y (sf_within(y,x) <-> sf_contains(x,y))).
(all x all y (sf_contains(x,y) <-> sf_geometry(x) & sf_geometry(y) & Cont(x,y))).
(all x all y (sf_crosses(x,y) <-> sf_geometry(x) & sf_geometry(y) & (Inc(x,y) & -Cont(x,y) & -Cont(y,x) | (all z (Cont(z,x) & Cont(z,y) -> lt(z,x) & lt(z,y) & -BCont(z,x) & -BCont(z,y))) | SC(x,y) & Curve(x) & Curve(y)))).
(all x (Curve(x) -> -ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))))).
(all x (-ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))) & (exists z MinDim(z)) -> Curve(x))).
(all x all y (sf_touches(x,y) <-> sf_geometry(x) & sf_geometry(y) & (SC(x,y) | BCont(x,y) | BCont(y,x)))).
(all x all y (sf_equals(x,y) <-> sf_contains(x,y) & sf_within(x,y))).
(all x all y (sf_intersects(x,y) <-> sf_geometry(x) & sf_geometry(y) & -sf_disjoint(x,y))).
(all x all y (sf_disjoint(x,y) -> sf_geometry(x) & sf_geometry(y) & -C(x,y))).
(all x (sf_geometry_collection(x) -> Multipart_S(x) | Branched_S(x))).
(all x (sf_multi_polygon(x) <-> sf_multi_surface(x) & (all y (P(y,x) & Min(y) -> sf_polygon(y))))).
(all x (sf_polygon(x) -> Simple_ArealRegion(x))).
(all x (sf_polygon(x) -> (exists y exists z (sf_linear_ring(y) & BCont(y,x) & boundary(z) = y & P(x,z))))).
(all x (sf_polygon(x) -> (all v (BCont(v,x) -> (exists w (P(v,w) & BCont(w,x) & sf_linear_ring(w))))))).
(all x all y (Cont(x,boundary(y)) <-> BCont(x,y))).
(all x (Simple_ArealRegion(x) <-> ArealRegion(x) & Simple_S(x))).
(all x (Simple_S(x) <-> Connected_S(x) & -Branched_S(x))).
(all x (Branched_S(x) <-> Connected_S(x) & (exists p exists q exists r exists s (PP(p,x) & PP(q,x) & PP(r,x) & -PO(p,q) & -PO(p,r) & -PO(q,r) & Covers(p,s) & Covers(q,s) & Covers(r,s) & Cont(s,p) & Cont(s,q) & Cont(s,r))))).
(all x (Connected_S(x) <-> S(x) & (all y (PP(y,x) -> SC(y,difference(x,y)))))).
(all x all y (S(x) & S(y) & -C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> leq(z,intersection(x,y)))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (lt(y,x) -> x = difference(x,y))).
(all x all y all z (leq(x,y) & Cont(z,x) & lt(intersection(z,y),z) -> Cont(z,difference(x,y)))).
(all x all y all z (leq(x,y) & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (leq(x,y) & P(z,difference(x,y)) -> lt(intersection(z,y),z))).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
(all x (ArealRegion(x) <-> (all y (Curve(y) -> Covers(x,y))))).
(all x (sf_multi_surface(x) -> Multipart_ArealRegion(x))).
(all x (Multipart_ArealRegion(x) <-> ArealRegion(x) & Multipart_S(x))).
(all x (Multipart_S(x) <-> S(x) & -Connected_S(x))).
(all x (sf_multi_line_string(x) <-> sf_multi_curve(x) & (all y (P(y,x) & Min(y) -> sf_line_string(y))))).
(all x (sf_multi_curve(x) -> Multipart_Curve(x))).
(all x (Multipart_Curve(x) <-> Curve(x) & Multipart_S(x))).
(all x (sf_multi_point(x) <-> PointRegion(x) & -Point(x))).
(all x (Point(x) <-> MinDim(x) & (all y (Cont(y,x) -> y = x)))).
(all x (PointRegion(x) <-> MinDim(x))).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 600).

% From the command line: assign(max_seconds_per, 60).

% From the command line: assign(domain_size, 2).

% From the command line: assign(iterate_up_to, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (exists var1 exists var2 (lt(var1,var2) & var1 != var2)) # label(non_clause).  [assumption].
2 (exists var3 exists var4 (-lt(var3,var4) & var3 != var4)) # label(non_clause).  [assumption].
3 (exists var5 exists var6 (Covers(var5,var6) & var5 != var6)) # label(non_clause).  [assumption].
4 (exists var7 exists var8 (-Covers(var7,var8) & var7 != var8)) # label(non_clause).  [assumption].
5 (exists var9 Multipart_Curve(var9)) # label(non_clause).  [assumption].
6 (exists var10 -Multipart_Curve(var10)) # label(non_clause).  [assumption].
7 (exists var11 exists var12 (C(var11,var12) & var11 != var12)) # label(non_clause).  [assumption].
8 (exists var13 exists var14 (-C(var13,var14) & var13 != var14)) # label(non_clause).  [assumption].
9 (exists var15 exists var16 (sf_contains(var15,var16) & var15 != var16)) # label(non_clause).  [assumption].
10 (exists var17 exists var18 (-sf_contains(var17,var18) & var17 != var18)) # label(non_clause).  [assumption].
11 (exists var19 Multipart_S(var19)) # label(non_clause).  [assumption].
12 (exists var20 -Multipart_S(var20)) # label(non_clause).  [assumption].
13 (exists var21 exists var22 (Inc(var21,var22) & var21 != var22)) # label(non_clause).  [assumption].
14 (exists var23 exists var24 (-Inc(var23,var24) & var23 != var24)) # label(non_clause).  [assumption].
15 (exists var25 exists var26 (P(var25,var26) & var25 != var26)) # label(non_clause).  [assumption].
16 (exists var27 exists var28 (-P(var27,var28) & var27 != var28)) # label(non_clause).  [assumption].
17 (exists var29 ZEX(var29)) # label(non_clause).  [assumption].
18 (exists var30 -ZEX(var30)) # label(non_clause).  [assumption].
19 (exists var31 exists var32 (Cont(var31,var32) & var31 != var32)) # label(non_clause).  [assumption].
20 (exists var33 exists var34 (-Cont(var33,var34) & var33 != var34)) # label(non_clause).  [assumption].
21 (exists var35 sf_geometry(var35)) # label(non_clause).  [assumption].
22 (exists var36 -sf_geometry(var36)) # label(non_clause).  [assumption].
23 (exists var37 Curve(var37)) # label(non_clause).  [assumption].
24 (exists var38 -Curve(var38)) # label(non_clause).  [assumption].
25 (exists var39 sf_multi_polygon(var39)) # label(non_clause).  [assumption].
26 (exists var40 -sf_multi_polygon(var40)) # label(non_clause).  [assumption].
27 (exists var41 sf_multi_curve(var41)) # label(non_clause).  [assumption].
28 (exists var42 -sf_multi_curve(var42)) # label(non_clause).  [assumption].
29 (exists var43 sf_multi_line_string(var43)) # label(non_clause).  [assumption].
30 (exists var44 -sf_multi_line_string(var44)) # label(non_clause).  [assumption].
31 (exists var45 MaxDim(var45)) # label(non_clause).  [assumption].
32 (exists var46 -MaxDim(var46)) # label(non_clause).  [assumption].
33 (exists var47 Min(var47)) # label(non_clause).  [assumption].
34 (exists var48 -Min(var48)) # label(non_clause).  [assumption].
35 (exists var49 sf_curve(var49)) # label(non_clause).  [assumption].
36 (exists var50 -sf_curve(var50)) # label(non_clause).  [assumption].
37 (exists var51 exists var52 (geq(var51,var52) & var51 != var52)) # label(non_clause).  [assumption].
38 (exists var53 exists var54 (-geq(var53,var54) & var53 != var54)) # label(non_clause).  [assumption].
39 (exists var55 sf_polygon(var55)) # label(non_clause).  [assumption].
40 (exists var56 -sf_polygon(var56)) # label(non_clause).  [assumption].
41 (exists var57 sf_geometry_collection(var57)) # label(non_clause).  [assumption].
42 (exists var58 -sf_geometry_collection(var58)) # label(non_clause).  [assumption].
43 (exists var59 Point(var59)) # label(non_clause).  [assumption].
44 (exists var60 -Point(var60)) # label(non_clause).  [assumption].
45 (exists var61 Simple_ArealRegion(var61)) # label(non_clause).  [assumption].
46 (exists var62 -Simple_ArealRegion(var62)) # label(non_clause).  [assumption].
47 (exists var63 Closed(var63)) # label(non_clause).  [assumption].
48 (exists var64 -Closed(var64)) # label(non_clause).  [assumption].
49 (exists var65 exists var66 (sf_intersects(var65,var66) & var65 != var66)) # label(non_clause).  [assumption].
50 (exists var67 exists var68 (-sf_intersects(var67,var68) & var67 != var68)) # label(non_clause).  [assumption].
51 (exists var69 PointRegion(var69)) # label(non_clause).  [assumption].
52 (exists var70 -PointRegion(var70)) # label(non_clause).  [assumption].
53 (exists var71 exists var72 (sf_relate(var71,var72) & var71 != var72)) # label(non_clause).  [assumption].
54 (exists var73 exists var74 (-sf_relate(var73,var74) & var73 != var74)) # label(non_clause).  [assumption].
55 (exists var75 Multipart_ArealRegion(var75)) # label(non_clause).  [assumption].
56 (exists var76 -Multipart_ArealRegion(var76)) # label(non_clause).  [assumption].
57 (exists var77 exists var78 (sf_crosses(var77,var78) & var77 != var78)) # label(non_clause).  [assumption].
58 (exists var79 exists var80 (-sf_crosses(var79,var80) & var79 != var80)) # label(non_clause).  [assumption].
59 (exists var81 exists var82 (sf_touches(var81,var82) & var81 != var82)) # label(non_clause).  [assumption].
60 (exists var83 exists var84 (-sf_touches(var83,var84) & var83 != var84)) # label(non_clause).  [assumption].
61 (exists var85 exists var86 (gt(var85,var86) & var85 != var86)) # label(non_clause).  [assumption].
62 (exists var87 exists var88 (-gt(var87,var88) & var87 != var88)) # label(non_clause).  [assumption].
63 (exists var89 Branched_S(var89)) # label(non_clause).  [assumption].
64 (exists var90 -Branched_S(var90)) # label(non_clause).  [assumption].
65 (exists var91 sf_surface(var91)) # label(non_clause).  [assumption].
66 (exists var92 -sf_surface(var92)) # label(non_clause).  [assumption].
67 (exists var93 sf_polyhedral_surface(var93)) # label(non_clause).  [assumption].
68 (exists var94 -sf_polyhedral_surface(var94)) # label(non_clause).  [assumption].
69 (exists var95 Simple_S(var95)) # label(non_clause).  [assumption].
70 (exists var96 -Simple_S(var96)) # label(non_clause).  [assumption].
71 (exists var97 sf_linear_ring(var97)) # label(non_clause).  [assumption].
72 (exists var98 -sf_linear_ring(var98)) # label(non_clause).  [assumption].
73 (exists var99 exists var100 (BCont(var99,var100) & var99 != var100)) # label(non_clause).  [assumption].
74 (exists var101 exists var102 (-BCont(var101,var102) & var101 != var102)) # label(non_clause).  [assumption].
75 (exists var103 exists var104 (EqDim(var103,var104) & var103 != var104)) # label(non_clause).  [assumption].
76 (exists var105 exists var106 (-EqDim(var105,var106) & var105 != var106)) # label(non_clause).  [assumption].
77 (exists var107 exists var108 (sf_disjoint(var107,var108) & var107 != var108)) # label(non_clause).  [assumption].
78 (exists var109 exists var110 (-sf_disjoint(var109,var110) & var109 != var110)) # label(non_clause).  [assumption].
79 (exists var111 sf_tin(var111)) # label(non_clause).  [assumption].
80 (exists var112 -sf_tin(var112)) # label(non_clause).  [assumption].
81 (exists var113 exists var114 (leq(var113,var114) & var113 != var114)) # label(non_clause).  [assumption].
82 (exists var115 exists var116 (-leq(var115,var116) & var115 != var116)) # label(non_clause).  [assumption].
83 (exists var117 sf_line_string(var117)) # label(non_clause).  [assumption].
84 (exists var118 -sf_line_string(var118)) # label(non_clause).  [assumption].
85 (exists var119 ArealRegion(var119)) # label(non_clause).  [assumption].
86 (exists var120 -ArealRegion(var120)) # label(non_clause).  [assumption].
87 (exists var121 sf_triangle(var121)) # label(non_clause).  [assumption].
88 (exists var122 -sf_triangle(var122)) # label(non_clause).  [assumption].
89 (exists var123 sf_line(var123)) # label(non_clause).  [assumption].
90 (exists var124 -sf_line(var124)) # label(non_clause).  [assumption].
91 (exists var125 sf_point(var125)) # label(non_clause).  [assumption].
92 (exists var126 -sf_point(var126)) # label(non_clause).  [assumption].
93 (exists var127 exists var128 (sf_overlaps(var127,var128) & var127 != var128)) # label(non_clause).  [assumption].
94 (exists var129 exists var130 (-sf_overlaps(var129,var130) & var129 != var130)) # label(non_clause).  [assumption].
95 (exists var131 sf_multi_surface(var131)) # label(non_clause).  [assumption].
96 (exists var132 -sf_multi_surface(var132)) # label(non_clause).  [assumption].
97 (exists var133 exists var134 (sf_equals(var133,var134) & var133 != var134)) # label(non_clause).  [assumption].
98 (exists var135 exists var136 (-sf_equals(var135,var136) & var135 != var136)) # label(non_clause).  [assumption].
99 (exists var137 S(var137)) # label(non_clause).  [assumption].
100 (exists var138 -S(var138)) # label(non_clause).  [assumption].
101 (exists var139 Connected_S(var139)) # label(non_clause).  [assumption].
102 (exists var140 -Connected_S(var140)) # label(non_clause).  [assumption].
103 (exists var141 exists var142 (SC(var141,var142) & var141 != var142)) # label(non_clause).  [assumption].
104 (exists var143 exists var144 (-SC(var143,var144) & var143 != var144)) # label(non_clause).  [assumption].
105 (exists var145 Max(var145)) # label(non_clause).  [assumption].
106 (exists var146 -Max(var146)) # label(non_clause).  [assumption].
107 (exists var147 exists var148 (sf_within(var147,var148) & var147 != var148)) # label(non_clause).  [assumption].
108 (exists var149 exists var150 (-sf_within(var149,var150) & var149 != var150)) # label(non_clause).  [assumption].
109 (exists var151 exists var152 (PP(var151,var152) & var151 != var152)) # label(non_clause).  [assumption].
110 (exists var153 exists var154 (-PP(var153,var154) & var153 != var154)) # label(non_clause).  [assumption].
111 (exists var155 MinDim(var155)) # label(non_clause).  [assumption].
112 (exists var156 -MinDim(var156)) # label(non_clause).  [assumption].
113 (exists var157 sf_multi_point(var157)) # label(non_clause).  [assumption].
114 (exists var158 -sf_multi_point(var158)) # label(non_clause).  [assumption].
115 (exists var159 exists var160 (PO(var159,var160) & var159 != var160)) # label(non_clause).  [assumption].
116 (exists var161 exists var162 (-PO(var161,var162) & var161 != var162)) # label(non_clause).  [assumption].
117 (all x all y (sf_geometry(x) <-> S(x))) # label(non_clause).  [assumption].
118 (all x all y (sf_relate(x,y) <-> sf_intersects(x,y) | sf_disjoint(x,y))) # label(non_clause).  [assumption].
119 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause).  [assumption].
120 (all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))) # label(non_clause).  [assumption].
121 (all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
122 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause).  [assumption].
123 (all x -SC(x,x)) # label(non_clause).  [assumption].
124 (all x all y (SC(x,y) -> SC(y,x))) # label(non_clause).  [assumption].
125 (all x all y (SC(x,y) -> (exists z (lt(z,x) & lt(z,y) & Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
126 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> leq(z,x) & -EqDim(z,x) & leq(z,y) & -EqDim(z,y))))) # label(non_clause).  [assumption].
127 (all x all y (EqDim(x,y) <-> leq(x,y) & leq(y,x))) # label(non_clause).  [assumption].
128 (all x all y (leq(x,y) -> S(x))) # label(non_clause).  [assumption].
129 (all x all y (leq(x,y) -> S(y))) # label(non_clause).  [assumption].
130 (all x (ZEX(x) -> S(x))) # label(non_clause).  [assumption].
131 (all x (S(x) -> leq(x,x))) # label(non_clause).  [assumption].
132 (all x all y all z (leq(x,y) & leq(y,z) -> leq(x,z))) # label(non_clause).  [assumption].
133 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
134 (all x all y (ZEX(x) & S(y) -> leq(x,y))) # label(non_clause).  [assumption].
135 (all x all y (Cont(x,y) -> leq(x,y))) # label(non_clause).  [assumption].
136 (exists x MinDim(x)) # label(non_clause).  [assumption].
137 (all x (MaxDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) -> leq(y,x))))) # label(non_clause).  [assumption].
138 (all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & -ZEX(y) -> leq(x,y))))) # label(non_clause).  [assumption].
139 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
140 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
141 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
142 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
143 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
144 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
145 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
146 (all x -Inc(x,x)) # label(non_clause).  [assumption].
147 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause).  [assumption].
148 (all x all y (EqDim(x,y) -> -Inc(x,y))) # label(non_clause).  [assumption].
149 (all x all y (Inc(x,y) -> lt(x,y) | lt(y,x))) # label(non_clause).  [assumption].
150 (all x all y (Cont(x,y) & lt(x,y) -> Inc(x,y))) # label(non_clause).  [assumption].
151 (all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))) # label(non_clause).  [assumption].
152 (all x all y (Inc(x,y) <-> (exists z (leq(z,x) & -EqDim(z,x) & Cont(z,x) & P(z,y))) | (exists z (leq(z,y) & -EqDim(z,y) & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
153 (all x (S(x) & -ZEX(x) -> PO(x,x))) # label(non_clause).  [assumption].
154 (all x all y (PO(x,y) -> PO(y,x))) # label(non_clause).  [assumption].
155 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause).  [assumption].
156 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
157 (all x (Max(x) <-> S(x) & -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
158 (all x (Min(x) <-> S(x) & -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
159 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
160 (all x all y (BCont(x,y) -> Cont(x,y) & -EqDim(x,y))) # label(non_clause).  [assumption].
161 (all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
162 (all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
163 (all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
164 (all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
165 (all x all y (Covers(x,y) <-> lt(y,x) & (all z (S(z) -> -(lt(y,z) & lt(z,x)))))) # label(non_clause).  [assumption].
166 (all x all y (gt(x,y) <-> lt(y,x))) # label(non_clause).  [assumption].
167 (all x all y (geq(x,y) <-> leq(y,x))) # label(non_clause).  [assumption].
168 (all x all y (lt(x,y) <-> leq(x,y) & -EqDim(x,y))) # label(non_clause).  [assumption].
169 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].
170 (all x all y (sf_contains(x,y) <-> sf_geometry(x) & sf_geometry(y) & Cont(x,y))) # label(non_clause).  [assumption].
171 (all x (sf_multi_polygon(x) -> sf_multi_surface(x))) # label(non_clause).  [assumption].
172 (all x (sf_geometry_collection(x) -> -sf_point(x) & -sf_curve(x) & -sf_surface(x))) # label(non_clause).  [assumption].
173 (all x (sf_geometry_collection(x) <-> sf_multi_point(x) | sf_multi_curve(x) | sf_multi_surface(x))) # label(non_clause).  [assumption].
174 (all x (sf_point(x) -> -sf_curve(x) & -sf_surface(x) & -sf_geometry_collection(x))) # label(non_clause).  [assumption].
175 (all x (sf_geometry(x) <-> sf_point(x) | sf_curve(x) | sf_surface(x) | sf_geometry_collection(x))) # label(non_clause).  [assumption].
176 (all x (sf_surface(x) -> -sf_point(x) & -sf_curve(x) & -sf_geometry_collection(x))) # label(non_clause).  [assumption].
177 (all x (sf_curve(x) -> -sf_point(x) & -sf_surface(x) & -sf_geometry_collection(x))) # label(non_clause).  [assumption].
178 (all x (sf_multi_line_string(x) -> sf_multi_curve(x))) # label(non_clause).  [assumption].
179 (all x (sf_triangle(x) <-> sf_polygon(x) & sf_tin(x))) # label(non_clause).  [assumption].
180 (all x (sf_tin(x) -> sf_polyhedral_surface(x))) # label(non_clause).  [assumption].
181 (all x (sf_polyhedral_surface(x) -> sf_surface(x))) # label(non_clause).  [assumption].
182 (all x (sf_polygon(x) -> sf_polyhedral_surface(x))) # label(non_clause).  [assumption].
183 (all x (sf_linear_ring(x) -> sf_line_string(x))) # label(non_clause).  [assumption].
184 (all x (sf_line_string(x) -> sf_curve(x))) # label(non_clause).  [assumption].
185 (all x (sf_line(x) -> sf_line_string(x))) # label(non_clause).  [assumption].
186 (all x all y (sf_overlaps(x,y) <-> sf_geometry(x) & sf_geometry(y) & PO(x,y) & -P(x,y) & -P(y,x))) # label(non_clause).  [assumption].
187 (all x all y (sf_within(y,x) <-> sf_contains(x,y))) # label(non_clause).  [assumption].
188 (all x all y (sf_contains(x,y) <-> sf_geometry(x) & sf_geometry(y) & Cont(x,y))) # label(non_clause).  [assumption].
189 (all x all y (sf_crosses(x,y) <-> sf_geometry(x) & sf_geometry(y) & (Inc(x,y) & -Cont(x,y) & -Cont(y,x) | (all z (Cont(z,x) & Cont(z,y) -> lt(z,x) & lt(z,y) & -BCont(z,x) & -BCont(z,y))) | SC(x,y) & Curve(x) & Curve(y)))) # label(non_clause).  [assumption].
190 (all x (Curve(x) -> -ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))))) # label(non_clause).  [assumption].
191 (all x (-ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))) & (exists z MinDim(z)) -> Curve(x))) # label(non_clause).  [assumption].
192 (all x all y (sf_touches(x,y) <-> sf_geometry(x) & sf_geometry(y) & (SC(x,y) | BCont(x,y) | BCont(y,x)))) # label(non_clause).  [assumption].
193 (all x all y (sf_equals(x,y) <-> sf_contains(x,y) & sf_within(x,y))) # label(non_clause).  [assumption].
194 (all x all y (sf_intersects(x,y) <-> sf_geometry(x) & sf_geometry(y) & -sf_disjoint(x,y))) # label(non_clause).  [assumption].
195 (all x all y (sf_disjoint(x,y) -> sf_geometry(x) & sf_geometry(y) & -C(x,y))) # label(non_clause).  [assumption].
196 (all x (sf_geometry_collection(x) -> Multipart_S(x) | Branched_S(x))) # label(non_clause).  [assumption].
197 (all x (sf_multi_polygon(x) <-> sf_multi_surface(x) & (all y (P(y,x) & Min(y) -> sf_polygon(y))))) # label(non_clause).  [assumption].
198 (all x (sf_polygon(x) -> Simple_ArealRegion(x))) # label(non_clause).  [assumption].
199 (all x (sf_polygon(x) -> (exists y exists z (sf_linear_ring(y) & BCont(y,x) & boundary(z) = y & P(x,z))))) # label(non_clause).  [assumption].
200 (all x (sf_polygon(x) -> (all v (BCont(v,x) -> (exists w (P(v,w) & BCont(w,x) & sf_linear_ring(w))))))) # label(non_clause).  [assumption].
201 (all x all y (Cont(x,boundary(y)) <-> BCont(x,y))) # label(non_clause).  [assumption].
202 (all x (Simple_ArealRegion(x) <-> ArealRegion(x) & Simple_S(x))) # label(non_clause).  [assumption].
203 (all x (Simple_S(x) <-> Connected_S(x) & -Branched_S(x))) # label(non_clause).  [assumption].
204 (all x (Branched_S(x) <-> Connected_S(x) & (exists p exists q exists r exists s (PP(p,x) & PP(q,x) & PP(r,x) & -PO(p,q) & -PO(p,r) & -PO(q,r) & Covers(p,s) & Covers(q,s) & Covers(r,s) & Cont(s,p) & Cont(s,q) & Cont(s,r))))) # label(non_clause).  [assumption].
205 (all x (Connected_S(x) <-> S(x) & (all y (PP(y,x) -> SC(y,difference(x,y)))))) # label(non_clause).  [assumption].
206 (all x all y (S(x) & S(y) & -C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
207 (all x all y (S(x) & S(y) & -ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
208 (all x all y all z (Cont(z,x) & Cont(z,y) -> leq(z,intersection(x,y)))) # label(non_clause).  [assumption].
209 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
210 (all x all y (S(x) & S(y) & -ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
211 (all x all y (lt(y,x) -> x = difference(x,y))) # label(non_clause).  [assumption].
212 (all x all y all z (leq(x,y) & Cont(z,x) & lt(intersection(z,y),z) -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
213 (all x all y all z (leq(x,y) & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
214 (all x all y all z (leq(x,y) & P(z,difference(x,y)) -> lt(intersection(z,y),z))) # label(non_clause).  [assumption].
215 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
216 (all x (ArealRegion(x) <-> (all y (Curve(y) -> Covers(x,y))))) # label(non_clause).  [assumption].
217 (all x (sf_multi_surface(x) -> Multipart_ArealRegion(x))) # label(non_clause).  [assumption].
218 (all x (Multipart_ArealRegion(x) <-> ArealRegion(x) & Multipart_S(x))) # label(non_clause).  [assumption].
219 (all x (Multipart_S(x) <-> S(x) & -Connected_S(x))) # label(non_clause).  [assumption].
220 (all x (sf_multi_line_string(x) <-> sf_multi_curve(x) & (all y (P(y,x) & Min(y) -> sf_line_string(y))))) # label(non_clause).  [assumption].
221 (all x (sf_multi_curve(x) -> Multipart_Curve(x))) # label(non_clause).  [assumption].
222 (all x (Multipart_Curve(x) <-> Curve(x) & Multipart_S(x))) # label(non_clause).  [assumption].
223 (all x (sf_multi_point(x) <-> PointRegion(x) & -Point(x))) # label(non_clause).  [assumption].
224 (all x (Point(x) <-> MinDim(x) & (all y (Cont(y,x) -> y = x)))) # label(non_clause).  [assumption].
225 (all x (PointRegion(x) <-> MinDim(x))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
lt(c1,c2).
c2 != c1.
-lt(c3,c4).
c4 != c3.
Covers(c5,c6).
c6 != c5.
-Covers(c7,c8).
c8 != c7.
Multipart_Curve(c9).
-Multipart_Curve(c10).
C(c11,c12).
c12 != c11.
-C(c13,c14).
c14 != c13.
sf_contains(c15,c16).
c16 != c15.
-sf_contains(c17,c18).
c18 != c17.
Multipart_S(c19).
-Multipart_S(c20).
Inc(c21,c22).
c22 != c21.
-Inc(c23,c24).
c24 != c23.
P(c25,c26).
c26 != c25.
-P(c27,c28).
c28 != c27.
ZEX(c29).
-ZEX(c30).
Cont(c31,c32).
c32 != c31.
-Cont(c33,c34).
c34 != c33.
sf_geometry(c35).
-sf_geometry(c36).
Curve(c37).
-Curve(c38).
sf_multi_polygon(c39).
-sf_multi_polygon(c40).
sf_multi_curve(c41).
-sf_multi_curve(c42).
sf_multi_line_string(c43).
-sf_multi_line_string(c44).
MaxDim(c45).
-MaxDim(c46).
Min(c47).
-Min(c48).
sf_curve(c49).
-sf_curve(c50).
geq(c51,c52).
c52 != c51.
-geq(c53,c54).
c54 != c53.
sf_polygon(c55).
-sf_polygon(c56).
sf_geometry_collection(c57).
-sf_geometry_collection(c58).
Point(c59).
-Point(c60).
Simple_ArealRegion(c61).
-Simple_ArealRegion(c62).
Closed(c63).
-Closed(c64).
sf_intersects(c65,c66).
c66 != c65.
-sf_intersects(c67,c68).
c68 != c67.
PointRegion(c69).
-PointRegion(c70).
sf_relate(c71,c72).
c72 != c71.
-sf_relate(c73,c74).
c74 != c73.
Multipart_ArealRegion(c75).
-Multipart_ArealRegion(c76).
sf_crosses(c77,c78).
c78 != c77.
-sf_crosses(c79,c80).
c80 != c79.
sf_touches(c81,c82).
c82 != c81.
-sf_touches(c83,c84).
c84 != c83.
gt(c85,c86).
c86 != c85.
-gt(c87,c88).
c88 != c87.
Branched_S(c89).
-Branched_S(c90).
sf_surface(c91).
-sf_surface(c92).
sf_polyhedral_surface(c93).
-sf_polyhedral_surface(c94).
Simple_S(c95).
-Simple_S(c96).
sf_linear_ring(c97).
-sf_linear_ring(c98).
BCont(c99,c100).
c100 != c99.
-BCont(c101,c102).
c102 != c101.
EqDim(c103,c104).
c104 != c103.
-EqDim(c105,c106).
c106 != c105.
sf_disjoint(c107,c108).
c108 != c107.
-sf_disjoint(c109,c110).
c110 != c109.
sf_tin(c111).
-sf_tin(c112).
leq(c113,c114).
c114 != c113.
-leq(c115,c116).
c116 != c115.
sf_line_string(c117).
-sf_line_string(c118).
ArealRegion(c119).
-ArealRegion(c120).
sf_triangle(c121).
-sf_triangle(c122).
sf_line(c123).
-sf_line(c124).
sf_point(c125).
-sf_point(c126).
sf_overlaps(c127,c128).
c128 != c127.
-sf_overlaps(c129,c130).
c130 != c129.
sf_multi_surface(c131).
-sf_multi_surface(c132).
sf_equals(c133,c134).
c134 != c133.
-sf_equals(c135,c136).
c136 != c135.
S(c137).
-S(c138).
Connected_S(c139).
-Connected_S(c140).
SC(c141,c142).
c142 != c141.
-SC(c143,c144).
c144 != c143.
Max(c145).
-Max(c146).
sf_within(c147,c148).
c148 != c147.
-sf_within(c149,c150).
c150 != c149.
PP(c151,c152).
c152 != c151.
-PP(c153,c154).
c154 != c153.
MinDim(c155).
-MinDim(c156).
sf_multi_point(c157).
-sf_multi_point(c158).
PO(c159,c160).
c160 != c159.
-PO(c161,c162).
c162 != c161.
-sf_geometry(x) | S(x).
sf_geometry(x) | -S(x).
-sf_relate(x,y) | sf_intersects(x,y) | sf_disjoint(x,y).
sf_relate(x,y) | -sf_intersects(x,y).
sf_relate(x,y) | -sf_disjoint(x,y).
-SC(x,y) | C(x,y).
-SC(x,y) | -Cont(z,x) | -P(z,y).
-SC(x,y) | -P(z,x) | -Cont(z,y).
-C(x,y) | Cont(f1(x,y),x) | SC(x,y).
-C(x,y) | Cont(f1(x,y),y) | SC(x,y).
-C(x,y) | P(f1(x,y),x) | P(f1(x,y),y) | SC(x,y).
-SC(x,x).
-SC(x,y) | SC(y,x).
-SC(x,y) | lt(f2(x,y),x).
-SC(x,y) | lt(f2(x,y),y).
-SC(x,y) | Cont(f2(x,y),x).
-SC(x,y) | Cont(f2(x,y),y).
-SC(x,y) | Cont(f3(x,y),x).
-SC(x,y) | Cont(f3(x,y),y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | leq(z,x).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,x).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | leq(z,y).
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f4(x,y),x).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f4(x,y),y).
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -leq(f4(x,y),x) | EqDim(f4(x,y),x) | -leq(f4(x,y),y) | EqDim(f4(x,y),y).
-EqDim(x,y) | leq(x,y).
-EqDim(x,y) | leq(y,x).
EqDim(x,y) | -leq(x,y) | -leq(y,x).
-leq(x,y) | S(x).
-leq(x,y) | S(y).
-ZEX(x) | S(x).
-S(x) | leq(x,x).
-leq(x,y) | -leq(y,z) | leq(x,z).
-ZEX(x) | -ZEX(y) | y = x.
-ZEX(x) | -S(y) | leq(x,y).
-Cont(x,y) | leq(x,y).
MinDim(c163).
-MaxDim(x) | S(x).
-MaxDim(x) | -ZEX(x).
-MaxDim(x) | -S(y) | leq(y,x).
MaxDim(x) | -S(x) | ZEX(x) | S(f5(x)).
MaxDim(x) | -S(x) | ZEX(x) | -leq(f5(x),x).
-MinDim(x) | S(x).
-MinDim(x) | -ZEX(x).
-MinDim(x) | -S(y) | ZEX(y) | leq(x,y).
MinDim(x) | -S(x) | ZEX(x) | S(f6(x)).
MinDim(x) | -S(x) | ZEX(x) | -ZEX(f6(x)).
MinDim(x) | -S(x) | ZEX(x) | -leq(x,f6(x)).
-S(x) | ZEX(x) | Cont(x,x).
S(x) | -Cont(x,x).
-ZEX(x) | -Cont(x,x).
-Cont(x,y) | -Cont(y,x) | y = x.
-Cont(x,y) | -Cont(y,z) | Cont(x,z).
-ZEX(x) | S(x).
-ZEX(x) | -Cont(y,x).
-ZEX(x) | -Cont(x,y).
-ZEX(x) | -ZEX(y) | y = x.
-P(x,y) | Cont(x,y).
-P(x,y) | EqDim(x,y).
P(x,y) | -Cont(x,y) | -EqDim(x,y).
-C(x,y) | Cont(f7(x,y),x).
-C(x,y) | Cont(f7(x,y),y).
C(x,y) | -Cont(z,x) | -Cont(z,y).
-Inc(x,x).
-Inc(x,y) | Inc(y,x).
-EqDim(x,y) | -Inc(x,y).
-Inc(x,y) | lt(x,y) | lt(y,x).
-Cont(x,y) | -lt(x,y) | Inc(x,y).
-Inc(x,y) | -P(y,z) | Inc(x,z).
-Inc(x,y) | leq(f8(x,y),x) | leq(f9(x,y),y).
-Inc(x,y) | leq(f8(x,y),x) | -EqDim(f9(x,y),y).
-Inc(x,y) | leq(f8(x,y),x) | Cont(f9(x,y),y).
-Inc(x,y) | leq(f8(x,y),x) | P(f9(x,y),x).
-Inc(x,y) | -EqDim(f8(x,y),x) | leq(f9(x,y),y).
-Inc(x,y) | -EqDim(f8(x,y),x) | -EqDim(f9(x,y),y).
-Inc(x,y) | -EqDim(f8(x,y),x) | Cont(f9(x,y),y).
-Inc(x,y) | -EqDim(f8(x,y),x) | P(f9(x,y),x).
-Inc(x,y) | Cont(f8(x,y),x) | leq(f9(x,y),y).
-Inc(x,y) | Cont(f8(x,y),x) | -EqDim(f9(x,y),y).
-Inc(x,y) | Cont(f8(x,y),x) | Cont(f9(x,y),y).
-Inc(x,y) | Cont(f8(x,y),x) | P(f9(x,y),x).
-Inc(x,y) | P(f8(x,y),y) | leq(f9(x,y),y).
-Inc(x,y) | P(f8(x,y),y) | -EqDim(f9(x,y),y).
-Inc(x,y) | P(f8(x,y),y) | Cont(f9(x,y),y).
-Inc(x,y) | P(f8(x,y),y) | P(f9(x,y),x).
Inc(x,y) | -leq(z,x) | EqDim(z,x) | -Cont(z,x) | -P(z,y).
Inc(x,y) | -leq(z,y) | EqDim(z,y) | -Cont(z,y) | -P(z,x).
-S(x) | ZEX(x) | PO(x,x).
-PO(x,y) | PO(y,x).
-PO(x,y) | EqDim(x,y).
-PO(x,y) | P(f10(x,y),x).
-PO(x,y) | P(f10(x,y),y).
PO(x,y) | -P(z,x) | -P(z,y).
-Max(x) | S(x).
-Max(x) | -ZEX(x).
-Max(x) | -PP(x,y).
Max(x) | -S(x) | ZEX(x) | PP(x,f11(x)).
-Min(x) | S(x).
-Min(x) | -ZEX(x).
-Min(x) | -PP(y,x).
Min(x) | -S(x) | ZEX(x) | PP(f12(x),x).
-PP(x,y) | P(x,y).
-PP(x,y) | y != x.
PP(x,y) | -P(x,y) | y = x.
-BCont(x,y) | Cont(x,y).
-BCont(x,y) | -EqDim(x,y).
-SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).
-SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).
-BCont(x,y) | -P(y,z) | P(f13(x,y,z),z) | BCont(x,z).
-BCont(x,y) | -P(y,z) | -PO(f13(x,y,z),y) | BCont(x,z).
-BCont(x,y) | -P(y,z) | P(f14(x,y,z),x) | BCont(x,z).
-BCont(x,y) | -P(y,z) | Cont(f14(x,y,z),f13(x,y,z)) | BCont(x,z).
-BCont(x,y) | -Cont(z,x) | BCont(z,y).
-Covers(x,y) | lt(y,x).
-Covers(x,y) | -S(z) | -lt(y,z) | -lt(z,x).
Covers(x,y) | -lt(y,x) | S(f15(x,y)).
Covers(x,y) | -lt(y,x) | lt(y,f15(x,y)).
Covers(x,y) | -lt(y,x) | lt(f15(x,y),x).
-gt(x,y) | lt(y,x).
gt(x,y) | -lt(y,x).
-geq(x,y) | leq(y,x).
geq(x,y) | -leq(y,x).
-lt(x,y) | leq(x,y).
-lt(x,y) | -EqDim(x,y).
lt(x,y) | -leq(x,y) | EqDim(x,y).
-Closed(x) | -BCont(y,x).
Closed(x) | BCont(f16(x),x).
-sf_contains(x,y) | sf_geometry(x).
-sf_contains(x,y) | sf_geometry(y).
-sf_contains(x,y) | Cont(x,y).
sf_contains(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Cont(x,y).
-sf_multi_polygon(x) | sf_multi_surface(x).
-sf_geometry_collection(x) | -sf_point(x).
-sf_geometry_collection(x) | -sf_curve(x).
-sf_geometry_collection(x) | -sf_surface(x).
-sf_geometry_collection(x) | sf_multi_point(x) | sf_multi_curve(x) | sf_multi_surface(x).
sf_geometry_collection(x) | -sf_multi_point(x).
sf_geometry_collection(x) | -sf_multi_curve(x).
sf_geometry_collection(x) | -sf_multi_surface(x).
-sf_point(x) | -sf_curve(x).
-sf_point(x) | -sf_surface(x).
-sf_point(x) | -sf_geometry_collection(x).
-sf_geometry(x) | sf_point(x) | sf_curve(x) | sf_surface(x) | sf_geometry_collection(x).
sf_geometry(x) | -sf_point(x).
sf_geometry(x) | -sf_curve(x).
sf_geometry(x) | -sf_surface(x).
sf_geometry(x) | -sf_geometry_collection(x).
-sf_surface(x) | -sf_point(x).
-sf_surface(x) | -sf_curve(x).
-sf_surface(x) | -sf_geometry_collection(x).
-sf_curve(x) | -sf_point(x).
-sf_curve(x) | -sf_surface(x).
-sf_curve(x) | -sf_geometry_collection(x).
-sf_multi_line_string(x) | sf_multi_curve(x).
-sf_triangle(x) | sf_polygon(x).
-sf_triangle(x) | sf_tin(x).
sf_triangle(x) | -sf_polygon(x) | -sf_tin(x).
-sf_tin(x) | sf_polyhedral_surface(x).
-sf_polyhedral_surface(x) | sf_surface(x).
-sf_polygon(x) | sf_polyhedral_surface(x).
-sf_linear_ring(x) | sf_line_string(x).
-sf_line_string(x) | sf_curve(x).
-sf_line(x) | sf_line_string(x).
-sf_overlaps(x,y) | sf_geometry(x).
-sf_overlaps(x,y) | sf_geometry(y).
-sf_overlaps(x,y) | PO(x,y).
-sf_overlaps(x,y) | -P(x,y).
-sf_overlaps(x,y) | -P(y,x).
sf_overlaps(x,y) | -sf_geometry(x) | -sf_geometry(y) | -PO(x,y) | P(x,y) | P(y,x).
-sf_within(x,y) | sf_contains(y,x).
sf_within(x,y) | -sf_contains(y,x).
-sf_contains(x,y) | sf_geometry(x).
-sf_contains(x,y) | sf_geometry(y).
-sf_contains(x,y) | Cont(x,y).
sf_contains(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Cont(x,y).
-sf_crosses(x,y) | sf_geometry(x).
-sf_crosses(x,y) | sf_geometry(y).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Inc(x,y) | Cont(x,y) | Cont(y,x).
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | Cont(f17(x,y),x).
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | Cont(f17(x,y),y).
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -lt(f17(x,y),x) | -lt(f17(x,y),y) | BCont(f17(x,y),x) | BCont(f17(x,y),y).
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -SC(x,y) | -Curve(x) | -Curve(y).
-Curve(x) | -ZEX(x).
-Curve(x) | -MinDim(x).
-Curve(x) | -MinDim(y) | Covers(x,y).
-Curve(x) | MinDim(y) | -Covers(x,y).
ZEX(x) | MinDim(x) | MinDim(f18(x)) | Covers(x,f18(x)) | -MinDim(y) | Curve(x).
ZEX(x) | MinDim(x) | -MinDim(f18(x)) | -Covers(x,f18(x)) | -MinDim(y) | Curve(x).
-sf_touches(x,y) | sf_geometry(x).
-sf_touches(x,y) | sf_geometry(y).
-sf_touches(x,y) | SC(x,y) | BCont(x,y) | BCont(y,x).
sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -SC(x,y).
sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -BCont(x,y).
sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -BCont(y,x).
-sf_equals(x,y) | sf_contains(x,y).
-sf_equals(x,y) | sf_within(x,y).
sf_equals(x,y) | -sf_contains(x,y) | -sf_within(x,y).
-sf_intersects(x,y) | sf_geometry(x).
-sf_intersects(x,y) | sf_geometry(y).
-sf_intersects(x,y) | -sf_disjoint(x,y).
sf_intersects(x,y) | -sf_geometry(x) | -sf_geometry(y) | sf_disjoint(x,y).
-sf_disjoint(x,y) | sf_geometry(x).
-sf_disjoint(x,y) | sf_geometry(y).
-sf_disjoint(x,y) | -C(x,y).
-sf_geometry_collection(x) | Multipart_S(x) | Branched_S(x).
-sf_multi_polygon(x) | sf_multi_surface(x).
-sf_multi_polygon(x) | -P(y,x) | -Min(y) | sf_polygon(y).
sf_multi_polygon(x) | -sf_multi_surface(x) | P(f19(x),x).
sf_multi_polygon(x) | -sf_multi_surface(x) | Min(f19(x)).
sf_multi_polygon(x) | -sf_multi_surface(x) | -sf_polygon(f19(x)).
-sf_polygon(x) | Simple_ArealRegion(x).
-sf_polygon(x) | sf_linear_ring(f20(x)).
-sf_polygon(x) | BCont(f20(x),x).
-sf_polygon(x) | boundary(f21(x)) = f20(x).
-sf_polygon(x) | P(x,f21(x)).
-sf_polygon(x) | -BCont(y,x) | P(y,f22(x,y)).
-sf_polygon(x) | -BCont(y,x) | BCont(f22(x,y),x).
-sf_polygon(x) | -BCont(y,x) | sf_linear_ring(f22(x,y)).
-Cont(x,boundary(y)) | BCont(x,y).
Cont(x,boundary(y)) | -BCont(x,y).
-Simple_ArealRegion(x) | ArealRegion(x).
-Simple_ArealRegion(x) | Simple_S(x).
Simple_ArealRegion(x) | -ArealRegion(x) | -Simple_S(x).
-Simple_S(x) | Connected_S(x).
-Simple_S(x) | -Branched_S(x).
Simple_S(x) | -Connected_S(x) | Branched_S(x).
-Branched_S(x) | Connected_S(x).
-Branched_S(x) | PP(f23(x),x).
-Branched_S(x) | PP(f24(x),x).
-Branched_S(x) | PP(f25(x),x).
-Branched_S(x) | -PO(f23(x),f24(x)).
-Branched_S(x) | -PO(f23(x),f25(x)).
-Branched_S(x) | -PO(f24(x),f25(x)).
-Branched_S(x) | Covers(f23(x),f26(x)).
-Branched_S(x) | Covers(f24(x),f26(x)).
-Branched_S(x) | Covers(f25(x),f26(x)).
-Branched_S(x) | Cont(f26(x),f23(x)).
-Branched_S(x) | Cont(f26(x),f24(x)).
-Branched_S(x) | Cont(f26(x),f25(x)).
Branched_S(x) | -Connected_S(x) | -PP(y,x) | -PP(z,x) | -PP(u,x) | PO(y,z) | PO(y,u) | PO(z,u) | -Covers(y,w) | -Covers(z,w) | -Covers(u,w) | -Cont(w,y) | -Cont(w,z) | -Cont(w,u).
-Connected_S(x) | S(x).
-Connected_S(x) | -PP(y,x) | SC(y,difference(x,y)).
Connected_S(x) | -S(x) | PP(f27(x),x).
Connected_S(x) | -S(x) | -SC(f27(x),difference(x,f27(x))).
-S(x) | -S(y) | C(x,y) | ZEX(intersection(x,y)).
S(x) | -ZEX(intersection(x,y)).
S(x) | -ZEX(intersection(y,x)).
-C(x,y) | -ZEX(intersection(x,y)).
-S(x) | -S(y) | ZEX(intersection(x,y)) | Cont(intersection(x,y),x).
-Cont(x,y) | -Cont(x,z) | leq(x,intersection(y,z)).
-Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).
Cont(x,y) | -P(x,intersection(y,z)).
Cont(x,y) | -P(x,intersection(z,y)).
EqDim(x,intersection(y,z)) | -P(x,intersection(y,z)).
-S(x) | -S(y) | ZEX(difference(x,y)) | EqDim(x,difference(x,y)).
-lt(x,y) | difference(y,x) = y.
-leq(x,y) | -Cont(z,x) | -lt(intersection(z,y),z) | Cont(z,difference(x,y)).
-leq(x,y) | -Cont(z,difference(x,y)) | Cont(z,x).
-leq(x,y) | -P(z,difference(x,y)) | lt(intersection(z,y),z).
-ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).
ZEX(difference(x,y)) | -ZEX(x).
ZEX(difference(x,y)) | -Cont(x,y).
-ArealRegion(x) | -Curve(y) | Covers(x,y).
ArealRegion(x) | Curve(f28(x)).
ArealRegion(x) | -Covers(x,f28(x)).
-sf_multi_surface(x) | Multipart_ArealRegion(x).
-Multipart_ArealRegion(x) | ArealRegion(x).
-Multipart_ArealRegion(x) | Multipart_S(x).
Multipart_ArealRegion(x) | -ArealRegion(x) | -Multipart_S(x).
-Multipart_S(x) | S(x).
-Multipart_S(x) | -Connected_S(x).
Multipart_S(x) | -S(x) | Connected_S(x).
-sf_multi_line_string(x) | sf_multi_curve(x).
-sf_multi_line_string(x) | -P(y,x) | -Min(y) | sf_line_string(y).
sf_multi_line_string(x) | -sf_multi_curve(x) | P(f29(x),x).
sf_multi_line_string(x) | -sf_multi_curve(x) | Min(f29(x)).
sf_multi_line_string(x) | -sf_multi_curve(x) | -sf_line_string(f29(x)).
-sf_multi_curve(x) | Multipart_Curve(x).
-Multipart_Curve(x) | Curve(x).
-Multipart_Curve(x) | Multipart_S(x).
Multipart_Curve(x) | -Curve(x) | -Multipart_S(x).
-sf_multi_point(x) | PointRegion(x).
-sf_multi_point(x) | -Point(x).
sf_multi_point(x) | -PointRegion(x) | Point(x).
-Point(x) | MinDim(x).
-Point(x) | -Cont(y,x) | y = x.
Point(x) | -MinDim(x) | Cont(f30(x),x).
Point(x) | -MinDim(x) | f30(x) != x.
-PointRegion(x) | MinDim(x).
PointRegion(x) | -MinDim(x).
end_of_list.

============================== end of clauses for search =============

% The maximum domain element in the input is 0.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.08 seconds).
Ground clauses: seen=1547, kept=1411.
Selections=1, assignments=2, propagations=30, current_models=0.
Rewrite_terms=10, rewrite_bools=300, indexes=2.
Rules_from_neg_clauses=4, cross_offs=4.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.09 seconds).
Ground clauses: seen=3955, kept=3574.
Selections=3, assignments=7, propagations=603, current_models=0.
Rewrite_terms=27, rewrite_bools=10133, indexes=14.
Rules_from_neg_clauses=18, cross_offs=161.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.14 seconds).
Ground clauses: seen=8619, kept=7667.
Selections=14, assignments=49, propagations=2509, current_models=0.
Rewrite_terms=3821, rewrite_bools=47213, indexes=322.
Rules_from_neg_clauses=284, cross_offs=1283.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 0.23 seconds).
Ground clauses: seen=16853, kept=14758.
Selections=33, assignments=143, propagations=6082, current_models=0.
Rewrite_terms=16086, rewrite_bools=143464, indexes=507.
Rules_from_neg_clauses=606, cross_offs=4436.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 0.67 seconds).
Ground clauses: seen=30499, kept=26371.
Selections=90, assignments=476, propagations=18134, current_models=0.
Rewrite_terms=58880, rewrite_bools=467115, indexes=2327.
Rules_from_neg_clauses=1783, cross_offs=16175.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

=== Mace4 starting on domain size 7. ===

========================== MACLEOD SUMMARY ===========================
reasoner: C:/Users/torsten/macleod/mace4
status: 
execution finished: Sun Apr 25 16:29:23 2021
total CPU time used: 0
The command was "C:/Users/torsten/macleod/mace4 -v0 -t600 -s60 -n2 -N40 -f C:\Users\torsten\GitHub\colore\ontologies\simple_features\conversions\sfc_fol_nontrivial.all.p9"
============================ end of footer ===========================
