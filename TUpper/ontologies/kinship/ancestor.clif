/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved.
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Carmen Chui, Michael Gruninger, Janette Wong - initial implementation
*******************************************************************************/

(cl-text https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/kinship/ancestor.clif

(cl-comment 'ancestorOf is a partial ordering; x is ancestor of y.')

(cl-comment 'Axiom: ANC-1')
(cl-comment 'The ancestorOf relation is a relation over persons.')
(forall (x y)
	(if (ancestorOf x y)
		(and (person x)(person y))))

(cl-comment 'Axiom: ANC-2')
(cl-comment 'The ancestorOf relation is irreflexive.')
(forall (x)
	(not (ancestorOf x x)))
	
(cl-comment 'Axiom: ANC-3')
(cl-comment 'The ancestorOf relation is transitive.')
(forall (x y z)
	(if (and (ancestorOf x y)(ancestorOf y z))
		(ancestorOf x z)))

(cl-comment 'Axiom: ANC-4')
(cl-comment 'The ancestorOf relation is asymmetric.')
(forall (x y)
	(if (ancestorOf x y)
		(not (ancesorOf y x))))

(cl-comment 'Axiom: ANC-5')
(cl-comment 'ancestorOf is the inverse of hasAncestor(y,x)')
(forall (x y)
	(iff (ancestorOf x y)
		(hasAncestor y x)))

(cl-comment 'Axiom: ANC-6')
(cl-comment 'The ancestorOf relation is a discrete ordering, so every ancestor has an ancestor in the ordering.')
(forall (x y)
	(if (ancestorOf x y)
		(exists (z)
			(and (ancestorOf x z)
				(or (ancestorOf z y)(= y z))
				(not (exists (w)
					(and (ancestorOf x w)(ancestorOf w z))))))))

(cl-comment 'Axiom: ANC-7')
(cl-comment 'The ancestorOf relation is a discrete ordering, so every ancestor has a descendant in the ordering.')
(forall (x y)
	(if (ancestorOf x y)
		(exists (z)
			(and (ancestorOf x z)
				(or (ancestorOf z y)(= y z))
				(not (exists (w)
					(and (ancestorOf z w)(ancestorOf w y))))))))

(cl-comment 'Axiom: ANC-8')
(cl-comment 'Prevent someone from being an ancestor in two different ways.')
(forall (x y z u)
	(if (and (ancestorOf u y)
			(ancestorOf z y)
			(ancestorOf x u)
			(ancestorOf x z))
		(or (ancestorOf u z)(ancestorOf z u)(= z u))))

)