============================== Mace4 =================================
Mace4 (64) version 2009-11A, November 2009.
Process 30822 was started by cchui on MacBook-Pro.local,
Mon Feb 24 16:19:19 2020
The command was "/Users/cchui/macleod/reasoners/p9m4/mace4 -v0 -t300 -s60 -n2 -N40 -f /Users/cchui/Documents/GitHub/colore/ontologies/relatedparties/conversions/kinship_atemporal.all.p9".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file /Users/cchui/Documents/GitHub/colore/ontologies/relatedparties/conversions/kinship_atemporal.all.p9


formulas(assumptions).
(all x (-parent(x) | person(x))).
(all x ((-parent(x) | (exists c (person(c) & hasChild(x,c) & x != c))) & (-(exists c (person(c) & hasChild(x,c) & x != c)) | parent(x)))).
(all x (-parent(x) | -hasChild(x,x))).
(all x all y (-hasChild(x,y) | person(x) & person(y) & x != y)).
(all x all y (-hasChild(x,y) | -hasChild(y,x))).
(all x -hasChild(x,x)).
(all x all y ((-hasParent(x,y) | hasChild(y,x)) & (-hasChild(y,x) | hasParent(x,y)))).
(all x -hasParent(x,x)).
(all x all y (-hasParent(x,y) | -hasParent(y,x))).
(all x all y (-hasSpouse(x,y) | -hasChild(x,y))).
(all x all y (-hasSpouse(x,y) | person(x) & person(y) & x != y)).
(all x all y all z (-(hasSpouse(x,y) & hasSpouse(x,z)) | y = z)).
(all x all y (-hasSpouse(x,y) | hasSpouse(y,x))).
(all x -hasSpouse(x,x)).
(all x (-child(x) | person(x))).
(all x ((-child(x) | (exists y (person(x) & hasChild(y,x) & x != y))) & (-(exists y (person(x) & hasChild(y,x) & x != y)) | child(x)))).
(all x (-child(x) | -hasChild(x,x))).
(all x ((-sibling(x) | (exists y exists z (person(x) & hasChild(z,y) & hasChild(z,x) & x != y & x != z & y != z))) & (-(exists y exists z (person(x) & hasChild(z,y) & hasChild(z,x) & x != y & x != z & y != z)) | sibling(x)))).
(all x all y ((-hasSibling(x,y) | (exists z (hasChild(z,x) & hasChild(z,y) & x != y))) & (-(exists z (hasChild(z,x) & hasChild(z,y) & x != y)) | hasSibling(x,y)))).
(all x all y (-hasSibling(x,y) | hasSibling(y,x))).
(all x -hasSibling(x,x)).
(all x ((-grandparent(x) | (exists y exists z (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z))) & (-(exists y exists z (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z)) | grandparent(x)))).
(all x all z ((-hasGrandparent(z,x) | (exists y (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z))) & (-(exists y (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z)) | hasGrandparent(z,x)))).
(all x -hasGrandparent(x,x)).
(all x all y all z (-(hasGrandparent(x,y) & hasGrandparent(y,z)) | -hasGrandparent(x,z))).
(all x all y (-hasGrandparent(x,y) | -hasGrandparent(y,x))).
(all x ((-grandchild(x) | (exists y exists z (hasChild(z,y) & hasChild(y,x) & x != y & y != z & x != z))) & (-(exists y exists z (hasChild(z,y) & hasChild(y,x) & x != y & y != z & x != z)) | grandchild(x)))).
(all x all z ((-hasGrandchild(x,z) | (exists y (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z))) & (-(exists y (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z)) | hasGrandchild(x,z)))).
(all x -hasGrandchild(x,x)).
(all x all y all z (-(hasGrandchild(x,y) & hasGrandchild(y,z)) | -hasGrandchild(x,z))).
(all x all y (-hasGrandchild(x,y) | -hasGrandchild(y,x))).
(all x ((-greatgrandparent(x) | (exists w exists y exists z (hasChild(x,w) & hasChild(w,y) & hasChild(y,z) & w != x & w != y & w != z & x != y & y != z & x != z))) & (-(exists w exists y exists z (hasChild(x,w) & hasChild(w,y) & hasChild(y,z) & w != x & w != y & w != z & x != y & y != z & x != z)) | greatgrandparent(x)))).
(all z all w ((-hasGreatGrandparent(z,w) | (exists x exists y (hasChild(w,x) & hasChild(x,y) & hasChild(y,z) & w != x & w != y & w != z & x != y & y != z & x != z))) & (-(exists x exists y (hasChild(w,x) & hasChild(x,y) & hasChild(y,z) & w != x & w != y & w != z & x != y & y != z & x != z)) | hasGreatGrandparent(z,w)))).
(all x -hasGreatGrandparent(x,x)).
(all x all y all z (-(hasGreatGrandparent(x,y) & hasGreatGrandparent(y,z)) | -hasGreatGrandparent(x,z))).
(all x all y (-hasGreatGrandparent(x,y) | -hasGreatGrandparent(y,x))).
(all x ((-cousin(x) | (exists k exists w exists z exists y (hasChild(k,z) & hasChild(k,w) & hasChild(z,x) & hasChild(w,y) & k != z & k != w & k != x & k != y & z != w & z != x & z != y & w != x & w != y & x != y))) & (-(exists k exists w exists z exists y (hasChild(k,z) & hasChild(k,w) & hasChild(z,x) & hasChild(w,y) & k != z & k != w & k != x & k != y & z != w & z != x & z != y & w != x & w != y & x != y)) | cousin(x)))).
(all x all y ((-hasCousin(x,y) | (exists k exists w exists z (hasChild(k,z) & hasChild(k,w) & hasChild(z,x) & hasChild(w,y) & k != z & k != w & k != x & k != y & z != w & z != x & z != y & w != x & w != y & x != y))) & (-(exists k exists w exists z (hasChild(k,z) & hasChild(k,w) & hasChild(z,x) & hasChild(w,y) & k != z & k != w & k != x & k != y & z != w & z != x & z != y & w != x & w != y & x != y)) | hasCousin(x,y)))).
(all x -hasCousin(x,x)).
(all x all y (-hasCousin(x,y) | hasCousin(y,x))).
(all x ((-pibling(x) | (exists y exists z exists w (hasSibling(x,y) & hasChild(y,z)))) & (-(exists y exists z exists w (hasSibling(x,y) & hasChild(y,z))) | pibling(x)))).
(all x all z ((-hasPibling(x,z) | (exists y (hasParent(x,y) & hasSibling(y,z)))) & (-(exists y (hasParent(x,y) & hasSibling(y,z))) | hasPibling(x,z)))).
(all x -hasPibling(x,x)).
(all x all y all z (-(hasPibling(x,y) & hasPibling(y,z)) | -hasPibling(x,z))).
(all x all y (-hasPibling(x,y) | -hasPibling(y,x))).
(all x ((-greatpibling(x) | (exists w exists y exists z (hasChild(w,y) & hasChild(y,z) & hasSibling(w,x)))) & (-(exists w exists y exists z (hasChild(w,y) & hasChild(y,z) & hasSibling(w,x))) | greatpibling(x)))).
(all x all w ((-hasGreatPibling(x,w) | (exists z (hasGrandparent(x,z) & hasSibling(z,w)))) & (-(exists z (hasGrandparent(x,z) & hasSibling(z,w))) | hasGreatPibling(x,w)))).
(all x -hasGreatPibling(x,x)).
(all x all y all z (-(hasGreatPibling(x,y) & hasGreatPibling(y,z)) | -hasGreatPibling(x,z))).
(all x all y (-hasGreatPibling(x,y) | -hasGreatPibling(y,x))).
(all x ((-nibling(x) | (exists y exists z (hasChild(y,x) & hasSibling(y,z)))) & (-(exists y exists z (hasChild(y,x) & hasSibling(y,z))) | nibling(x)))).
(all x all z ((-hasNibling(x,z) | (exists y (hasSibling(x,y) & hasChild(y,z)))) & (-(exists y (hasSibling(x,y) & hasChild(y,z))) | hasNibling(x,z)))).
(all x -hasNibling(x,x)).
(all x all y all z (-(hasNibling(x,y) & hasNibling(y,z)) | -hasNibling(x,z))).
(all x all y (-hasNibling(x,y) | -hasNibling(y,x))).
(all x all y ((-hasNibling(x,y) | hasPibling(y,x)) & (-hasPibling(y,x) | hasNibling(x,y)))).
(all x ((-parentinlaw(x) | (exists y exists z (hasSpouse(y,z) & hasParent(z,x) & y != z))) & (-(exists y exists z (hasSpouse(y,z) & hasParent(z,x) & y != z)) | parentinlaw(x)))).
(all x all z ((-hasParentInLaw(x,z) | (exists y (hasSpouse(x,y) & hasParent(y,z) & x != z & -hasParent(x,z)))) & (-(exists y (hasSpouse(x,y) & hasParent(y,z) & x != z & -hasParent(x,z))) | hasParentInLaw(x,z)))).
(all x -hasParentInLaw(x,x)).
(all x all y all z (-(hasParentInLaw(x,y) & hasParentInLaw(y,z)) | -hasParentInLaw(x,z))).
(all x all y (-hasParentInLaw(x,y) | -hasParentInLaw(y,x))).
(all x ((-siblinginlaw(x) | (exists y exists z (hasSpouse(y,z) & hasSibling(z,x)))) & (-(exists y exists z (hasSpouse(y,z) & hasSibling(z,x))) | siblinginlaw(x)))).
(all x all z ((-hasSiblingInLaw(x,z) | (exists y (hasSpouse(x,y) & hasSibling(y,z)))) & (-(exists y (hasSpouse(x,y) & hasSibling(y,z))) | hasSiblingInLaw(x,z)))).
(all x -hasSiblingInLaw(x,x)).
(all x all y all z (-(hasSiblingInLaw(x,y) & hasSiblingInLaw(y,z)) | -hasSiblingInLaw(x,z))).
(all x all y (-hasSiblingInLaw(x,y) | -hasSiblingInLaw(y,x))).
(all x ((-halfsibling(x) | (exists w exists y exists z (hasChild(w,x) & hasChild(y,z) & -hasChild(w,z) & -hasChild(y,x) & hasSpouse(w,y) & x != z & w != z & w != y & w != x & x != y))) & (-(exists w exists y exists z (hasChild(w,x) & hasChild(y,z) & -hasChild(w,z) & -hasChild(y,x) & hasSpouse(w,y) & x != z & w != z & w != y & w != x & x != y)) | halfsibling(x)))).
(all x all z ((-hasHalfSibling(x,z) | (exists y exists w (hasParent(x,y) & hasParent(w,z) & hasSpouse(y,z) & -hasParent(x,z) & -hasParent(w,y)))) & (-(exists y exists w (hasParent(x,y) & hasParent(w,z) & hasSpouse(y,z) & -hasParent(x,z) & -hasParent(w,y))) | hasHalfSibling(x,z)))).
(all x -hasHalfSibling(x,x)).
(all x all y all z (-(hasHalfSibling(x,y) & hasHalfSibling(y,z)) | -hasHalfSibling(x,z))).
(all x all y (-hasHalfSibling(x,y) | hasHalfSibling(y,x))).
(all x ((-stepchild(x) | (exists y exists z (hasParent(x,y) & hasSpouse(y,z) & -hasParent(x,z)))) & (-(exists y exists z (hasParent(x,y) & hasSpouse(y,z) & -hasParent(x,z))) | stepchild(x)))).
(all x all z ((-hasStepChild(x,z) | (exists y exists w (hasParent(x,y) & -hasParent(x,z) & hasSpouse(y,z) & x != z))) & (-(exists y exists w (hasParent(x,y) & -hasParent(x,z) & hasSpouse(y,z) & x != z)) | hasStepChild(x,z)))).
(all x -hasStepChild(x,x)).
(all x all y all z (-(hasStepChild(x,y) & hasStepChild(y,z)) | -hasStepChild(x,z))).
(all x all y (-hasStepChild(x,y) | -hasStepChild(y,x))).
(all x all y ((-hasStepParent(x,y) | hasStepChild(y,x)) & (-hasStepChild(y,x) | hasStepParent(x,y)))).
(all x -ancestorOf(x,x)).
(all x all y (-ancestorOf(x,y) | -ancesorOf(y,x))).
(all x all y all z (-(ancestorOf(x,y) & ancestor(y,z)) | ancestorOf(x,z))).
(all x all y all z (-(hasChild(y,z) & ancestorOf(x,z) & x != y) | ancestorOf(x,y))).
(all x all y (-ancestorOf(x,y) | (exists z (hasChild(y,z) & ancestorOf(x,z))))).
(all x all y ((-hasChild(x,y) | ancestorOf(x,y) & -(exists z (ancestorOf(x,z) & ancestorOf(z,y)))) & (-(ancestorOf(x,y) & -(exists z (ancestorOf(x,z) & ancestorOf(z,y)))) | hasChild(x,y)))).
(all x all y all z (-(hasChild(y,x) & hasChild(z,x) & y != z) | -(exists u (ancestorOf(u,y) & ancestorOf(u,z))))).
(all x all y all z (-(hasSpouse(x,y) & ancestorOf(z,x)) | z != y)).
(all x all y all z (-(hasSpouse(x,y) & ancestorOf(z,x)) | -ancestorOf(z,y))).
(exists x exists y exists z (hasChild(x,y) & hasChild(x,z) & y != z)).
(exists x exists y hasSpouse(x,y)).
end_of_list.

% From the command line: clear(verbose).

% From the command line: assign(max_seconds, 300).

% From the command line: assign(max_seconds_per, 60).
    % assign(domain_size, 2) -> assign(start_size, 2).
    % assign(domain_size, 2) -> assign(end_size, 2).

% From the command line: assign(domain_size, 2).

% From the command line: assign(end_size, 40).

============================== end of input ==========================

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (all x (-parent(x) | person(x))) # label(non_clause).  [assumption].
2 (all x ((-parent(x) | (exists c (person(c) & hasChild(x,c) & x != c))) & (-(exists c (person(c) & hasChild(x,c) & x != c)) | parent(x)))) # label(non_clause).  [assumption].
3 (all x (-parent(x) | -hasChild(x,x))) # label(non_clause).  [assumption].
4 (all x all y (-hasChild(x,y) | person(x) & person(y) & x != y)) # label(non_clause).  [assumption].
5 (all x all y (-hasChild(x,y) | -hasChild(y,x))) # label(non_clause).  [assumption].
6 (all x -hasChild(x,x)) # label(non_clause).  [assumption].
7 (all x all y ((-hasParent(x,y) | hasChild(y,x)) & (-hasChild(y,x) | hasParent(x,y)))) # label(non_clause).  [assumption].
8 (all x -hasParent(x,x)) # label(non_clause).  [assumption].
9 (all x all y (-hasParent(x,y) | -hasParent(y,x))) # label(non_clause).  [assumption].
10 (all x all y (-hasSpouse(x,y) | -hasChild(x,y))) # label(non_clause).  [assumption].
11 (all x all y (-hasSpouse(x,y) | person(x) & person(y) & x != y)) # label(non_clause).  [assumption].
12 (all x all y all z (-(hasSpouse(x,y) & hasSpouse(x,z)) | y = z)) # label(non_clause).  [assumption].
13 (all x all y (-hasSpouse(x,y) | hasSpouse(y,x))) # label(non_clause).  [assumption].
14 (all x -hasSpouse(x,x)) # label(non_clause).  [assumption].
15 (all x (-child(x) | person(x))) # label(non_clause).  [assumption].
16 (all x ((-child(x) | (exists y (person(x) & hasChild(y,x) & x != y))) & (-(exists y (person(x) & hasChild(y,x) & x != y)) | child(x)))) # label(non_clause).  [assumption].
17 (all x (-child(x) | -hasChild(x,x))) # label(non_clause).  [assumption].
18 (all x ((-sibling(x) | (exists y exists z (person(x) & hasChild(z,y) & hasChild(z,x) & x != y & x != z & y != z))) & (-(exists y exists z (person(x) & hasChild(z,y) & hasChild(z,x) & x != y & x != z & y != z)) | sibling(x)))) # label(non_clause).  [assumption].
19 (all x all y ((-hasSibling(x,y) | (exists z (hasChild(z,x) & hasChild(z,y) & x != y))) & (-(exists z (hasChild(z,x) & hasChild(z,y) & x != y)) | hasSibling(x,y)))) # label(non_clause).  [assumption].
20 (all x all y (-hasSibling(x,y) | hasSibling(y,x))) # label(non_clause).  [assumption].
21 (all x -hasSibling(x,x)) # label(non_clause).  [assumption].
22 (all x ((-grandparent(x) | (exists y exists z (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z))) & (-(exists y exists z (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z)) | grandparent(x)))) # label(non_clause).  [assumption].
23 (all x all z ((-hasGrandparent(z,x) | (exists y (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z))) & (-(exists y (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z)) | hasGrandparent(z,x)))) # label(non_clause).  [assumption].
24 (all x -hasGrandparent(x,x)) # label(non_clause).  [assumption].
25 (all x all y all z (-(hasGrandparent(x,y) & hasGrandparent(y,z)) | -hasGrandparent(x,z))) # label(non_clause).  [assumption].
26 (all x all y (-hasGrandparent(x,y) | -hasGrandparent(y,x))) # label(non_clause).  [assumption].
27 (all x ((-grandchild(x) | (exists y exists z (hasChild(z,y) & hasChild(y,x) & x != y & y != z & x != z))) & (-(exists y exists z (hasChild(z,y) & hasChild(y,x) & x != y & y != z & x != z)) | grandchild(x)))) # label(non_clause).  [assumption].
28 (all x all z ((-hasGrandchild(x,z) | (exists y (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z))) & (-(exists y (hasChild(x,y) & hasChild(y,z) & x != y & y != z & x != z)) | hasGrandchild(x,z)))) # label(non_clause).  [assumption].
29 (all x -hasGrandchild(x,x)) # label(non_clause).  [assumption].
30 (all x all y all z (-(hasGrandchild(x,y) & hasGrandchild(y,z)) | -hasGrandchild(x,z))) # label(non_clause).  [assumption].
31 (all x all y (-hasGrandchild(x,y) | -hasGrandchild(y,x))) # label(non_clause).  [assumption].
32 (all x ((-greatgrandparent(x) | (exists w exists y exists z (hasChild(x,w) & hasChild(w,y) & hasChild(y,z) & w != x & w != y & w != z & x != y & y != z & x != z))) & (-(exists w exists y exists z (hasChild(x,w) & hasChild(w,y) & hasChild(y,z) & w != x & w != y & w != z & x != y & y != z & x != z)) | greatgrandparent(x)))) # label(non_clause).  [assumption].
33 (all z all w ((-hasGreatGrandparent(z,w) | (exists x exists y (hasChild(w,x) & hasChild(x,y) & hasChild(y,z) & w != x & w != y & w != z & x != y & y != z & x != z))) & (-(exists x exists y (hasChild(w,x) & hasChild(x,y) & hasChild(y,z) & w != x & w != y & w != z & x != y & y != z & x != z)) | hasGreatGrandparent(z,w)))) # label(non_clause).  [assumption].
34 (all x -hasGreatGrandparent(x,x)) # label(non_clause).  [assumption].
35 (all x all y all z (-(hasGreatGrandparent(x,y) & hasGreatGrandparent(y,z)) | -hasGreatGrandparent(x,z))) # label(non_clause).  [assumption].
36 (all x all y (-hasGreatGrandparent(x,y) | -hasGreatGrandparent(y,x))) # label(non_clause).  [assumption].
37 (all x ((-cousin(x) | (exists k exists w exists z exists y (hasChild(k,z) & hasChild(k,w) & hasChild(z,x) & hasChild(w,y) & k != z & k != w & k != x & k != y & z != w & z != x & z != y & w != x & w != y & x != y))) & (-(exists k exists w exists z exists y (hasChild(k,z) & hasChild(k,w) & hasChild(z,x) & hasChild(w,y) & k != z & k != w & k != x & k != y & z != w & z != x & z != y & w != x & w != y & x != y)) | cousin(x)))) # label(non_clause).  [assumption].
38 (all x all y ((-hasCousin(x,y) | (exists k exists w exists z (hasChild(k,z) & hasChild(k,w) & hasChild(z,x) & hasChild(w,y) & k != z & k != w & k != x & k != y & z != w & z != x & z != y & w != x & w != y & x != y))) & (-(exists k exists w exists z (hasChild(k,z) & hasChild(k,w) & hasChild(z,x) & hasChild(w,y) & k != z & k != w & k != x & k != y & z != w & z != x & z != y & w != x & w != y & x != y)) | hasCousin(x,y)))) # label(non_clause).  [assumption].
39 (all x -hasCousin(x,x)) # label(non_clause).  [assumption].
40 (all x all y (-hasCousin(x,y) | hasCousin(y,x))) # label(non_clause).  [assumption].
41 (all x ((-pibling(x) | (exists y exists z exists w (hasSibling(x,y) & hasChild(y,z)))) & (-(exists y exists z exists w (hasSibling(x,y) & hasChild(y,z))) | pibling(x)))) # label(non_clause).  [assumption].
42 (all x all z ((-hasPibling(x,z) | (exists y (hasParent(x,y) & hasSibling(y,z)))) & (-(exists y (hasParent(x,y) & hasSibling(y,z))) | hasPibling(x,z)))) # label(non_clause).  [assumption].
43 (all x -hasPibling(x,x)) # label(non_clause).  [assumption].
44 (all x all y all z (-(hasPibling(x,y) & hasPibling(y,z)) | -hasPibling(x,z))) # label(non_clause).  [assumption].
45 (all x all y (-hasPibling(x,y) | -hasPibling(y,x))) # label(non_clause).  [assumption].
46 (all x ((-greatpibling(x) | (exists w exists y exists z (hasChild(w,y) & hasChild(y,z) & hasSibling(w,x)))) & (-(exists w exists y exists z (hasChild(w,y) & hasChild(y,z) & hasSibling(w,x))) | greatpibling(x)))) # label(non_clause).  [assumption].
47 (all x all w ((-hasGreatPibling(x,w) | (exists z (hasGrandparent(x,z) & hasSibling(z,w)))) & (-(exists z (hasGrandparent(x,z) & hasSibling(z,w))) | hasGreatPibling(x,w)))) # label(non_clause).  [assumption].
48 (all x -hasGreatPibling(x,x)) # label(non_clause).  [assumption].
49 (all x all y all z (-(hasGreatPibling(x,y) & hasGreatPibling(y,z)) | -hasGreatPibling(x,z))) # label(non_clause).  [assumption].
50 (all x all y (-hasGreatPibling(x,y) | -hasGreatPibling(y,x))) # label(non_clause).  [assumption].
51 (all x ((-nibling(x) | (exists y exists z (hasChild(y,x) & hasSibling(y,z)))) & (-(exists y exists z (hasChild(y,x) & hasSibling(y,z))) | nibling(x)))) # label(non_clause).  [assumption].
52 (all x all z ((-hasNibling(x,z) | (exists y (hasSibling(x,y) & hasChild(y,z)))) & (-(exists y (hasSibling(x,y) & hasChild(y,z))) | hasNibling(x,z)))) # label(non_clause).  [assumption].
53 (all x -hasNibling(x,x)) # label(non_clause).  [assumption].
54 (all x all y all z (-(hasNibling(x,y) & hasNibling(y,z)) | -hasNibling(x,z))) # label(non_clause).  [assumption].
55 (all x all y (-hasNibling(x,y) | -hasNibling(y,x))) # label(non_clause).  [assumption].
56 (all x all y ((-hasNibling(x,y) | hasPibling(y,x)) & (-hasPibling(y,x) | hasNibling(x,y)))) # label(non_clause).  [assumption].
57 (all x ((-parentinlaw(x) | (exists y exists z (hasSpouse(y,z) & hasParent(z,x) & y != z))) & (-(exists y exists z (hasSpouse(y,z) & hasParent(z,x) & y != z)) | parentinlaw(x)))) # label(non_clause).  [assumption].
58 (all x all z ((-hasParentInLaw(x,z) | (exists y (hasSpouse(x,y) & hasParent(y,z) & x != z & -hasParent(x,z)))) & (-(exists y (hasSpouse(x,y) & hasParent(y,z) & x != z & -hasParent(x,z))) | hasParentInLaw(x,z)))) # label(non_clause).  [assumption].
59 (all x -hasParentInLaw(x,x)) # label(non_clause).  [assumption].
60 (all x all y all z (-(hasParentInLaw(x,y) & hasParentInLaw(y,z)) | -hasParentInLaw(x,z))) # label(non_clause).  [assumption].
61 (all x all y (-hasParentInLaw(x,y) | -hasParentInLaw(y,x))) # label(non_clause).  [assumption].
62 (all x ((-siblinginlaw(x) | (exists y exists z (hasSpouse(y,z) & hasSibling(z,x)))) & (-(exists y exists z (hasSpouse(y,z) & hasSibling(z,x))) | siblinginlaw(x)))) # label(non_clause).  [assumption].
63 (all x all z ((-hasSiblingInLaw(x,z) | (exists y (hasSpouse(x,y) & hasSibling(y,z)))) & (-(exists y (hasSpouse(x,y) & hasSibling(y,z))) | hasSiblingInLaw(x,z)))) # label(non_clause).  [assumption].
64 (all x -hasSiblingInLaw(x,x)) # label(non_clause).  [assumption].
65 (all x all y all z (-(hasSiblingInLaw(x,y) & hasSiblingInLaw(y,z)) | -hasSiblingInLaw(x,z))) # label(non_clause).  [assumption].
66 (all x all y (-hasSiblingInLaw(x,y) | -hasSiblingInLaw(y,x))) # label(non_clause).  [assumption].
67 (all x ((-halfsibling(x) | (exists w exists y exists z (hasChild(w,x) & hasChild(y,z) & -hasChild(w,z) & -hasChild(y,x) & hasSpouse(w,y) & x != z & w != z & w != y & w != x & x != y))) & (-(exists w exists y exists z (hasChild(w,x) & hasChild(y,z) & -hasChild(w,z) & -hasChild(y,x) & hasSpouse(w,y) & x != z & w != z & w != y & w != x & x != y)) | halfsibling(x)))) # label(non_clause).  [assumption].
68 (all x all z ((-hasHalfSibling(x,z) | (exists y exists w (hasParent(x,y) & hasParent(w,z) & hasSpouse(y,z) & -hasParent(x,z) & -hasParent(w,y)))) & (-(exists y exists w (hasParent(x,y) & hasParent(w,z) & hasSpouse(y,z) & -hasParent(x,z) & -hasParent(w,y))) | hasHalfSibling(x,z)))) # label(non_clause).  [assumption].
69 (all x -hasHalfSibling(x,x)) # label(non_clause).  [assumption].
70 (all x all y all z (-(hasHalfSibling(x,y) & hasHalfSibling(y,z)) | -hasHalfSibling(x,z))) # label(non_clause).  [assumption].
71 (all x all y (-hasHalfSibling(x,y) | hasHalfSibling(y,x))) # label(non_clause).  [assumption].
72 (all x ((-stepchild(x) | (exists y exists z (hasParent(x,y) & hasSpouse(y,z) & -hasParent(x,z)))) & (-(exists y exists z (hasParent(x,y) & hasSpouse(y,z) & -hasParent(x,z))) | stepchild(x)))) # label(non_clause).  [assumption].
73 (all x all z ((-hasStepChild(x,z) | (exists y exists w (hasParent(x,y) & -hasParent(x,z) & hasSpouse(y,z) & x != z))) & (-(exists y exists w (hasParent(x,y) & -hasParent(x,z) & hasSpouse(y,z) & x != z)) | hasStepChild(x,z)))) # label(non_clause).  [assumption].
74 (all x -hasStepChild(x,x)) # label(non_clause).  [assumption].
75 (all x all y all z (-(hasStepChild(x,y) & hasStepChild(y,z)) | -hasStepChild(x,z))) # label(non_clause).  [assumption].
76 (all x all y (-hasStepChild(x,y) | -hasStepChild(y,x))) # label(non_clause).  [assumption].
77 (all x all y ((-hasStepParent(x,y) | hasStepChild(y,x)) & (-hasStepChild(y,x) | hasStepParent(x,y)))) # label(non_clause).  [assumption].
78 (all x -ancestorOf(x,x)) # label(non_clause).  [assumption].
79 (all x all y (-ancestorOf(x,y) | -ancesorOf(y,x))) # label(non_clause).  [assumption].
80 (all x all y all z (-(ancestorOf(x,y) & ancestor(y,z)) | ancestorOf(x,z))) # label(non_clause).  [assumption].
81 (all x all y all z (-(hasChild(y,z) & ancestorOf(x,z) & x != y) | ancestorOf(x,y))) # label(non_clause).  [assumption].
82 (all x all y (-ancestorOf(x,y) | (exists z (hasChild(y,z) & ancestorOf(x,z))))) # label(non_clause).  [assumption].
83 (all x all y ((-hasChild(x,y) | ancestorOf(x,y) & -(exists z (ancestorOf(x,z) & ancestorOf(z,y)))) & (-(ancestorOf(x,y) & -(exists z (ancestorOf(x,z) & ancestorOf(z,y)))) | hasChild(x,y)))) # label(non_clause).  [assumption].
84 (all x all y all z (-(hasChild(y,x) & hasChild(z,x) & y != z) | -(exists u (ancestorOf(u,y) & ancestorOf(u,z))))) # label(non_clause).  [assumption].
85 (all x all y all z (-(hasSpouse(x,y) & ancestorOf(z,x)) | z != y)) # label(non_clause).  [assumption].
86 (all x all y all z (-(hasSpouse(x,y) & ancestorOf(z,x)) | -ancestorOf(z,y))) # label(non_clause).  [assumption].
87 (exists x exists y exists z (hasChild(x,y) & hasChild(x,z) & y != z)) # label(non_clause).  [assumption].
88 (exists x exists y hasSpouse(x,y)) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== CLAUSES FOR SEARCH ====================

formulas(mace4_clauses).
-parent(x) | person(x).
-parent(x) | person(f1(x)).
-parent(x) | hasChild(x,f1(x)).
-parent(x) | f1(x) != x.
-person(x) | -hasChild(y,x) | x = y | parent(y).
-parent(x) | -hasChild(x,x).
-hasChild(x,y) | person(x).
-hasChild(x,y) | person(y).
-hasChild(x,y) | y != x.
-hasChild(x,y) | -hasChild(y,x).
-hasChild(x,x).
-hasParent(x,y) | hasChild(y,x).
-hasChild(x,y) | hasParent(y,x).
-hasParent(x,x).
-hasParent(x,y) | -hasParent(y,x).
-hasSpouse(x,y) | -hasChild(x,y).
-hasSpouse(x,y) | person(x).
-hasSpouse(x,y) | person(y).
-hasSpouse(x,y) | y != x.
-hasSpouse(x,y) | -hasSpouse(x,z) | z = y.
-hasSpouse(x,y) | hasSpouse(y,x).
-hasSpouse(x,x).
-child(x) | person(x).
-child(x) | person(x).
-child(x) | hasChild(f2(x),x).
-child(x) | f2(x) != x.
-person(x) | -hasChild(y,x) | y = x | child(x).
-child(x) | -hasChild(x,x).
-sibling(x) | person(x).
-sibling(x) | hasChild(f4(x),f3(x)).
-sibling(x) | hasChild(f4(x),x).
-sibling(x) | f3(x) != x.
-sibling(x) | f4(x) != x.
-sibling(x) | f4(x) != f3(x).
-person(x) | -hasChild(y,z) | -hasChild(y,x) | z = x | y = x | y = z | sibling(x).
-hasSibling(x,y) | hasChild(f5(x,y),x).
-hasSibling(x,y) | hasChild(f5(x,y),y).
-hasSibling(x,y) | y != x.
-hasChild(x,y) | -hasChild(x,z) | z = y | hasSibling(y,z).
-hasSibling(x,y) | hasSibling(y,x).
-hasSibling(x,x).
-grandparent(x) | hasChild(x,f6(x)).
-grandparent(x) | hasChild(f6(x),f7(x)).
-grandparent(x) | f6(x) != x.
-grandparent(x) | f7(x) != f6(x).
-grandparent(x) | f7(x) != x.
-hasChild(x,y) | -hasChild(y,z) | y = x | z = y | z = x | grandparent(x).
-hasGrandparent(x,y) | hasChild(y,f8(y,x)).
-hasGrandparent(x,y) | hasChild(f8(y,x),x).
-hasGrandparent(x,y) | f8(y,x) != y.
-hasGrandparent(x,y) | x != f8(y,x).
-hasGrandparent(x,y) | x != y.
-hasChild(x,y) | -hasChild(y,z) | y = x | z = y | z = x | hasGrandparent(z,x).
-hasGrandparent(x,x).
-hasGrandparent(x,y) | -hasGrandparent(y,z) | -hasGrandparent(x,z).
-hasGrandparent(x,y) | -hasGrandparent(y,x).
-grandchild(x) | hasChild(f10(x),f9(x)).
-grandchild(x) | hasChild(f9(x),x).
-grandchild(x) | f9(x) != x.
-grandchild(x) | f10(x) != f9(x).
-grandchild(x) | f10(x) != x.
-hasChild(x,y) | -hasChild(y,z) | y = z | x = y | x = z | grandchild(z).
-hasGrandchild(x,y) | hasChild(x,f11(x,y)).
-hasGrandchild(x,y) | hasChild(f11(x,y),y).
-hasGrandchild(x,y) | f11(x,y) != x.
-hasGrandchild(x,y) | y != f11(x,y).
-hasGrandchild(x,y) | y != x.
-hasChild(x,y) | -hasChild(y,z) | y = x | z = y | z = x | hasGrandchild(x,z).
-hasGrandchild(x,x).
-hasGrandchild(x,y) | -hasGrandchild(y,z) | -hasGrandchild(x,z).
-hasGrandchild(x,y) | -hasGrandchild(y,x).
-greatgrandparent(x) | hasChild(x,f12(x)).
-greatgrandparent(x) | hasChild(f12(x),f13(x)).
-greatgrandparent(x) | hasChild(f13(x),f14(x)).
-greatgrandparent(x) | f12(x) != x.
-greatgrandparent(x) | f12(x) != f13(x).
-greatgrandparent(x) | f12(x) != f14(x).
-greatgrandparent(x) | f13(x) != x.
-greatgrandparent(x) | f14(x) != f13(x).
-greatgrandparent(x) | f14(x) != x.
-hasChild(x,y) | -hasChild(y,z) | -hasChild(z,u) | y = x | y = z | y = u | z = x | u = z | u = x | greatgrandparent(x).
-hasGreatGrandparent(x,y) | hasChild(y,f15(x,y)).
-hasGreatGrandparent(x,y) | hasChild(f15(x,y),f16(x,y)).
-hasGreatGrandparent(x,y) | hasChild(f16(x,y),x).
-hasGreatGrandparent(x,y) | y != f15(x,y).
-hasGreatGrandparent(x,y) | y != f16(x,y).
-hasGreatGrandparent(x,y) | y != x.
-hasGreatGrandparent(x,y) | f16(x,y) != f15(x,y).
-hasGreatGrandparent(x,y) | x != f16(x,y).
-hasGreatGrandparent(x,y) | x != f15(x,y).
-hasChild(x,y) | -hasChild(y,z) | -hasChild(z,u) | x = y | x = z | x = u | z = y | u = z | u = y | hasGreatGrandparent(u,x).
-hasGreatGrandparent(x,x).
-hasGreatGrandparent(x,y) | -hasGreatGrandparent(y,z) | -hasGreatGrandparent(x,z).
-hasGreatGrandparent(x,y) | -hasGreatGrandparent(y,x).
-cousin(x) | hasChild(f17(x),f19(x)).
-cousin(x) | hasChild(f17(x),f18(x)).
-cousin(x) | hasChild(f19(x),x).
-cousin(x) | hasChild(f18(x),f20(x)).
-cousin(x) | f17(x) != f19(x).
-cousin(x) | f17(x) != f18(x).
-cousin(x) | f17(x) != x.
-cousin(x) | f17(x) != f20(x).
-cousin(x) | f18(x) != f19(x).
-cousin(x) | f19(x) != x.
-cousin(x) | f19(x) != f20(x).
-cousin(x) | f18(x) != x.
-cousin(x) | f18(x) != f20(x).
-cousin(x) | f20(x) != x.
-hasChild(x,y) | -hasChild(x,z) | -hasChild(y,u) | -hasChild(z,w) | x = y | x = z | x = u | x = w | z = y | y = u | y = w | z = u | z = w | w = u | cousin(u).
-hasCousin(x,y) | hasChild(f21(x,y),f23(x,y)).
-hasCousin(x,y) | hasChild(f21(x,y),f22(x,y)).
-hasCousin(x,y) | hasChild(f23(x,y),x).
-hasCousin(x,y) | hasChild(f22(x,y),y).
-hasCousin(x,y) | f21(x,y) != f23(x,y).
-hasCousin(x,y) | f21(x,y) != f22(x,y).
-hasCousin(x,y) | f21(x,y) != x.
-hasCousin(x,y) | f21(x,y) != y.
-hasCousin(x,y) | f22(x,y) != f23(x,y).
-hasCousin(x,y) | f23(x,y) != x.
-hasCousin(x,y) | f23(x,y) != y.
-hasCousin(x,y) | f22(x,y) != x.
-hasCousin(x,y) | f22(x,y) != y.
-hasCousin(x,y) | y != x.
-hasChild(x,y) | -hasChild(x,z) | -hasChild(y,u) | -hasChild(z,w) | x = y | x = z | x = u | x = w | z = y | y = u | y = w | z = u | z = w | w = u | hasCousin(u,w).
-hasCousin(x,x).
-hasCousin(x,y) | hasCousin(y,x).
-pibling(x) | hasSibling(x,f24(x)).
-pibling(x) | hasChild(f24(x),f25(x)).
-hasSibling(x,y) | -hasChild(y,z) | pibling(x).
-hasPibling(x,y) | hasParent(x,f27(x,y)).
-hasPibling(x,y) | hasSibling(f27(x,y),y).
-hasParent(x,y) | -hasSibling(y,z) | hasPibling(x,z).
-hasPibling(x,x).
-hasPibling(x,y) | -hasPibling(y,z) | -hasPibling(x,z).
-hasPibling(x,y) | -hasPibling(y,x).
-greatpibling(x) | hasChild(f28(x),f29(x)).
-greatpibling(x) | hasChild(f29(x),f30(x)).
-greatpibling(x) | hasSibling(f28(x),x).
-hasChild(x,y) | -hasChild(y,z) | -hasSibling(x,u) | greatpibling(u).
-hasGreatPibling(x,y) | hasGrandparent(x,f31(x,y)).
-hasGreatPibling(x,y) | hasSibling(f31(x,y),y).
-hasGrandparent(x,y) | -hasSibling(y,z) | hasGreatPibling(x,z).
-hasGreatPibling(x,x).
-hasGreatPibling(x,y) | -hasGreatPibling(y,z) | -hasGreatPibling(x,z).
-hasGreatPibling(x,y) | -hasGreatPibling(y,x).
-nibling(x) | hasChild(f32(x),x).
-nibling(x) | hasSibling(f32(x),f33(x)).
-hasChild(x,y) | -hasSibling(x,z) | nibling(y).
-hasNibling(x,y) | hasSibling(x,f34(x,y)).
-hasNibling(x,y) | hasChild(f34(x,y),y).
-hasSibling(x,y) | -hasChild(y,z) | hasNibling(x,z).
-hasNibling(x,x).
-hasNibling(x,y) | -hasNibling(y,z) | -hasNibling(x,z).
-hasNibling(x,y) | -hasNibling(y,x).
-hasNibling(x,y) | hasPibling(y,x).
-hasPibling(x,y) | hasNibling(y,x).
-parentinlaw(x) | hasSpouse(f35(x),f36(x)).
-parentinlaw(x) | hasParent(f36(x),x).
-parentinlaw(x) | f36(x) != f35(x).
-hasSpouse(x,y) | -hasParent(y,z) | y = x | parentinlaw(z).
-hasParentInLaw(x,y) | hasSpouse(x,f37(x,y)).
-hasParentInLaw(x,y) | hasParent(f37(x,y),y).
-hasParentInLaw(x,y) | y != x.
-hasParentInLaw(x,y) | -hasParent(x,y).
-hasSpouse(x,y) | -hasParent(y,z) | z = x | hasParent(x,z) | hasParentInLaw(x,z).
-hasParentInLaw(x,x).
-hasParentInLaw(x,y) | -hasParentInLaw(y,z) | -hasParentInLaw(x,z).
-hasParentInLaw(x,y) | -hasParentInLaw(y,x).
-siblinginlaw(x) | hasSpouse(f38(x),f39(x)).
-siblinginlaw(x) | hasSibling(f39(x),x).
-hasSpouse(x,y) | -hasSibling(y,z) | siblinginlaw(z).
-hasSiblingInLaw(x,y) | hasSpouse(x,f40(x,y)).
-hasSiblingInLaw(x,y) | hasSibling(f40(x,y),y).
-hasSpouse(x,y) | -hasSibling(y,z) | hasSiblingInLaw(x,z).
-hasSiblingInLaw(x,x).
-hasSiblingInLaw(x,y) | -hasSiblingInLaw(y,z) | -hasSiblingInLaw(x,z).
-hasSiblingInLaw(x,y) | -hasSiblingInLaw(y,x).
-halfsibling(x) | hasChild(f41(x),x).
-halfsibling(x) | hasChild(f42(x),f43(x)).
-halfsibling(x) | -hasChild(f41(x),f43(x)).
-halfsibling(x) | -hasChild(f42(x),x).
-halfsibling(x) | hasSpouse(f41(x),f42(x)).
-halfsibling(x) | f43(x) != x.
-halfsibling(x) | f41(x) != f43(x).
-halfsibling(x) | f41(x) != f42(x).
-halfsibling(x) | f41(x) != x.
-halfsibling(x) | f42(x) != x.
-hasChild(x,y) | -hasChild(z,u) | hasChild(x,u) | hasChild(z,y) | -hasSpouse(x,z) | u = y | x = u | x = z | x = y | z = y | halfsibling(y).
-hasHalfSibling(x,y) | hasParent(x,f44(x,y)).
-hasHalfSibling(x,y) | hasParent(f45(x,y),y).
-hasHalfSibling(x,y) | hasSpouse(f44(x,y),y).
-hasHalfSibling(x,y) | -hasParent(x,y).
-hasHalfSibling(x,y) | -hasParent(f45(x,y),f44(x,y)).
-hasParent(x,y) | -hasParent(z,u) | -hasSpouse(y,u) | hasParent(x,u) | hasParent(z,y) | hasHalfSibling(x,u).
-hasHalfSibling(x,x).
-hasHalfSibling(x,y) | -hasHalfSibling(y,z) | -hasHalfSibling(x,z).
-hasHalfSibling(x,y) | hasHalfSibling(y,x).
-stepchild(x) | hasParent(x,f46(x)).
-stepchild(x) | hasSpouse(f46(x),f47(x)).
-stepchild(x) | -hasParent(x,f47(x)).
-hasParent(x,y) | -hasSpouse(y,z) | hasParent(x,z) | stepchild(x).
-hasStepChild(x,y) | hasParent(x,f48(x,y)).
-hasStepChild(x,y) | -hasParent(x,y).
-hasStepChild(x,y) | hasSpouse(f48(x,y),y).
-hasStepChild(x,y) | y != x.
-hasParent(x,y) | hasParent(x,z) | -hasSpouse(y,z) | z = x | hasStepChild(x,z).
-hasStepChild(x,x).
-hasStepChild(x,y) | -hasStepChild(y,z) | -hasStepChild(x,z).
-hasStepChild(x,y) | -hasStepChild(y,x).
-hasStepParent(x,y) | hasStepChild(y,x).
-hasStepChild(x,y) | hasStepParent(y,x).
-ancestorOf(x,x).
-ancestorOf(x,y) | -ancesorOf(y,x).
-ancestorOf(x,y) | -ancestor(y,z) | ancestorOf(x,z).
-hasChild(x,y) | -ancestorOf(z,y) | x = z | ancestorOf(z,x).
-ancestorOf(x,y) | hasChild(y,f50(x,y)).
-ancestorOf(x,y) | ancestorOf(x,f50(x,y)).
-hasChild(x,y) | ancestorOf(x,y).
-hasChild(x,y) | -ancestorOf(x,z) | -ancestorOf(z,y).
-ancestorOf(x,y) | ancestorOf(x,f51(x,y)) | hasChild(x,y).
-ancestorOf(x,y) | ancestorOf(f51(x,y),y) | hasChild(x,y).
-hasChild(x,y) | -hasChild(z,y) | z = x | -ancestorOf(u,x) | -ancestorOf(u,z).
-hasSpouse(x,y) | -ancestorOf(z,x) | z != y.
-hasSpouse(x,y) | -ancestorOf(z,x) | -ancestorOf(z,y).
hasChild(c1,c2).
hasChild(c1,c3).
c3 != c2.
hasSpouse(c4,c5).
end_of_list.

============================== end of clauses for search =============

% There are no natural numbers in the input.

============================== DOMAIN SIZE 2 =========================

=== Mace4 starting on domain size 2. ===

============================== STATISTICS ============================

For domain size 2.

Current CPU time: 0.00 seconds (total CPU time: 0.01 seconds).
Ground clauses: seen=980, kept=476.
Selections=1, assignments=1, propagations=59, current_models=0.
Rewrite_terms=9, rewrite_bools=283, indexes=1.
Rules_from_neg_clauses=5, cross_offs=5.

============================== end of statistics =====================

============================== DOMAIN SIZE 3 =========================

=== Mace4 starting on domain size 3. ===

============================== STATISTICS ============================

For domain size 3.

Current CPU time: 0.00 seconds (total CPU time: 0.02 seconds).
Ground clauses: seen=2974, kept=1240.
Selections=2, assignments=3, propagations=157, current_models=0.
Rewrite_terms=93, rewrite_bools=1093, indexes=6.
Rules_from_neg_clauses=28, cross_offs=57.

============================== end of statistics =====================

============================== DOMAIN SIZE 4 =========================

=== Mace4 starting on domain size 4. ===

============================== STATISTICS ============================

For domain size 4.

Current CPU time: 0.00 seconds (total CPU time: 0.04 seconds).
Ground clauses: seen=7548, kept=2812.
Selections=3, assignments=6, propagations=241, current_models=0.
Rewrite_terms=145, rewrite_bools=2669, indexes=6.
Rules_from_neg_clauses=42, cross_offs=143.

============================== end of statistics =====================

============================== DOMAIN SIZE 5 =========================

=== Mace4 starting on domain size 5. ===

============================== STATISTICS ============================

For domain size 5.

Current CPU time: 0.00 seconds (total CPU time: 0.09 seconds).
Ground clauses: seen=16904, kept=5954.
Selections=4, assignments=10, propagations=348, current_models=0.
Rewrite_terms=252, rewrite_bools=6211, indexes=8.
Rules_from_neg_clauses=65, cross_offs=306.

============================== end of statistics =====================

============================== DOMAIN SIZE 6 =========================

=== Mace4 starting on domain size 6. ===

============================== STATISTICS ============================

For domain size 6.

Current CPU time: 0.00 seconds (total CPU time: 0.23 seconds).
Ground clauses: seen=34348, kept=12052.
Selections=5, assignments=15, propagations=320, current_models=0.
Rewrite_terms=103, rewrite_bools=11540, indexes=8.
Rules_from_neg_clauses=21, cross_offs=252.

============================== end of statistics =====================

============================== DOMAIN SIZE 7 =========================

=== Mace4 starting on domain size 7. ===

============================== STATISTICS ============================

For domain size 7.

Current CPU time: 0.00 seconds (total CPU time: 0.56 seconds).
Ground clauses: seen=64530, kept=23356.
Selections=6, assignments=21, propagations=431, current_models=0.
Rewrite_terms=173, rewrite_bools=24308, indexes=11.
Rules_from_neg_clauses=37, cross_offs=401.

============================== end of statistics =====================

============================== DOMAIN SIZE 8 =========================

=== Mace4 starting on domain size 8. ===

============================== STATISTICS ============================

For domain size 8.

Current CPU time: 0.00 seconds (total CPU time: 1.14 seconds).
Ground clauses: seen=113684, kept=43220.
Selections=7, assignments=28, propagations=519, current_models=0.
Rewrite_terms=172, rewrite_bools=46027, indexes=13.
Rules_from_neg_clauses=34, cross_offs=518.

============================== end of statistics =====================

============================== DOMAIN SIZE 9 =========================

=== Mace4 starting on domain size 9. ===

============================== STATISTICS ============================

For domain size 9.

Current CPU time: 0.00 seconds (total CPU time: 2.12 seconds).
Ground clauses: seen=189868, kept=76342.
Selections=8, assignments=36, propagations=604, current_models=0.
Rewrite_terms=124, rewrite_bools=82474, indexes=15.
Rules_from_neg_clauses=17, cross_offs=619.

============================== end of statistics =====================

============================== DOMAIN SIZE 10 ========================

=== Mace4 starting on domain size 10. ===

============================== STATISTICS ============================

For domain size 10.

Current CPU time: 0.00 seconds (total CPU time: 3.92 seconds).
Ground clauses: seen=303204, kept=129004.
Selections=9, assignments=45, propagations=727, current_models=0.
Rewrite_terms=184, rewrite_bools=142140, indexes=17.
Rules_from_neg_clauses=27, cross_offs=835.

============================== end of statistics =====================

============================== DOMAIN SIZE 11 ========================

=== Mace4 starting on domain size 11. ===

============================== STATISTICS ============================

For domain size 11.

Current CPU time: 0.00 seconds (total CPU time: 7.26 seconds).
Ground clauses: seen=466118, kept=209312.
Selections=10, assignments=55, propagations=853, current_models=0.
Rewrite_terms=222, rewrite_bools=232060, indexes=19.
Rules_from_neg_clauses=32, cross_offs=1044.

============================== end of statistics =====================

============================== DOMAIN SIZE 12 ========================

=== Mace4 starting on domain size 12. ===

============================== STATISTICS ============================

For domain size 12.

Current CPU time: 0.00 seconds (total CPU time: 12.67 seconds).
Ground clauses: seen=693580, kept=327436.
Selections=11, assignments=66, propagations=984, current_models=0.
Rewrite_terms=234, rewrite_bools=364470, indexes=21.
Rules_from_neg_clauses=30, cross_offs=1255.

============================== end of statistics =====================

============================== DOMAIN SIZE 13 ========================

=== Mace4 starting on domain size 13. ===

============================== STATISTICS ============================

For domain size 13.

Current CPU time: 0.00 seconds (total CPU time: 20.13 seconds).
Ground clauses: seen=1003344, kept=495850.
Selections=12, assignments=78, propagations=1124, current_models=0.
Rewrite_terms=242, rewrite_bools=552511, indexes=23.
Rules_from_neg_clauses=27, cross_offs=1469.

============================== end of statistics =====================

============================== DOMAIN SIZE 14 ========================

=== Mace4 starting on domain size 14. ===

============================== STATISTICS ============================

For domain size 14.

Current CPU time: 0.00 seconds (total CPU time: 30.85 seconds).
Ground clauses: seen=1416188, kept=729572.
Selections=13, assignments=91, propagations=1276, current_models=0.
Rewrite_terms=291, rewrite_bools=811478, indexes=25.
Rules_from_neg_clauses=32, cross_offs=1775.

============================== end of statistics =====================

============================== DOMAIN SIZE 15 ========================

=== Mace4 starting on domain size 15. ===

============================== STATISTICS ============================

For domain size 15.

Current CPU time: 0.00 seconds (total CPU time: 47.65 seconds).
Ground clauses: seen=1956154, kept=1046404.
Selections=14, assignments=105, propagations=1443, current_models=0.
Rewrite_terms=356, rewrite_bools=1161148, indexes=27.
Rules_from_neg_clauses=42, cross_offs=2094.

============================== end of statistics =====================

============================== DOMAIN SIZE 16 ========================

=== Mace4 starting on domain size 16. ===

============================== STATISTICS ============================

For domain size 16.

Current CPU time: 0.00 seconds (total CPU time: 72.03 seconds).
Ground clauses: seen=2650788, kept=1467172.
Selections=15, assignments=120, propagations=1605, current_models=0.
Rewrite_terms=366, rewrite_bools=1624205, indexes=29.
Rules_from_neg_clauses=37, cross_offs=2384.

============================== end of statistics =====================

============================== DOMAIN SIZE 17 ========================

=== Mace4 starting on domain size 17. ===

============================== STATISTICS ============================

For domain size 17.

Current CPU time: 0.00 seconds (total CPU time: 103.57 seconds).
Ground clauses: seen=3531380, kept=2015966.
Selections=0, assignments=0, propagations=289, current_models=0.
Rewrite_terms=0, rewrite_bools=6562, indexes=0.
Rules_from_neg_clauses=0, cross_offs=0.

============================== end of statistics =====================

------ process 30822 exit (max_megs_no) ------

User_CPU=103.57, System_CPU=0.75, Wall_clock=106.

Exiting with failure.

Process 30822 exit (max_megs_no) Mon Feb 24 16:21:05 2020
The process finished Mon Feb 24 16:21:05 2020
