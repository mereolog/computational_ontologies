/*******************************************************************************
 * Copyright (c) University of Toronto and others. All rights reserved.
 * The content of this file is licensed under the Creative Commons Attribution-
 * ShareAlike 4.0 Unported license. The legal text of this license can be
 * found at http://creativecommons.org/licenses/by-sa/4.0/legalcode.
 *
 * Contributors:
 *    Michael Gruninger - initial implementation
 *******************************************************************************/
 
(cl-text https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/psl_resources/definitions/possibly_reusable.clif

(cl-imports https://raw.githubusercontent.com/mereolog/computational_ontologies/main/TUpper/psl_resources/requires.clif)

(cl-comment 'A resource r is possibly reusable by an activity a iff for any other activity that also requires r is still possible to perform after a completes its occurrence, in some possible future situation.')

(cl-comment 'An example of a possibly reusable is a machine that requires some setup between different activities. After the first activity occurs, it is possible for the other activity, but only if the setup activity occurs first.')


(forall (r a1) 
(iff	(possibly_reusable r a1)
	(forall (a2 occ1 occ2)
		(if	(and  	(requires a1 r)
				(requires a2 r)
				(subactivity a1 a)
				(subactivity a2 a)
                        	(occurrence_of occ2 a1))
		(exists (b)
			(and	(exists (occ3)
					(and    (subactivity_occurrence occ3 b)
						(occurrence_of b a)
                                                (precedes occ2 occ3))
                                                (poss a2 occ3))))))))



)
