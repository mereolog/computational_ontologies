============================== prooftrans ============================
Prover9 (32) version Dec-2007, Dec 2007.
Process 14252 was started by sunyiya2 on RD02,
Mon Nov  8 23:17:23 2021
The command was "/cygdrive/c/Program Files (x86)/Prover9-Mace4/bin-win32/prover9".
============================== end of head ===========================

============================== end of input ==========================

============================== PROOF =================================

% -------- Comments from original proof --------
% Proof 1 at 0.00 (+ 0.01) seconds.
% Length of proof is 33.
% Level of proof is 7.
% Maximum clause weight is 13.
% Given clauses 33.

1 (all a1 all a2 (subactivity(a1,a2) -> activity(a1) & activity(a2))) # label(non_clause).  [assumption].
2 (all a (activity(a) -> subactivity(a,a))) # label(non_clause).  [assumption].
10 (all a (atomic(a) -> activity(a))) # label(non_clause).  [assumption].
14 (all x (atomic(x) -> (exists y (disjoint_atomic(x,y) & ((all z disjoint_atomic(x,z)) -> atomic_subactivity(z,y)) & ((all z disjoint_atomic(z,y)) -> atomic_subactivity(z,x)))))) # label(non_clause).  [assumption].
15 (all a (generator(a) -> atomic(a))) # label(non_clause).  [assumption].
16 (all x all y (disjoint_atomic(x,y) <-> atomic(x) & atomic(y) & -((exists z subactivity(z,x)) & subactivity(z,y)))) # label(non_clause).  [assumption].
17 (all a1 all a2 (generator_subactivity(a1,a2) <-> generator(a1) & generator(a2) & sub_activity(a1,a2))) # label(non_clause).  [assumption].
18 (all a1 all a2 (generator_subactivity(a1,a2) & generator_subactivity(a2,a1) -> a1 = a2)) # label(non_clause) # label(goal).  [goal].
19 -activity(x) | subactivity(x,x).  [clausify(2)].
20 -subactivity(x,y) | activity(x).  [clausify(1)].
22 -atomic(x) | activity(x).  [clausify(10)].
24 -atomic(x) | disjoint_atomic(x,f3(y,x)).  [clausify(14)].
26 -disjoint_atomic(x,y) | -subactivity(z,x) | -subactivity(u,y).  [clausify(16)].
28 disjoint_atomic(x,y) | -atomic(x) | -atomic(y) | subactivity(z,y).  [clausify(16)].
30 -generator_subactivity(x,y) | generator(x).  [clausify(17)].
31 -generator_subactivity(x,y) | generator(y).  [clausify(17)].
33 generator_subactivity(c1,c2).  [deny(18)].
35 generator(c1).  [resolve(33,a,30,a)].
36 -generator(x) | atomic(x).  [clausify(15)].
37 generator(c2).  [resolve(33,a,31,a)].
59 subactivity(x,x) | -subactivity(x,y).  [resolve(19,a,20,b)].
61 -atomic(x) | subactivity(x,x).  [resolve(22,b,19,a)].
63 -subactivity(x,y) | -subactivity(z,f3(u,y)) | -atomic(y).  [resolve(26,a,24,b)].
65 -atomic(x) | -atomic(y) | subactivity(z,y) | -subactivity(u,x) | -subactivity(w,y).  [resolve(28,a,26,a)].
66 atomic(c1).  [resolve(35,a,36,a)].
67 atomic(c2).  [resolve(37,a,36,a)].
73 -atomic(x) | subactivity(y,x) | -subactivity(z,x).  [factor(65,d,e),merge(b)].
82 subactivity(c1,c1).  [resolve(66,a,61,a)].
87 subactivity(c2,c2).  [resolve(67,a,61,a)].
93 subactivity(x,c1).  [resolve(82,a,73,c),unit_del(a,66)].
96 -subactivity(x,f3(y,c2)).  [resolve(87,a,63,a),unit_del(b,67)].
99 subactivity(x,x).  [resolve(93,a,59,b)].
100 $F.  [resolve(99,a,96,a)].

============================== end of proof ==========================
