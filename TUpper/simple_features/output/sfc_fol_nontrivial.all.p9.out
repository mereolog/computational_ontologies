============================== Prover9 ===============================
Prover9 (32) version Oct-2007, Oct 2007.
Process 6472 was started by torsten on LAPTOP-UF9R3IH7,
Sun Apr 25 16:29:16 2021
The command was "/cygdrive/c/Users/torsten/macleod/prover9 -t600 -f C:\Users\torsten\GitHub\colore\ontologies\simple_features\conversions\sfc_fol_nontrivial.all.p9 C:\Users\torsten\GitHub\colore\ontologies".
============================== end of head ===========================

============================== INPUT =================================

% Reading from file C:\Users\torsten\GitHub\colore\ontologies\simple_features\conversions\sfc_fol_nontrivial.all.p9


formulas(sos).
(exists var1 exists var2 (lt(var1,var2) & var1 != var2)).
(exists var3 exists var4 (-lt(var3,var4) & var3 != var4)).
(exists var5 exists var6 (Covers(var5,var6) & var5 != var6)).
(exists var7 exists var8 (-Covers(var7,var8) & var7 != var8)).
(exists var9 Multipart_Curve(var9)).
(exists var10 -Multipart_Curve(var10)).
(exists var11 exists var12 (C(var11,var12) & var11 != var12)).
(exists var13 exists var14 (-C(var13,var14) & var13 != var14)).
(exists var15 exists var16 (sf_contains(var15,var16) & var15 != var16)).
(exists var17 exists var18 (-sf_contains(var17,var18) & var17 != var18)).
(exists var19 Multipart_S(var19)).
(exists var20 -Multipart_S(var20)).
(exists var21 exists var22 (Inc(var21,var22) & var21 != var22)).
(exists var23 exists var24 (-Inc(var23,var24) & var23 != var24)).
(exists var25 exists var26 (P(var25,var26) & var25 != var26)).
(exists var27 exists var28 (-P(var27,var28) & var27 != var28)).
(exists var29 ZEX(var29)).
(exists var30 -ZEX(var30)).
(exists var31 exists var32 (Cont(var31,var32) & var31 != var32)).
(exists var33 exists var34 (-Cont(var33,var34) & var33 != var34)).
(exists var35 sf_geometry(var35)).
(exists var36 -sf_geometry(var36)).
(exists var37 Curve(var37)).
(exists var38 -Curve(var38)).
(exists var39 sf_multi_polygon(var39)).
(exists var40 -sf_multi_polygon(var40)).
(exists var41 sf_multi_curve(var41)).
(exists var42 -sf_multi_curve(var42)).
(exists var43 sf_multi_line_string(var43)).
(exists var44 -sf_multi_line_string(var44)).
(exists var45 MaxDim(var45)).
(exists var46 -MaxDim(var46)).
(exists var47 Min(var47)).
(exists var48 -Min(var48)).
(exists var49 sf_curve(var49)).
(exists var50 -sf_curve(var50)).
(exists var51 exists var52 (geq(var51,var52) & var51 != var52)).
(exists var53 exists var54 (-geq(var53,var54) & var53 != var54)).
(exists var55 sf_polygon(var55)).
(exists var56 -sf_polygon(var56)).
(exists var57 sf_geometry_collection(var57)).
(exists var58 -sf_geometry_collection(var58)).
(exists var59 Point(var59)).
(exists var60 -Point(var60)).
(exists var61 Simple_ArealRegion(var61)).
(exists var62 -Simple_ArealRegion(var62)).
(exists var63 Closed(var63)).
(exists var64 -Closed(var64)).
(exists var65 exists var66 (sf_intersects(var65,var66) & var65 != var66)).
(exists var67 exists var68 (-sf_intersects(var67,var68) & var67 != var68)).
(exists var69 PointRegion(var69)).
(exists var70 -PointRegion(var70)).
(exists var71 exists var72 (sf_relate(var71,var72) & var71 != var72)).
(exists var73 exists var74 (-sf_relate(var73,var74) & var73 != var74)).
(exists var75 Multipart_ArealRegion(var75)).
(exists var76 -Multipart_ArealRegion(var76)).
(exists var77 exists var78 (sf_crosses(var77,var78) & var77 != var78)).
(exists var79 exists var80 (-sf_crosses(var79,var80) & var79 != var80)).
(exists var81 exists var82 (sf_touches(var81,var82) & var81 != var82)).
(exists var83 exists var84 (-sf_touches(var83,var84) & var83 != var84)).
(exists var85 exists var86 (gt(var85,var86) & var85 != var86)).
(exists var87 exists var88 (-gt(var87,var88) & var87 != var88)).
(exists var89 Branched_S(var89)).
(exists var90 -Branched_S(var90)).
(exists var91 sf_surface(var91)).
(exists var92 -sf_surface(var92)).
(exists var93 sf_polyhedral_surface(var93)).
(exists var94 -sf_polyhedral_surface(var94)).
(exists var95 Simple_S(var95)).
(exists var96 -Simple_S(var96)).
(exists var97 sf_linear_ring(var97)).
(exists var98 -sf_linear_ring(var98)).
(exists var99 exists var100 (BCont(var99,var100) & var99 != var100)).
(exists var101 exists var102 (-BCont(var101,var102) & var101 != var102)).
(exists var103 exists var104 (EqDim(var103,var104) & var103 != var104)).
(exists var105 exists var106 (-EqDim(var105,var106) & var105 != var106)).
(exists var107 exists var108 (sf_disjoint(var107,var108) & var107 != var108)).
(exists var109 exists var110 (-sf_disjoint(var109,var110) & var109 != var110)).
(exists var111 sf_tin(var111)).
(exists var112 -sf_tin(var112)).
(exists var113 exists var114 (leq(var113,var114) & var113 != var114)).
(exists var115 exists var116 (-leq(var115,var116) & var115 != var116)).
(exists var117 sf_line_string(var117)).
(exists var118 -sf_line_string(var118)).
(exists var119 ArealRegion(var119)).
(exists var120 -ArealRegion(var120)).
(exists var121 sf_triangle(var121)).
(exists var122 -sf_triangle(var122)).
(exists var123 sf_line(var123)).
(exists var124 -sf_line(var124)).
(exists var125 sf_point(var125)).
(exists var126 -sf_point(var126)).
(exists var127 exists var128 (sf_overlaps(var127,var128) & var127 != var128)).
(exists var129 exists var130 (-sf_overlaps(var129,var130) & var129 != var130)).
(exists var131 sf_multi_surface(var131)).
(exists var132 -sf_multi_surface(var132)).
(exists var133 exists var134 (sf_equals(var133,var134) & var133 != var134)).
(exists var135 exists var136 (-sf_equals(var135,var136) & var135 != var136)).
(exists var137 S(var137)).
(exists var138 -S(var138)).
(exists var139 Connected_S(var139)).
(exists var140 -Connected_S(var140)).
(exists var141 exists var142 (SC(var141,var142) & var141 != var142)).
(exists var143 exists var144 (-SC(var143,var144) & var143 != var144)).
(exists var145 Max(var145)).
(exists var146 -Max(var146)).
(exists var147 exists var148 (sf_within(var147,var148) & var147 != var148)).
(exists var149 exists var150 (-sf_within(var149,var150) & var149 != var150)).
(exists var151 exists var152 (PP(var151,var152) & var151 != var152)).
(exists var153 exists var154 (-PP(var153,var154) & var153 != var154)).
(exists var155 MinDim(var155)).
(exists var156 -MinDim(var156)).
(exists var157 sf_multi_point(var157)).
(exists var158 -sf_multi_point(var158)).
(exists var159 exists var160 (PO(var159,var160) & var159 != var160)).
(exists var161 exists var162 (-PO(var161,var162) & var161 != var162)).
(all x all y (sf_geometry(x) <-> S(x))).
(all x all y (sf_relate(x,y) <-> sf_intersects(x,y) | sf_disjoint(x,y))).
(all x all y (SC(x,y) -> C(x,y))).
(all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))).
(all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))).
(all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))).
(all x -SC(x,x)).
(all x all y (SC(x,y) -> SC(y,x))).
(all x all y (SC(x,y) -> (exists z (lt(z,x) & lt(z,y) & Cont(z,x) & Cont(z,y))))).
(all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> leq(z,x) & -EqDim(z,x) & leq(z,y) & -EqDim(z,y))))).
(all x all y (EqDim(x,y) <-> leq(x,y) & leq(y,x))).
(all x all y (leq(x,y) -> S(x))).
(all x all y (leq(x,y) -> S(y))).
(all x (ZEX(x) -> S(x))).
(all x (S(x) -> leq(x,x))).
(all x all y all z (leq(x,y) & leq(y,z) -> leq(x,z))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (ZEX(x) & S(y) -> leq(x,y))).
(all x all y (Cont(x,y) -> leq(x,y))).
(exists x MinDim(x)).
(all x (MaxDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) -> leq(y,x))))).
(all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & -ZEX(y) -> leq(x,y))))).
(all x (S(x) & -ZEX(x) <-> Cont(x,x))).
(all x all y (Cont(x,y) & Cont(y,x) -> x = y)).
(all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))).
(all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))).
(all x all y (ZEX(x) & ZEX(y) -> x = y)).
(all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))).
(all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))).
(all x -Inc(x,x)).
(all x all y (Inc(x,y) -> Inc(y,x))).
(all x all y (EqDim(x,y) -> -Inc(x,y))).
(all x all y (Inc(x,y) -> lt(x,y) | lt(y,x))).
(all x all y (Cont(x,y) & lt(x,y) -> Inc(x,y))).
(all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))).
(all x all y (Inc(x,y) <-> (exists z (leq(z,x) & -EqDim(z,x) & Cont(z,x) & P(z,y))) | (exists z (leq(z,y) & -EqDim(z,y) & Cont(z,y) & P(z,x))))).
(all x (S(x) & -ZEX(x) -> PO(x,x))).
(all x all y (PO(x,y) -> PO(y,x))).
(all x all y (PO(x,y) -> EqDim(x,y))).
(all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))).
(all x (Max(x) <-> S(x) & -ZEX(x) & (all y -PP(x,y)))).
(all x (Min(x) <-> S(x) & -ZEX(x) & (all y -PP(y,x)))).
(all x all y (PP(x,y) <-> P(x,y) & x != y)).
(all x all y (BCont(x,y) -> Cont(x,y) & -EqDim(x,y))).
(all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))).
(all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))).
(all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))).
(all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))).
(all x all y (Covers(x,y) <-> lt(y,x) & (all z (S(z) -> -(lt(y,z) & lt(z,x)))))).
(all x all y (gt(x,y) <-> lt(y,x))).
(all x all y (geq(x,y) <-> leq(y,x))).
(all x all y (lt(x,y) <-> leq(x,y) & -EqDim(x,y))).
(all x (Closed(x) <-> (all y -BCont(y,x)))).
(all x all y (sf_contains(x,y) <-> sf_geometry(x) & sf_geometry(y) & Cont(x,y))).
(all x (sf_multi_polygon(x) -> sf_multi_surface(x))).
(all x (sf_geometry_collection(x) -> -sf_point(x) & -sf_curve(x) & -sf_surface(x))).
(all x (sf_geometry_collection(x) <-> sf_multi_point(x) | sf_multi_curve(x) | sf_multi_surface(x))).
(all x (sf_point(x) -> -sf_curve(x) & -sf_surface(x) & -sf_geometry_collection(x))).
(all x (sf_geometry(x) <-> sf_point(x) | sf_curve(x) | sf_surface(x) | sf_geometry_collection(x))).
(all x (sf_surface(x) -> -sf_point(x) & -sf_curve(x) & -sf_geometry_collection(x))).
(all x (sf_curve(x) -> -sf_point(x) & -sf_surface(x) & -sf_geometry_collection(x))).
(all x (sf_multi_line_string(x) -> sf_multi_curve(x))).
(all x (sf_triangle(x) <-> sf_polygon(x) & sf_tin(x))).
(all x (sf_tin(x) -> sf_polyhedral_surface(x))).
(all x (sf_polyhedral_surface(x) -> sf_surface(x))).
(all x (sf_polygon(x) -> sf_polyhedral_surface(x))).
(all x (sf_linear_ring(x) -> sf_line_string(x))).
(all x (sf_line_string(x) -> sf_curve(x))).
(all x (sf_line(x) -> sf_line_string(x))).
(all x all y (sf_overlaps(x,y) <-> sf_geometry(x) & sf_geometry(y) & PO(x,y) & -P(x,y) & -P(y,x))).
(all x all y (sf_within(y,x) <-> sf_contains(x,y))).
(all x all y (sf_contains(x,y) <-> sf_geometry(x) & sf_geometry(y) & Cont(x,y))).
(all x all y (sf_crosses(x,y) <-> sf_geometry(x) & sf_geometry(y) & (Inc(x,y) & -Cont(x,y) & -Cont(y,x) | (all z (Cont(z,x) & Cont(z,y) -> lt(z,x) & lt(z,y) & -BCont(z,x) & -BCont(z,y))) | SC(x,y) & Curve(x) & Curve(y)))).
(all x (Curve(x) -> -ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))))).
(all x (-ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))) & (exists z MinDim(z)) -> Curve(x))).
(all x all y (sf_touches(x,y) <-> sf_geometry(x) & sf_geometry(y) & (SC(x,y) | BCont(x,y) | BCont(y,x)))).
(all x all y (sf_equals(x,y) <-> sf_contains(x,y) & sf_within(x,y))).
(all x all y (sf_intersects(x,y) <-> sf_geometry(x) & sf_geometry(y) & -sf_disjoint(x,y))).
(all x all y (sf_disjoint(x,y) -> sf_geometry(x) & sf_geometry(y) & -C(x,y))).
(all x (sf_geometry_collection(x) -> Multipart_S(x) | Branched_S(x))).
(all x (sf_multi_polygon(x) <-> sf_multi_surface(x) & (all y (P(y,x) & Min(y) -> sf_polygon(y))))).
(all x (sf_polygon(x) -> Simple_ArealRegion(x))).
(all x (sf_polygon(x) -> (exists y exists z (sf_linear_ring(y) & BCont(y,x) & boundary(z) = y & P(x,z))))).
(all x (sf_polygon(x) -> (all v (BCont(v,x) -> (exists w (P(v,w) & BCont(w,x) & sf_linear_ring(w))))))).
(all x all y (Cont(x,boundary(y)) <-> BCont(x,y))).
(all x (Simple_ArealRegion(x) <-> ArealRegion(x) & Simple_S(x))).
(all x (Simple_S(x) <-> Connected_S(x) & -Branched_S(x))).
(all x (Branched_S(x) <-> Connected_S(x) & (exists p exists q exists r exists s (PP(p,x) & PP(q,x) & PP(r,x) & -PO(p,q) & -PO(p,r) & -PO(q,r) & Covers(p,s) & Covers(q,s) & Covers(r,s) & Cont(s,p) & Cont(s,q) & Cont(s,r))))).
(all x (Connected_S(x) <-> S(x) & (all y (PP(y,x) -> SC(y,difference(x,y)))))).
(all x all y (S(x) & S(y) & -C(x,y) <-> ZEX(intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))).
(all x all y all z (Cont(z,x) & Cont(z,y) -> leq(z,intersection(x,y)))).
(all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))).
(all x all y (S(x) & S(y) & -ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))).
(all x all y (lt(y,x) -> x = difference(x,y))).
(all x all y all z (leq(x,y) & Cont(z,x) & lt(intersection(z,y),z) -> Cont(z,difference(x,y)))).
(all x all y all z (leq(x,y) & Cont(z,difference(x,y)) -> Cont(z,x))).
(all x all y all z (leq(x,y) & P(z,difference(x,y)) -> lt(intersection(z,y),z))).
(all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))).
(all x (ArealRegion(x) <-> (all y (Curve(y) -> Covers(x,y))))).
(all x (sf_multi_surface(x) -> Multipart_ArealRegion(x))).
(all x (Multipart_ArealRegion(x) <-> ArealRegion(x) & Multipart_S(x))).
(all x (Multipart_S(x) <-> S(x) & -Connected_S(x))).
(all x (sf_multi_line_string(x) <-> sf_multi_curve(x) & (all y (P(y,x) & Min(y) -> sf_line_string(y))))).
(all x (sf_multi_curve(x) -> Multipart_Curve(x))).
(all x (Multipart_Curve(x) <-> Curve(x) & Multipart_S(x))).
(all x (sf_multi_point(x) <-> PointRegion(x) & -Point(x))).
(all x (Point(x) <-> MinDim(x) & (all y (Cont(y,x) -> y = x)))).
(all x (PointRegion(x) <-> MinDim(x))).
end_of_list.

% Reading from file C:\Users\torsten\GitHub\colore\ontologies


============================== end of input ==========================

% From the command line: assign(max_seconds, 600).

============================== PROCESS NON-CLAUSAL FORMULAS ==========

% Formulas that are not ordinary clauses:
1 (exists var1 exists var2 (lt(var1,var2) & var1 != var2)) # label(non_clause).  [assumption].
2 (exists var3 exists var4 (-lt(var3,var4) & var3 != var4)) # label(non_clause).  [assumption].
3 (exists var5 exists var6 (Covers(var5,var6) & var5 != var6)) # label(non_clause).  [assumption].
4 (exists var7 exists var8 (-Covers(var7,var8) & var7 != var8)) # label(non_clause).  [assumption].
5 (exists var9 Multipart_Curve(var9)) # label(non_clause).  [assumption].
6 (exists var10 -Multipart_Curve(var10)) # label(non_clause).  [assumption].
7 (exists var11 exists var12 (C(var11,var12) & var11 != var12)) # label(non_clause).  [assumption].
8 (exists var13 exists var14 (-C(var13,var14) & var13 != var14)) # label(non_clause).  [assumption].
9 (exists var15 exists var16 (sf_contains(var15,var16) & var15 != var16)) # label(non_clause).  [assumption].
10 (exists var17 exists var18 (-sf_contains(var17,var18) & var17 != var18)) # label(non_clause).  [assumption].
11 (exists var19 Multipart_S(var19)) # label(non_clause).  [assumption].
12 (exists var20 -Multipart_S(var20)) # label(non_clause).  [assumption].
13 (exists var21 exists var22 (Inc(var21,var22) & var21 != var22)) # label(non_clause).  [assumption].
14 (exists var23 exists var24 (-Inc(var23,var24) & var23 != var24)) # label(non_clause).  [assumption].
15 (exists var25 exists var26 (P(var25,var26) & var25 != var26)) # label(non_clause).  [assumption].
16 (exists var27 exists var28 (-P(var27,var28) & var27 != var28)) # label(non_clause).  [assumption].
17 (exists var29 ZEX(var29)) # label(non_clause).  [assumption].
18 (exists var30 -ZEX(var30)) # label(non_clause).  [assumption].
19 (exists var31 exists var32 (Cont(var31,var32) & var31 != var32)) # label(non_clause).  [assumption].
20 (exists var33 exists var34 (-Cont(var33,var34) & var33 != var34)) # label(non_clause).  [assumption].
21 (exists var35 sf_geometry(var35)) # label(non_clause).  [assumption].
22 (exists var36 -sf_geometry(var36)) # label(non_clause).  [assumption].
23 (exists var37 Curve(var37)) # label(non_clause).  [assumption].
24 (exists var38 -Curve(var38)) # label(non_clause).  [assumption].
25 (exists var39 sf_multi_polygon(var39)) # label(non_clause).  [assumption].
26 (exists var40 -sf_multi_polygon(var40)) # label(non_clause).  [assumption].
27 (exists var41 sf_multi_curve(var41)) # label(non_clause).  [assumption].
28 (exists var42 -sf_multi_curve(var42)) # label(non_clause).  [assumption].
29 (exists var43 sf_multi_line_string(var43)) # label(non_clause).  [assumption].
30 (exists var44 -sf_multi_line_string(var44)) # label(non_clause).  [assumption].
31 (exists var45 MaxDim(var45)) # label(non_clause).  [assumption].
32 (exists var46 -MaxDim(var46)) # label(non_clause).  [assumption].
33 (exists var47 Min(var47)) # label(non_clause).  [assumption].
34 (exists var48 -Min(var48)) # label(non_clause).  [assumption].
35 (exists var49 sf_curve(var49)) # label(non_clause).  [assumption].
36 (exists var50 -sf_curve(var50)) # label(non_clause).  [assumption].
37 (exists var51 exists var52 (geq(var51,var52) & var51 != var52)) # label(non_clause).  [assumption].
38 (exists var53 exists var54 (-geq(var53,var54) & var53 != var54)) # label(non_clause).  [assumption].
39 (exists var55 sf_polygon(var55)) # label(non_clause).  [assumption].
40 (exists var56 -sf_polygon(var56)) # label(non_clause).  [assumption].
41 (exists var57 sf_geometry_collection(var57)) # label(non_clause).  [assumption].
42 (exists var58 -sf_geometry_collection(var58)) # label(non_clause).  [assumption].
43 (exists var59 Point(var59)) # label(non_clause).  [assumption].
44 (exists var60 -Point(var60)) # label(non_clause).  [assumption].
45 (exists var61 Simple_ArealRegion(var61)) # label(non_clause).  [assumption].
46 (exists var62 -Simple_ArealRegion(var62)) # label(non_clause).  [assumption].
47 (exists var63 Closed(var63)) # label(non_clause).  [assumption].
48 (exists var64 -Closed(var64)) # label(non_clause).  [assumption].
49 (exists var65 exists var66 (sf_intersects(var65,var66) & var65 != var66)) # label(non_clause).  [assumption].
50 (exists var67 exists var68 (-sf_intersects(var67,var68) & var67 != var68)) # label(non_clause).  [assumption].
51 (exists var69 PointRegion(var69)) # label(non_clause).  [assumption].
52 (exists var70 -PointRegion(var70)) # label(non_clause).  [assumption].
53 (exists var71 exists var72 (sf_relate(var71,var72) & var71 != var72)) # label(non_clause).  [assumption].
54 (exists var73 exists var74 (-sf_relate(var73,var74) & var73 != var74)) # label(non_clause).  [assumption].
55 (exists var75 Multipart_ArealRegion(var75)) # label(non_clause).  [assumption].
56 (exists var76 -Multipart_ArealRegion(var76)) # label(non_clause).  [assumption].
57 (exists var77 exists var78 (sf_crosses(var77,var78) & var77 != var78)) # label(non_clause).  [assumption].
58 (exists var79 exists var80 (-sf_crosses(var79,var80) & var79 != var80)) # label(non_clause).  [assumption].
59 (exists var81 exists var82 (sf_touches(var81,var82) & var81 != var82)) # label(non_clause).  [assumption].
60 (exists var83 exists var84 (-sf_touches(var83,var84) & var83 != var84)) # label(non_clause).  [assumption].
61 (exists var85 exists var86 (gt(var85,var86) & var85 != var86)) # label(non_clause).  [assumption].
62 (exists var87 exists var88 (-gt(var87,var88) & var87 != var88)) # label(non_clause).  [assumption].
63 (exists var89 Branched_S(var89)) # label(non_clause).  [assumption].
64 (exists var90 -Branched_S(var90)) # label(non_clause).  [assumption].
65 (exists var91 sf_surface(var91)) # label(non_clause).  [assumption].
66 (exists var92 -sf_surface(var92)) # label(non_clause).  [assumption].
67 (exists var93 sf_polyhedral_surface(var93)) # label(non_clause).  [assumption].
68 (exists var94 -sf_polyhedral_surface(var94)) # label(non_clause).  [assumption].
69 (exists var95 Simple_S(var95)) # label(non_clause).  [assumption].
70 (exists var96 -Simple_S(var96)) # label(non_clause).  [assumption].
71 (exists var97 sf_linear_ring(var97)) # label(non_clause).  [assumption].
72 (exists var98 -sf_linear_ring(var98)) # label(non_clause).  [assumption].
73 (exists var99 exists var100 (BCont(var99,var100) & var99 != var100)) # label(non_clause).  [assumption].
74 (exists var101 exists var102 (-BCont(var101,var102) & var101 != var102)) # label(non_clause).  [assumption].
75 (exists var103 exists var104 (EqDim(var103,var104) & var103 != var104)) # label(non_clause).  [assumption].
76 (exists var105 exists var106 (-EqDim(var105,var106) & var105 != var106)) # label(non_clause).  [assumption].
77 (exists var107 exists var108 (sf_disjoint(var107,var108) & var107 != var108)) # label(non_clause).  [assumption].
78 (exists var109 exists var110 (-sf_disjoint(var109,var110) & var109 != var110)) # label(non_clause).  [assumption].
79 (exists var111 sf_tin(var111)) # label(non_clause).  [assumption].
80 (exists var112 -sf_tin(var112)) # label(non_clause).  [assumption].
81 (exists var113 exists var114 (leq(var113,var114) & var113 != var114)) # label(non_clause).  [assumption].
82 (exists var115 exists var116 (-leq(var115,var116) & var115 != var116)) # label(non_clause).  [assumption].
83 (exists var117 sf_line_string(var117)) # label(non_clause).  [assumption].
84 (exists var118 -sf_line_string(var118)) # label(non_clause).  [assumption].
85 (exists var119 ArealRegion(var119)) # label(non_clause).  [assumption].
86 (exists var120 -ArealRegion(var120)) # label(non_clause).  [assumption].
87 (exists var121 sf_triangle(var121)) # label(non_clause).  [assumption].
88 (exists var122 -sf_triangle(var122)) # label(non_clause).  [assumption].
89 (exists var123 sf_line(var123)) # label(non_clause).  [assumption].
90 (exists var124 -sf_line(var124)) # label(non_clause).  [assumption].
91 (exists var125 sf_point(var125)) # label(non_clause).  [assumption].
92 (exists var126 -sf_point(var126)) # label(non_clause).  [assumption].
93 (exists var127 exists var128 (sf_overlaps(var127,var128) & var127 != var128)) # label(non_clause).  [assumption].
94 (exists var129 exists var130 (-sf_overlaps(var129,var130) & var129 != var130)) # label(non_clause).  [assumption].
95 (exists var131 sf_multi_surface(var131)) # label(non_clause).  [assumption].
96 (exists var132 -sf_multi_surface(var132)) # label(non_clause).  [assumption].
97 (exists var133 exists var134 (sf_equals(var133,var134) & var133 != var134)) # label(non_clause).  [assumption].
98 (exists var135 exists var136 (-sf_equals(var135,var136) & var135 != var136)) # label(non_clause).  [assumption].
99 (exists var137 S(var137)) # label(non_clause).  [assumption].
100 (exists var138 -S(var138)) # label(non_clause).  [assumption].
101 (exists var139 Connected_S(var139)) # label(non_clause).  [assumption].
102 (exists var140 -Connected_S(var140)) # label(non_clause).  [assumption].
103 (exists var141 exists var142 (SC(var141,var142) & var141 != var142)) # label(non_clause).  [assumption].
104 (exists var143 exists var144 (-SC(var143,var144) & var143 != var144)) # label(non_clause).  [assumption].
105 (exists var145 Max(var145)) # label(non_clause).  [assumption].
106 (exists var146 -Max(var146)) # label(non_clause).  [assumption].
107 (exists var147 exists var148 (sf_within(var147,var148) & var147 != var148)) # label(non_clause).  [assumption].
108 (exists var149 exists var150 (-sf_within(var149,var150) & var149 != var150)) # label(non_clause).  [assumption].
109 (exists var151 exists var152 (PP(var151,var152) & var151 != var152)) # label(non_clause).  [assumption].
110 (exists var153 exists var154 (-PP(var153,var154) & var153 != var154)) # label(non_clause).  [assumption].
111 (exists var155 MinDim(var155)) # label(non_clause).  [assumption].
112 (exists var156 -MinDim(var156)) # label(non_clause).  [assumption].
113 (exists var157 sf_multi_point(var157)) # label(non_clause).  [assumption].
114 (exists var158 -sf_multi_point(var158)) # label(non_clause).  [assumption].
115 (exists var159 exists var160 (PO(var159,var160) & var159 != var160)) # label(non_clause).  [assumption].
116 (exists var161 exists var162 (-PO(var161,var162) & var161 != var162)) # label(non_clause).  [assumption].
117 (all x all y (sf_geometry(x) <-> S(x))) # label(non_clause).  [assumption].
118 (all x all y (sf_relate(x,y) <-> sf_intersects(x,y) | sf_disjoint(x,y))) # label(non_clause).  [assumption].
119 (all x all y (SC(x,y) -> C(x,y))) # label(non_clause).  [assumption].
120 (all x all y (SC(x,y) -> -(exists z (Cont(z,x) & P(z,y))))) # label(non_clause).  [assumption].
121 (all x all y (SC(x,y) -> -(exists z (P(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
122 (all x all y (C(x,y) & (all z (-Cont(z,x) | -Cont(z,y) | -P(z,x) & -P(z,y))) -> SC(x,y))) # label(non_clause).  [assumption].
123 (all x -SC(x,x)) # label(non_clause).  [assumption].
124 (all x all y (SC(x,y) -> SC(y,x))) # label(non_clause).  [assumption].
125 (all x all y (SC(x,y) -> (exists z (lt(z,x) & lt(z,y) & Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
126 (all x all y (SC(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))) & (all z (Cont(z,x) & Cont(z,y) -> leq(z,x) & -EqDim(z,x) & leq(z,y) & -EqDim(z,y))))) # label(non_clause).  [assumption].
127 (all x all y (EqDim(x,y) <-> leq(x,y) & leq(y,x))) # label(non_clause).  [assumption].
128 (all x all y (leq(x,y) -> S(x))) # label(non_clause).  [assumption].
129 (all x all y (leq(x,y) -> S(y))) # label(non_clause).  [assumption].
130 (all x (ZEX(x) -> S(x))) # label(non_clause).  [assumption].
131 (all x (S(x) -> leq(x,x))) # label(non_clause).  [assumption].
132 (all x all y all z (leq(x,y) & leq(y,z) -> leq(x,z))) # label(non_clause).  [assumption].
133 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
134 (all x all y (ZEX(x) & S(y) -> leq(x,y))) # label(non_clause).  [assumption].
135 (all x all y (Cont(x,y) -> leq(x,y))) # label(non_clause).  [assumption].
136 (exists x MinDim(x)) # label(non_clause).  [assumption].
137 (all x (MaxDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) -> leq(y,x))))) # label(non_clause).  [assumption].
138 (all x (MinDim(x) <-> S(x) & -ZEX(x) & (all y (S(y) & -ZEX(y) -> leq(x,y))))) # label(non_clause).  [assumption].
139 (all x (S(x) & -ZEX(x) <-> Cont(x,x))) # label(non_clause).  [assumption].
140 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
141 (all x all y all z (Cont(x,y) & Cont(y,z) -> Cont(x,z))) # label(non_clause).  [assumption].
142 (all x all y (ZEX(x) -> S(x) & -Cont(y,x) & -Cont(x,y))) # label(non_clause).  [assumption].
143 (all x all y (ZEX(x) & ZEX(y) -> x = y)) # label(non_clause).  [assumption].
144 (all x all y (P(x,y) <-> Cont(x,y) & EqDim(x,y))) # label(non_clause).  [assumption].
145 (all x all y (C(x,y) <-> (exists z (Cont(z,x) & Cont(z,y))))) # label(non_clause).  [assumption].
146 (all x -Inc(x,x)) # label(non_clause).  [assumption].
147 (all x all y (Inc(x,y) -> Inc(y,x))) # label(non_clause).  [assumption].
148 (all x all y (EqDim(x,y) -> -Inc(x,y))) # label(non_clause).  [assumption].
149 (all x all y (Inc(x,y) -> lt(x,y) | lt(y,x))) # label(non_clause).  [assumption].
150 (all x all y (Cont(x,y) & lt(x,y) -> Inc(x,y))) # label(non_clause).  [assumption].
151 (all x all y all z (Inc(x,y) & P(y,z) -> Inc(x,z))) # label(non_clause).  [assumption].
152 (all x all y (Inc(x,y) <-> (exists z (leq(z,x) & -EqDim(z,x) & Cont(z,x) & P(z,y))) | (exists z (leq(z,y) & -EqDim(z,y) & Cont(z,y) & P(z,x))))) # label(non_clause).  [assumption].
153 (all x (S(x) & -ZEX(x) -> PO(x,x))) # label(non_clause).  [assumption].
154 (all x all y (PO(x,y) -> PO(y,x))) # label(non_clause).  [assumption].
155 (all x all y (PO(x,y) -> EqDim(x,y))) # label(non_clause).  [assumption].
156 (all x all y (PO(x,y) <-> (exists z (P(z,x) & P(z,y))))) # label(non_clause).  [assumption].
157 (all x (Max(x) <-> S(x) & -ZEX(x) & (all y -PP(x,y)))) # label(non_clause).  [assumption].
158 (all x (Min(x) <-> S(x) & -ZEX(x) & (all y -PP(y,x)))) # label(non_clause).  [assumption].
159 (all x all y (PP(x,y) <-> P(x,y) & x != y)) # label(non_clause).  [assumption].
160 (all x all y (BCont(x,y) -> Cont(x,y) & -EqDim(x,y))) # label(non_clause).  [assumption].
161 (all x all y all v all z (SC(x,y) & Min(x) & P(x,v) & Cont(y,v) & Cont(z,x) & Cont(z,y) -> BCont(z,x))) # label(non_clause).  [assumption].
162 (all x all y all z all v (SC(x,y) & P(x,v) & P(y,v) & Cont(z,x) & Cont(z,y) & Covers(v,z) -> -BCont(z,v))) # label(non_clause).  [assumption].
163 (all x all y all z (BCont(x,y) & P(y,z) & (all v all w (P(v,z) & -PO(v,y) & P(w,x) -> -Cont(w,v))) -> BCont(x,z))) # label(non_clause).  [assumption].
164 (all x all y all z (BCont(x,y) & Cont(z,x) -> BCont(z,y))) # label(non_clause).  [assumption].
165 (all x all y (Covers(x,y) <-> lt(y,x) & (all z (S(z) -> -(lt(y,z) & lt(z,x)))))) # label(non_clause).  [assumption].
166 (all x all y (gt(x,y) <-> lt(y,x))) # label(non_clause).  [assumption].
167 (all x all y (geq(x,y) <-> leq(y,x))) # label(non_clause).  [assumption].
168 (all x all y (lt(x,y) <-> leq(x,y) & -EqDim(x,y))) # label(non_clause).  [assumption].
169 (all x (Closed(x) <-> (all y -BCont(y,x)))) # label(non_clause).  [assumption].
170 (all x all y (sf_contains(x,y) <-> sf_geometry(x) & sf_geometry(y) & Cont(x,y))) # label(non_clause).  [assumption].
171 (all x (sf_multi_polygon(x) -> sf_multi_surface(x))) # label(non_clause).  [assumption].
172 (all x (sf_geometry_collection(x) -> -sf_point(x) & -sf_curve(x) & -sf_surface(x))) # label(non_clause).  [assumption].
173 (all x (sf_geometry_collection(x) <-> sf_multi_point(x) | sf_multi_curve(x) | sf_multi_surface(x))) # label(non_clause).  [assumption].
174 (all x (sf_point(x) -> -sf_curve(x) & -sf_surface(x) & -sf_geometry_collection(x))) # label(non_clause).  [assumption].
175 (all x (sf_geometry(x) <-> sf_point(x) | sf_curve(x) | sf_surface(x) | sf_geometry_collection(x))) # label(non_clause).  [assumption].
176 (all x (sf_surface(x) -> -sf_point(x) & -sf_curve(x) & -sf_geometry_collection(x))) # label(non_clause).  [assumption].
177 (all x (sf_curve(x) -> -sf_point(x) & -sf_surface(x) & -sf_geometry_collection(x))) # label(non_clause).  [assumption].
178 (all x (sf_multi_line_string(x) -> sf_multi_curve(x))) # label(non_clause).  [assumption].
179 (all x (sf_triangle(x) <-> sf_polygon(x) & sf_tin(x))) # label(non_clause).  [assumption].
180 (all x (sf_tin(x) -> sf_polyhedral_surface(x))) # label(non_clause).  [assumption].
181 (all x (sf_polyhedral_surface(x) -> sf_surface(x))) # label(non_clause).  [assumption].
182 (all x (sf_polygon(x) -> sf_polyhedral_surface(x))) # label(non_clause).  [assumption].
183 (all x (sf_linear_ring(x) -> sf_line_string(x))) # label(non_clause).  [assumption].
184 (all x (sf_line_string(x) -> sf_curve(x))) # label(non_clause).  [assumption].
185 (all x (sf_line(x) -> sf_line_string(x))) # label(non_clause).  [assumption].
186 (all x all y (sf_overlaps(x,y) <-> sf_geometry(x) & sf_geometry(y) & PO(x,y) & -P(x,y) & -P(y,x))) # label(non_clause).  [assumption].
187 (all x all y (sf_within(y,x) <-> sf_contains(x,y))) # label(non_clause).  [assumption].
188 (all x all y (sf_contains(x,y) <-> sf_geometry(x) & sf_geometry(y) & Cont(x,y))) # label(non_clause).  [assumption].
189 (all x all y (sf_crosses(x,y) <-> sf_geometry(x) & sf_geometry(y) & (Inc(x,y) & -Cont(x,y) & -Cont(y,x) | (all z (Cont(z,x) & Cont(z,y) -> lt(z,x) & lt(z,y) & -BCont(z,x) & -BCont(z,y))) | SC(x,y) & Curve(x) & Curve(y)))) # label(non_clause).  [assumption].
190 (all x (Curve(x) -> -ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))))) # label(non_clause).  [assumption].
191 (all x (-ZEX(x) & -MinDim(x) & (all y (MinDim(y) <-> Covers(x,y))) & (exists z MinDim(z)) -> Curve(x))) # label(non_clause).  [assumption].
192 (all x all y (sf_touches(x,y) <-> sf_geometry(x) & sf_geometry(y) & (SC(x,y) | BCont(x,y) | BCont(y,x)))) # label(non_clause).  [assumption].
193 (all x all y (sf_equals(x,y) <-> sf_contains(x,y) & sf_within(x,y))) # label(non_clause).  [assumption].
194 (all x all y (sf_intersects(x,y) <-> sf_geometry(x) & sf_geometry(y) & -sf_disjoint(x,y))) # label(non_clause).  [assumption].
195 (all x all y (sf_disjoint(x,y) -> sf_geometry(x) & sf_geometry(y) & -C(x,y))) # label(non_clause).  [assumption].
196 (all x (sf_geometry_collection(x) -> Multipart_S(x) | Branched_S(x))) # label(non_clause).  [assumption].
197 (all x (sf_multi_polygon(x) <-> sf_multi_surface(x) & (all y (P(y,x) & Min(y) -> sf_polygon(y))))) # label(non_clause).  [assumption].
198 (all x (sf_polygon(x) -> Simple_ArealRegion(x))) # label(non_clause).  [assumption].
199 (all x (sf_polygon(x) -> (exists y exists z (sf_linear_ring(y) & BCont(y,x) & boundary(z) = y & P(x,z))))) # label(non_clause).  [assumption].
200 (all x (sf_polygon(x) -> (all v (BCont(v,x) -> (exists w (P(v,w) & BCont(w,x) & sf_linear_ring(w))))))) # label(non_clause).  [assumption].
201 (all x all y (Cont(x,boundary(y)) <-> BCont(x,y))) # label(non_clause).  [assumption].
202 (all x (Simple_ArealRegion(x) <-> ArealRegion(x) & Simple_S(x))) # label(non_clause).  [assumption].
203 (all x (Simple_S(x) <-> Connected_S(x) & -Branched_S(x))) # label(non_clause).  [assumption].
204 (all x (Branched_S(x) <-> Connected_S(x) & (exists p exists q exists r exists s (PP(p,x) & PP(q,x) & PP(r,x) & -PO(p,q) & -PO(p,r) & -PO(q,r) & Covers(p,s) & Covers(q,s) & Covers(r,s) & Cont(s,p) & Cont(s,q) & Cont(s,r))))) # label(non_clause).  [assumption].
205 (all x (Connected_S(x) <-> S(x) & (all y (PP(y,x) -> SC(y,difference(x,y)))))) # label(non_clause).  [assumption].
206 (all x all y (S(x) & S(y) & -C(x,y) <-> ZEX(intersection(x,y)))) # label(non_clause).  [assumption].
207 (all x all y (S(x) & S(y) & -ZEX(intersection(x,y)) -> Cont(intersection(x,y),x))) # label(non_clause).  [assumption].
208 (all x all y all z (Cont(z,x) & Cont(z,y) -> leq(z,intersection(x,y)))) # label(non_clause).  [assumption].
209 (all x all y all z (Cont(z,x) & Cont(z,y) & EqDim(z,intersection(x,y)) <-> P(z,intersection(x,y)))) # label(non_clause).  [assumption].
210 (all x all y (S(x) & S(y) & -ZEX(difference(x,y)) -> EqDim(x,difference(x,y)))) # label(non_clause).  [assumption].
211 (all x all y (lt(y,x) -> x = difference(x,y))) # label(non_clause).  [assumption].
212 (all x all y all z (leq(x,y) & Cont(z,x) & lt(intersection(z,y),z) -> Cont(z,difference(x,y)))) # label(non_clause).  [assumption].
213 (all x all y all z (leq(x,y) & Cont(z,difference(x,y)) -> Cont(z,x))) # label(non_clause).  [assumption].
214 (all x all y all z (leq(x,y) & P(z,difference(x,y)) -> lt(intersection(z,y),z))) # label(non_clause).  [assumption].
215 (all x all y (ZEX(difference(x,y)) <-> ZEX(x) | Cont(x,y))) # label(non_clause).  [assumption].
216 (all x (ArealRegion(x) <-> (all y (Curve(y) -> Covers(x,y))))) # label(non_clause).  [assumption].
217 (all x (sf_multi_surface(x) -> Multipart_ArealRegion(x))) # label(non_clause).  [assumption].
218 (all x (Multipart_ArealRegion(x) <-> ArealRegion(x) & Multipart_S(x))) # label(non_clause).  [assumption].
219 (all x (Multipart_S(x) <-> S(x) & -Connected_S(x))) # label(non_clause).  [assumption].
220 (all x (sf_multi_line_string(x) <-> sf_multi_curve(x) & (all y (P(y,x) & Min(y) -> sf_line_string(y))))) # label(non_clause).  [assumption].
221 (all x (sf_multi_curve(x) -> Multipart_Curve(x))) # label(non_clause).  [assumption].
222 (all x (Multipart_Curve(x) <-> Curve(x) & Multipart_S(x))) # label(non_clause).  [assumption].
223 (all x (sf_multi_point(x) <-> PointRegion(x) & -Point(x))) # label(non_clause).  [assumption].
224 (all x (Point(x) <-> MinDim(x) & (all y (Cont(y,x) -> y = x)))) # label(non_clause).  [assumption].
225 (all x (PointRegion(x) <-> MinDim(x))) # label(non_clause).  [assumption].

============================== end of process non-clausal formulas ===

============================== PROCESS INITIAL CLAUSES ===============

% Clauses before input processing:

formulas(usable).
end_of_list.

formulas(sos).
lt(c1,c2).  [clausify(1)].
c2 != c1.  [clausify(1)].
-lt(c3,c4).  [clausify(2)].
c4 != c3.  [clausify(2)].
Covers(c5,c6).  [clausify(3)].
c6 != c5.  [clausify(3)].
-Covers(c7,c8).  [clausify(4)].
c8 != c7.  [clausify(4)].
Multipart_Curve(c9).  [clausify(5)].
-Multipart_Curve(c10).  [clausify(6)].
C(c11,c12).  [clausify(7)].
c12 != c11.  [clausify(7)].
-C(c13,c14).  [clausify(8)].
c14 != c13.  [clausify(8)].
sf_contains(c15,c16).  [clausify(9)].
c16 != c15.  [clausify(9)].
-sf_contains(c17,c18).  [clausify(10)].
c18 != c17.  [clausify(10)].
Multipart_S(c19).  [clausify(11)].
-Multipart_S(c20).  [clausify(12)].
Inc(c21,c22).  [clausify(13)].
c22 != c21.  [clausify(13)].
-Inc(c23,c24).  [clausify(14)].
c24 != c23.  [clausify(14)].
P(c25,c26).  [clausify(15)].
c26 != c25.  [clausify(15)].
-P(c27,c28).  [clausify(16)].
c28 != c27.  [clausify(16)].
ZEX(c29).  [clausify(17)].
-ZEX(c30).  [clausify(18)].
Cont(c31,c32).  [clausify(19)].
c32 != c31.  [clausify(19)].
-Cont(c33,c34).  [clausify(20)].
c34 != c33.  [clausify(20)].
sf_geometry(c35).  [clausify(21)].
-sf_geometry(c36).  [clausify(22)].
Curve(c37).  [clausify(23)].
-Curve(c38).  [clausify(24)].
sf_multi_polygon(c39).  [clausify(25)].
-sf_multi_polygon(c40).  [clausify(26)].
sf_multi_curve(c41).  [clausify(27)].
-sf_multi_curve(c42).  [clausify(28)].
sf_multi_line_string(c43).  [clausify(29)].
-sf_multi_line_string(c44).  [clausify(30)].
MaxDim(c45).  [clausify(31)].
-MaxDim(c46).  [clausify(32)].
Min(c47).  [clausify(33)].
-Min(c48).  [clausify(34)].
sf_curve(c49).  [clausify(35)].
-sf_curve(c50).  [clausify(36)].
geq(c51,c52).  [clausify(37)].
c52 != c51.  [clausify(37)].
-geq(c53,c54).  [clausify(38)].
c54 != c53.  [clausify(38)].
sf_polygon(c55).  [clausify(39)].
-sf_polygon(c56).  [clausify(40)].
sf_geometry_collection(c57).  [clausify(41)].
-sf_geometry_collection(c58).  [clausify(42)].
Point(c59).  [clausify(43)].
-Point(c60).  [clausify(44)].
Simple_ArealRegion(c61).  [clausify(45)].
-Simple_ArealRegion(c62).  [clausify(46)].
Closed(c63).  [clausify(47)].
-Closed(c64).  [clausify(48)].
sf_intersects(c65,c66).  [clausify(49)].
c66 != c65.  [clausify(49)].
-sf_intersects(c67,c68).  [clausify(50)].
c68 != c67.  [clausify(50)].
PointRegion(c69).  [clausify(51)].
-PointRegion(c70).  [clausify(52)].
sf_relate(c71,c72).  [clausify(53)].
c72 != c71.  [clausify(53)].
-sf_relate(c73,c74).  [clausify(54)].
c74 != c73.  [clausify(54)].
Multipart_ArealRegion(c75).  [clausify(55)].
-Multipart_ArealRegion(c76).  [clausify(56)].
sf_crosses(c77,c78).  [clausify(57)].
c78 != c77.  [clausify(57)].
-sf_crosses(c79,c80).  [clausify(58)].
c80 != c79.  [clausify(58)].
sf_touches(c81,c82).  [clausify(59)].
c82 != c81.  [clausify(59)].
-sf_touches(c83,c84).  [clausify(60)].
c84 != c83.  [clausify(60)].
gt(c85,c86).  [clausify(61)].
c86 != c85.  [clausify(61)].
-gt(c87,c88).  [clausify(62)].
c88 != c87.  [clausify(62)].
Branched_S(c89).  [clausify(63)].
-Branched_S(c90).  [clausify(64)].
sf_surface(c91).  [clausify(65)].
-sf_surface(c92).  [clausify(66)].
sf_polyhedral_surface(c93).  [clausify(67)].
-sf_polyhedral_surface(c94).  [clausify(68)].
Simple_S(c95).  [clausify(69)].
-Simple_S(c96).  [clausify(70)].
sf_linear_ring(c97).  [clausify(71)].
-sf_linear_ring(c98).  [clausify(72)].
BCont(c99,c100).  [clausify(73)].
c100 != c99.  [clausify(73)].
-BCont(c101,c102).  [clausify(74)].
c102 != c101.  [clausify(74)].
EqDim(c103,c104).  [clausify(75)].
c104 != c103.  [clausify(75)].
-EqDim(c105,c106).  [clausify(76)].
c106 != c105.  [clausify(76)].
sf_disjoint(c107,c108).  [clausify(77)].
c108 != c107.  [clausify(77)].
-sf_disjoint(c109,c110).  [clausify(78)].
c110 != c109.  [clausify(78)].
sf_tin(c111).  [clausify(79)].
-sf_tin(c112).  [clausify(80)].
leq(c113,c114).  [clausify(81)].
c114 != c113.  [clausify(81)].
-leq(c115,c116).  [clausify(82)].
c116 != c115.  [clausify(82)].
sf_line_string(c117).  [clausify(83)].
-sf_line_string(c118).  [clausify(84)].
ArealRegion(c119).  [clausify(85)].
-ArealRegion(c120).  [clausify(86)].
sf_triangle(c121).  [clausify(87)].
-sf_triangle(c122).  [clausify(88)].
sf_line(c123).  [clausify(89)].
-sf_line(c124).  [clausify(90)].
sf_point(c125).  [clausify(91)].
-sf_point(c126).  [clausify(92)].
sf_overlaps(c127,c128).  [clausify(93)].
c128 != c127.  [clausify(93)].
-sf_overlaps(c129,c130).  [clausify(94)].
c130 != c129.  [clausify(94)].
sf_multi_surface(c131).  [clausify(95)].
-sf_multi_surface(c132).  [clausify(96)].
sf_equals(c133,c134).  [clausify(97)].
c134 != c133.  [clausify(97)].
-sf_equals(c135,c136).  [clausify(98)].
c136 != c135.  [clausify(98)].
S(c137).  [clausify(99)].
-S(c138).  [clausify(100)].
Connected_S(c139).  [clausify(101)].
-Connected_S(c140).  [clausify(102)].
SC(c141,c142).  [clausify(103)].
c142 != c141.  [clausify(103)].
-SC(c143,c144).  [clausify(104)].
c144 != c143.  [clausify(104)].
Max(c145).  [clausify(105)].
-Max(c146).  [clausify(106)].
sf_within(c147,c148).  [clausify(107)].
c148 != c147.  [clausify(107)].
-sf_within(c149,c150).  [clausify(108)].
c150 != c149.  [clausify(108)].
PP(c151,c152).  [clausify(109)].
c152 != c151.  [clausify(109)].
-PP(c153,c154).  [clausify(110)].
c154 != c153.  [clausify(110)].
MinDim(c155).  [clausify(111)].
-MinDim(c156).  [clausify(112)].
sf_multi_point(c157).  [clausify(113)].
-sf_multi_point(c158).  [clausify(114)].
PO(c159,c160).  [clausify(115)].
c160 != c159.  [clausify(115)].
-PO(c161,c162).  [clausify(116)].
c162 != c161.  [clausify(116)].
-sf_geometry(x) | S(x).  [clausify(117)].
sf_geometry(x) | -S(x).  [clausify(117)].
-sf_relate(x,y) | sf_intersects(x,y) | sf_disjoint(x,y).  [clausify(118)].
sf_relate(x,y) | -sf_intersects(x,y).  [clausify(118)].
sf_relate(x,y) | -sf_disjoint(x,y).  [clausify(118)].
-SC(x,y) | C(x,y).  [clausify(119)].
-SC(x,y) | -Cont(z,x) | -P(z,y).  [clausify(120)].
-SC(x,y) | -P(z,x) | -Cont(z,y).  [clausify(121)].
-C(x,y) | Cont(f1(x,y),x) | SC(x,y).  [clausify(122)].
-C(x,y) | Cont(f1(x,y),y) | SC(x,y).  [clausify(122)].
-C(x,y) | P(f1(x,y),x) | P(f1(x,y),y) | SC(x,y).  [clausify(122)].
-SC(x,x).  [clausify(123)].
-SC(x,y) | SC(y,x).  [clausify(124)].
-SC(x,y) | lt(f2(x,y),x).  [clausify(125)].
-SC(x,y) | lt(f2(x,y),y).  [clausify(125)].
-SC(x,y) | Cont(f2(x,y),x).  [clausify(125)].
-SC(x,y) | Cont(f2(x,y),y).  [clausify(125)].
-SC(x,y) | Cont(f3(x,y),x).  [clausify(126)].
-SC(x,y) | Cont(f3(x,y),y).  [clausify(126)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | leq(z,x).  [clausify(126)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,x).  [clausify(126)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | leq(z,y).  [clausify(126)].
-SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(126)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f4(x,y),x).  [clausify(126)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f4(x,y),y).  [clausify(126)].
SC(x,y) | -Cont(z,x) | -Cont(z,y) | -leq(f4(x,y),x) | EqDim(f4(x,y),x) | -leq(f4(x,y),y) | EqDim(f4(x,y),y).  [clausify(126)].
-EqDim(x,y) | leq(x,y).  [clausify(127)].
-EqDim(x,y) | leq(y,x).  [clausify(127)].
EqDim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(127)].
-leq(x,y) | S(x).  [clausify(128)].
-leq(x,y) | S(y).  [clausify(129)].
-ZEX(x) | S(x).  [clausify(130)].
-S(x) | leq(x,x).  [clausify(131)].
-leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(132)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(133)].
-ZEX(x) | -S(y) | leq(x,y).  [clausify(134)].
-Cont(x,y) | leq(x,y).  [clausify(135)].
MinDim(c163).  [clausify(136)].
-MaxDim(x) | S(x).  [clausify(137)].
-MaxDim(x) | -ZEX(x).  [clausify(137)].
-MaxDim(x) | -S(y) | leq(y,x).  [clausify(137)].
MaxDim(x) | -S(x) | ZEX(x) | S(f5(x)).  [clausify(137)].
MaxDim(x) | -S(x) | ZEX(x) | -leq(f5(x),x).  [clausify(137)].
-MinDim(x) | S(x).  [clausify(138)].
-MinDim(x) | -ZEX(x).  [clausify(138)].
-MinDim(x) | -S(y) | ZEX(y) | leq(x,y).  [clausify(138)].
MinDim(x) | -S(x) | ZEX(x) | S(f6(x)).  [clausify(138)].
MinDim(x) | -S(x) | ZEX(x) | -ZEX(f6(x)).  [clausify(138)].
MinDim(x) | -S(x) | ZEX(x) | -leq(x,f6(x)).  [clausify(138)].
-S(x) | ZEX(x) | Cont(x,x).  [clausify(139)].
S(x) | -Cont(x,x).  [clausify(139)].
-ZEX(x) | -Cont(x,x).  [clausify(139)].
-Cont(x,y) | -Cont(y,x) | y = x.  [clausify(140)].
-Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(141)].
-ZEX(x) | S(x).  [clausify(142)].
-ZEX(x) | -Cont(y,x).  [clausify(142)].
-ZEX(x) | -Cont(x,y).  [clausify(142)].
-ZEX(x) | -ZEX(y) | y = x.  [clausify(143)].
-P(x,y) | Cont(x,y).  [clausify(144)].
-P(x,y) | EqDim(x,y).  [clausify(144)].
P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(144)].
-C(x,y) | Cont(f7(x,y),x).  [clausify(145)].
-C(x,y) | Cont(f7(x,y),y).  [clausify(145)].
C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(145)].
-Inc(x,x).  [clausify(146)].
-Inc(x,y) | Inc(y,x).  [clausify(147)].
-EqDim(x,y) | -Inc(x,y).  [clausify(148)].
-Inc(x,y) | lt(x,y) | lt(y,x).  [clausify(149)].
-Cont(x,y) | -lt(x,y) | Inc(x,y).  [clausify(150)].
-Inc(x,y) | -P(y,z) | Inc(x,z).  [clausify(151)].
-Inc(x,y) | leq(f8(x,y),x) | leq(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | leq(f8(x,y),x) | -EqDim(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | leq(f8(x,y),x) | Cont(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | leq(f8(x,y),x) | P(f9(x,y),x).  [clausify(152)].
-Inc(x,y) | -EqDim(f8(x,y),x) | leq(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | -EqDim(f8(x,y),x) | -EqDim(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | -EqDim(f8(x,y),x) | Cont(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | -EqDim(f8(x,y),x) | P(f9(x,y),x).  [clausify(152)].
-Inc(x,y) | Cont(f8(x,y),x) | leq(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | Cont(f8(x,y),x) | -EqDim(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | Cont(f8(x,y),x) | Cont(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | Cont(f8(x,y),x) | P(f9(x,y),x).  [clausify(152)].
-Inc(x,y) | P(f8(x,y),y) | leq(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | P(f8(x,y),y) | -EqDim(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | P(f8(x,y),y) | Cont(f9(x,y),y).  [clausify(152)].
-Inc(x,y) | P(f8(x,y),y) | P(f9(x,y),x).  [clausify(152)].
Inc(x,y) | -leq(z,x) | EqDim(z,x) | -Cont(z,x) | -P(z,y).  [clausify(152)].
Inc(x,y) | -leq(z,y) | EqDim(z,y) | -Cont(z,y) | -P(z,x).  [clausify(152)].
-S(x) | ZEX(x) | PO(x,x).  [clausify(153)].
-PO(x,y) | PO(y,x).  [clausify(154)].
-PO(x,y) | EqDim(x,y).  [clausify(155)].
-PO(x,y) | P(f10(x,y),x).  [clausify(156)].
-PO(x,y) | P(f10(x,y),y).  [clausify(156)].
PO(x,y) | -P(z,x) | -P(z,y).  [clausify(156)].
-Max(x) | S(x).  [clausify(157)].
-Max(x) | -ZEX(x).  [clausify(157)].
-Max(x) | -PP(x,y).  [clausify(157)].
Max(x) | -S(x) | ZEX(x) | PP(x,f11(x)).  [clausify(157)].
-Min(x) | S(x).  [clausify(158)].
-Min(x) | -ZEX(x).  [clausify(158)].
-Min(x) | -PP(y,x).  [clausify(158)].
Min(x) | -S(x) | ZEX(x) | PP(f12(x),x).  [clausify(158)].
-PP(x,y) | P(x,y).  [clausify(159)].
-PP(x,y) | y != x.  [clausify(159)].
PP(x,y) | -P(x,y) | y = x.  [clausify(159)].
-BCont(x,y) | Cont(x,y).  [clausify(160)].
-BCont(x,y) | -EqDim(x,y).  [clausify(160)].
-SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).  [clausify(161)].
-SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).  [clausify(162)].
-BCont(x,y) | -P(y,z) | P(f13(x,y,z),z) | BCont(x,z).  [clausify(163)].
-BCont(x,y) | -P(y,z) | -PO(f13(x,y,z),y) | BCont(x,z).  [clausify(163)].
-BCont(x,y) | -P(y,z) | P(f14(x,y,z),x) | BCont(x,z).  [clausify(163)].
-BCont(x,y) | -P(y,z) | Cont(f14(x,y,z),f13(x,y,z)) | BCont(x,z).  [clausify(163)].
-BCont(x,y) | -Cont(z,x) | BCont(z,y).  [clausify(164)].
-Covers(x,y) | lt(y,x).  [clausify(165)].
-Covers(x,y) | -S(z) | -lt(y,z) | -lt(z,x).  [clausify(165)].
Covers(x,y) | -lt(y,x) | S(f15(x,y)).  [clausify(165)].
Covers(x,y) | -lt(y,x) | lt(y,f15(x,y)).  [clausify(165)].
Covers(x,y) | -lt(y,x) | lt(f15(x,y),x).  [clausify(165)].
-gt(x,y) | lt(y,x).  [clausify(166)].
gt(x,y) | -lt(y,x).  [clausify(166)].
-geq(x,y) | leq(y,x).  [clausify(167)].
geq(x,y) | -leq(y,x).  [clausify(167)].
-lt(x,y) | leq(x,y).  [clausify(168)].
-lt(x,y) | -EqDim(x,y).  [clausify(168)].
lt(x,y) | -leq(x,y) | EqDim(x,y).  [clausify(168)].
-Closed(x) | -BCont(y,x).  [clausify(169)].
Closed(x) | BCont(f16(x),x).  [clausify(169)].
-sf_contains(x,y) | sf_geometry(x).  [clausify(170)].
-sf_contains(x,y) | sf_geometry(y).  [clausify(170)].
-sf_contains(x,y) | Cont(x,y).  [clausify(170)].
sf_contains(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Cont(x,y).  [clausify(170)].
-sf_multi_polygon(x) | sf_multi_surface(x).  [clausify(171)].
-sf_geometry_collection(x) | -sf_point(x).  [clausify(172)].
-sf_geometry_collection(x) | -sf_curve(x).  [clausify(172)].
-sf_geometry_collection(x) | -sf_surface(x).  [clausify(172)].
-sf_geometry_collection(x) | sf_multi_point(x) | sf_multi_curve(x) | sf_multi_surface(x).  [clausify(173)].
sf_geometry_collection(x) | -sf_multi_point(x).  [clausify(173)].
sf_geometry_collection(x) | -sf_multi_curve(x).  [clausify(173)].
sf_geometry_collection(x) | -sf_multi_surface(x).  [clausify(173)].
-sf_point(x) | -sf_curve(x).  [clausify(174)].
-sf_point(x) | -sf_surface(x).  [clausify(174)].
-sf_point(x) | -sf_geometry_collection(x).  [clausify(174)].
-sf_geometry(x) | sf_point(x) | sf_curve(x) | sf_surface(x) | sf_geometry_collection(x).  [clausify(175)].
sf_geometry(x) | -sf_point(x).  [clausify(175)].
sf_geometry(x) | -sf_curve(x).  [clausify(175)].
sf_geometry(x) | -sf_surface(x).  [clausify(175)].
sf_geometry(x) | -sf_geometry_collection(x).  [clausify(175)].
-sf_surface(x) | -sf_point(x).  [clausify(176)].
-sf_surface(x) | -sf_curve(x).  [clausify(176)].
-sf_surface(x) | -sf_geometry_collection(x).  [clausify(176)].
-sf_curve(x) | -sf_point(x).  [clausify(177)].
-sf_curve(x) | -sf_surface(x).  [clausify(177)].
-sf_curve(x) | -sf_geometry_collection(x).  [clausify(177)].
-sf_multi_line_string(x) | sf_multi_curve(x).  [clausify(178)].
-sf_triangle(x) | sf_polygon(x).  [clausify(179)].
-sf_triangle(x) | sf_tin(x).  [clausify(179)].
sf_triangle(x) | -sf_polygon(x) | -sf_tin(x).  [clausify(179)].
-sf_tin(x) | sf_polyhedral_surface(x).  [clausify(180)].
-sf_polyhedral_surface(x) | sf_surface(x).  [clausify(181)].
-sf_polygon(x) | sf_polyhedral_surface(x).  [clausify(182)].
-sf_linear_ring(x) | sf_line_string(x).  [clausify(183)].
-sf_line_string(x) | sf_curve(x).  [clausify(184)].
-sf_line(x) | sf_line_string(x).  [clausify(185)].
-sf_overlaps(x,y) | sf_geometry(x).  [clausify(186)].
-sf_overlaps(x,y) | sf_geometry(y).  [clausify(186)].
-sf_overlaps(x,y) | PO(x,y).  [clausify(186)].
-sf_overlaps(x,y) | -P(x,y).  [clausify(186)].
-sf_overlaps(x,y) | -P(y,x).  [clausify(186)].
sf_overlaps(x,y) | -sf_geometry(x) | -sf_geometry(y) | -PO(x,y) | P(x,y) | P(y,x).  [clausify(186)].
-sf_within(x,y) | sf_contains(y,x).  [clausify(187)].
sf_within(x,y) | -sf_contains(y,x).  [clausify(187)].
-sf_contains(x,y) | sf_geometry(x).  [clausify(188)].
-sf_contains(x,y) | sf_geometry(y).  [clausify(188)].
-sf_contains(x,y) | Cont(x,y).  [clausify(188)].
sf_contains(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Cont(x,y).  [clausify(188)].
-sf_crosses(x,y) | sf_geometry(x).  [clausify(189)].
-sf_crosses(x,y) | sf_geometry(y).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).  [clausify(189)].
-sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).  [clausify(189)].
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Inc(x,y) | Cont(x,y) | Cont(y,x).  [clausify(189)].
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | Cont(f17(x,y),x).  [clausify(189)].
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | Cont(f17(x,y),y).  [clausify(189)].
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -lt(f17(x,y),x) | -lt(f17(x,y),y) | BCont(f17(x,y),x) | BCont(f17(x,y),y).  [clausify(189)].
sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -SC(x,y) | -Curve(x) | -Curve(y).  [clausify(189)].
-Curve(x) | -ZEX(x).  [clausify(190)].
-Curve(x) | -MinDim(x).  [clausify(190)].
-Curve(x) | -MinDim(y) | Covers(x,y).  [clausify(190)].
-Curve(x) | MinDim(y) | -Covers(x,y).  [clausify(190)].
ZEX(x) | MinDim(x) | MinDim(f18(x)) | Covers(x,f18(x)) | -MinDim(y) | Curve(x).  [clausify(191)].
ZEX(x) | MinDim(x) | -MinDim(f18(x)) | -Covers(x,f18(x)) | -MinDim(y) | Curve(x).  [clausify(191)].
-sf_touches(x,y) | sf_geometry(x).  [clausify(192)].
-sf_touches(x,y) | sf_geometry(y).  [clausify(192)].
-sf_touches(x,y) | SC(x,y) | BCont(x,y) | BCont(y,x).  [clausify(192)].
sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -SC(x,y).  [clausify(192)].
sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -BCont(x,y).  [clausify(192)].
sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -BCont(y,x).  [clausify(192)].
-sf_equals(x,y) | sf_contains(x,y).  [clausify(193)].
-sf_equals(x,y) | sf_within(x,y).  [clausify(193)].
sf_equals(x,y) | -sf_contains(x,y) | -sf_within(x,y).  [clausify(193)].
-sf_intersects(x,y) | sf_geometry(x).  [clausify(194)].
-sf_intersects(x,y) | sf_geometry(y).  [clausify(194)].
-sf_intersects(x,y) | -sf_disjoint(x,y).  [clausify(194)].
sf_intersects(x,y) | -sf_geometry(x) | -sf_geometry(y) | sf_disjoint(x,y).  [clausify(194)].
-sf_disjoint(x,y) | sf_geometry(x).  [clausify(195)].
-sf_disjoint(x,y) | sf_geometry(y).  [clausify(195)].
-sf_disjoint(x,y) | -C(x,y).  [clausify(195)].
-sf_geometry_collection(x) | Multipart_S(x) | Branched_S(x).  [clausify(196)].
-sf_multi_polygon(x) | sf_multi_surface(x).  [clausify(197)].
-sf_multi_polygon(x) | -P(y,x) | -Min(y) | sf_polygon(y).  [clausify(197)].
sf_multi_polygon(x) | -sf_multi_surface(x) | P(f19(x),x).  [clausify(197)].
sf_multi_polygon(x) | -sf_multi_surface(x) | Min(f19(x)).  [clausify(197)].
sf_multi_polygon(x) | -sf_multi_surface(x) | -sf_polygon(f19(x)).  [clausify(197)].
-sf_polygon(x) | Simple_ArealRegion(x).  [clausify(198)].
-sf_polygon(x) | sf_linear_ring(f20(x)).  [clausify(199)].
-sf_polygon(x) | BCont(f20(x),x).  [clausify(199)].
-sf_polygon(x) | boundary(f21(x)) = f20(x).  [clausify(199)].
-sf_polygon(x) | P(x,f21(x)).  [clausify(199)].
-sf_polygon(x) | -BCont(y,x) | P(y,f22(x,y)).  [clausify(200)].
-sf_polygon(x) | -BCont(y,x) | BCont(f22(x,y),x).  [clausify(200)].
-sf_polygon(x) | -BCont(y,x) | sf_linear_ring(f22(x,y)).  [clausify(200)].
-Cont(x,boundary(y)) | BCont(x,y).  [clausify(201)].
Cont(x,boundary(y)) | -BCont(x,y).  [clausify(201)].
-Simple_ArealRegion(x) | ArealRegion(x).  [clausify(202)].
-Simple_ArealRegion(x) | Simple_S(x).  [clausify(202)].
Simple_ArealRegion(x) | -ArealRegion(x) | -Simple_S(x).  [clausify(202)].
-Simple_S(x) | Connected_S(x).  [clausify(203)].
-Simple_S(x) | -Branched_S(x).  [clausify(203)].
Simple_S(x) | -Connected_S(x) | Branched_S(x).  [clausify(203)].
-Branched_S(x) | Connected_S(x).  [clausify(204)].
-Branched_S(x) | PP(f23(x),x).  [clausify(204)].
-Branched_S(x) | PP(f24(x),x).  [clausify(204)].
-Branched_S(x) | PP(f25(x),x).  [clausify(204)].
-Branched_S(x) | -PO(f23(x),f24(x)).  [clausify(204)].
-Branched_S(x) | -PO(f23(x),f25(x)).  [clausify(204)].
-Branched_S(x) | -PO(f24(x),f25(x)).  [clausify(204)].
-Branched_S(x) | Covers(f23(x),f26(x)).  [clausify(204)].
-Branched_S(x) | Covers(f24(x),f26(x)).  [clausify(204)].
-Branched_S(x) | Covers(f25(x),f26(x)).  [clausify(204)].
-Branched_S(x) | Cont(f26(x),f23(x)).  [clausify(204)].
-Branched_S(x) | Cont(f26(x),f24(x)).  [clausify(204)].
-Branched_S(x) | Cont(f26(x),f25(x)).  [clausify(204)].
Branched_S(x) | -Connected_S(x) | -PP(y,x) | -PP(z,x) | -PP(u,x) | PO(y,z) | PO(y,u) | PO(z,u) | -Covers(y,w) | -Covers(z,w) | -Covers(u,w) | -Cont(w,y) | -Cont(w,z) | -Cont(w,u).  [clausify(204)].
-Connected_S(x) | S(x).  [clausify(205)].
-Connected_S(x) | -PP(y,x) | SC(y,difference(x,y)).  [clausify(205)].
Connected_S(x) | -S(x) | PP(f27(x),x).  [clausify(205)].
Connected_S(x) | -S(x) | -SC(f27(x),difference(x,f27(x))).  [clausify(205)].
-S(x) | -S(y) | C(x,y) | ZEX(intersection(x,y)).  [clausify(206)].
S(x) | -ZEX(intersection(x,y)).  [clausify(206)].
S(x) | -ZEX(intersection(y,x)).  [clausify(206)].
-C(x,y) | -ZEX(intersection(x,y)).  [clausify(206)].
-S(x) | -S(y) | ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(207)].
-Cont(x,y) | -Cont(x,z) | leq(x,intersection(y,z)).  [clausify(208)].
-Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(209)].
Cont(x,y) | -P(x,intersection(y,z)).  [clausify(209)].
Cont(x,y) | -P(x,intersection(z,y)).  [clausify(209)].
EqDim(x,intersection(y,z)) | -P(x,intersection(y,z)).  [clausify(209)].
-S(x) | -S(y) | ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(210)].
-lt(x,y) | difference(y,x) = y.  [clausify(211)].
-leq(x,y) | -Cont(z,x) | -lt(intersection(z,y),z) | Cont(z,difference(x,y)).  [clausify(212)].
-leq(x,y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(213)].
-leq(x,y) | -P(z,difference(x,y)) | lt(intersection(z,y),z).  [clausify(214)].
-ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(215)].
ZEX(difference(x,y)) | -ZEX(x).  [clausify(215)].
ZEX(difference(x,y)) | -Cont(x,y).  [clausify(215)].
-ArealRegion(x) | -Curve(y) | Covers(x,y).  [clausify(216)].
ArealRegion(x) | Curve(f28(x)).  [clausify(216)].
ArealRegion(x) | -Covers(x,f28(x)).  [clausify(216)].
-sf_multi_surface(x) | Multipart_ArealRegion(x).  [clausify(217)].
-Multipart_ArealRegion(x) | ArealRegion(x).  [clausify(218)].
-Multipart_ArealRegion(x) | Multipart_S(x).  [clausify(218)].
Multipart_ArealRegion(x) | -ArealRegion(x) | -Multipart_S(x).  [clausify(218)].
-Multipart_S(x) | S(x).  [clausify(219)].
-Multipart_S(x) | -Connected_S(x).  [clausify(219)].
Multipart_S(x) | -S(x) | Connected_S(x).  [clausify(219)].
-sf_multi_line_string(x) | sf_multi_curve(x).  [clausify(220)].
-sf_multi_line_string(x) | -P(y,x) | -Min(y) | sf_line_string(y).  [clausify(220)].
sf_multi_line_string(x) | -sf_multi_curve(x) | P(f29(x),x).  [clausify(220)].
sf_multi_line_string(x) | -sf_multi_curve(x) | Min(f29(x)).  [clausify(220)].
sf_multi_line_string(x) | -sf_multi_curve(x) | -sf_line_string(f29(x)).  [clausify(220)].
-sf_multi_curve(x) | Multipart_Curve(x).  [clausify(221)].
-Multipart_Curve(x) | Curve(x).  [clausify(222)].
-Multipart_Curve(x) | Multipart_S(x).  [clausify(222)].
Multipart_Curve(x) | -Curve(x) | -Multipart_S(x).  [clausify(222)].
-sf_multi_point(x) | PointRegion(x).  [clausify(223)].
-sf_multi_point(x) | -Point(x).  [clausify(223)].
sf_multi_point(x) | -PointRegion(x) | Point(x).  [clausify(223)].
-Point(x) | MinDim(x).  [clausify(224)].
-Point(x) | -Cont(y,x) | y = x.  [clausify(224)].
Point(x) | -MinDim(x) | Cont(f30(x),x).  [clausify(224)].
Point(x) | -MinDim(x) | f30(x) != x.  [clausify(224)].
-PointRegion(x) | MinDim(x).  [clausify(225)].
PointRegion(x) | -MinDim(x).  [clausify(225)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== PREDICATE ELIMINATION =================

No predicates eliminated.

============================== end predicate elimination =============

Auto_denials:  (non-Horn, no changes).

Term ordering decisions:
Predicate symbol precedence:  predicate_order([ =, sf_geometry, S, Curve, ZEX, MinDim, Branched_S, sf_polygon, Connected_S, sf_multi_curve, sf_multi_surface, ArealRegion, Min, Multipart_S, sf_geometry_collection, sf_multi_line_string, sf_multi_polygon, Point, sf_line_string, MaxDim, Multipart_ArealRegion, Multipart_Curve, PointRegion, Simple_ArealRegion, Simple_S, sf_multi_point, sf_curve, sf_linear_ring, sf_polyhedral_surface, sf_surface, sf_tin, sf_triangle, Max, sf_point, Closed, sf_line, Cont, BCont, sf_crosses, P, leq, lt, Inc, SC, EqDim, Covers, PO, PP, sf_contains, C, sf_touches, sf_disjoint, sf_intersects, sf_overlaps, sf_within, sf_equals, sf_relate, geq, gt ]).
Function symbol precedence:  function_order([ c1, c2, c3, c4, c5, c6, c7, c8, c9, c10, c11, c12, c13, c14, c15, c16, c17, c18, c19, c20, c21, c22, c23, c24, c25, c26, c27, c28, c29, c30, c31, c32, c33, c34, c35, c36, c37, c38, c39, c40, c41, c42, c43, c44, c45, c46, c47, c48, c49, c50, c51, c52, c53, c54, c55, c56, c57, c58, c59, c60, c61, c62, c63, c64, c65, c66, c67, c68, c69, c70, c71, c72, c73, c74, c75, c76, c77, c78, c79, c80, c81, c82, c83, c84, c85, c86, c87, c88, c89, c90, c91, c92, c93, c94, c95, c96, c97, c98, c99, c100, c101, c102, c103, c104, c105, c106, c107, c108, c109, c110, c111, c112, c113, c114, c115, c116, c117, c118, c119, c120, c121, c122, c123, c124, c125, c126, c127, c128, c129, c130, c131, c132, c133, c134, c135, c136, c137, c138, c139, c140, c141, c142, c143, c144, c145, c146, c147, c148, c149, c150, c151, c152, c153, c154, c155, c156, c157, c158, c159, c160, c161, c162, c163, intersection, difference, f1, f2, f3, f4, f7, f8, f9, f10, f15, f17, f22, boundary, f5, f6, f11, f12, f16, f18, f19, f20, f21, f23, f24, f25, f26, f27, f28, f29, f30, f13, f14 ]).
After inverse_order:  (no changes).
Unfolding symbols: (none).

Auto_inference settings:
  % set(paramodulation).  % (positive equality literals)
    % set(paramodulation) -> set(back_demod).
  % set(binary_resolution).  % (non-Horn)
  % set(positive_inference). % (non-Horn)
    % set(positive_inference) -> assign(literal_selection, max_negative).

Auto_process settings:
  % set(factor).  % (non-Horn)
  % set(back_unit_deletion).  % (non-Horn)
    % set(back_unit_deletion) -> set(unit_deletion).

============================== end of process initial clauses ========

============================== CLAUSES FOR SEARCH ====================

% Clauses after input processing:

formulas(usable).
end_of_list.

formulas(sos).
226 lt(c1,c2).  [clausify(1)].
227 c2 != c1.  [clausify(1)].
228 -lt(c3,c4).  [clausify(2)].
229 c4 != c3.  [clausify(2)].
230 Covers(c5,c6).  [clausify(3)].
231 c6 != c5.  [clausify(3)].
232 -Covers(c7,c8).  [clausify(4)].
233 c8 != c7.  [clausify(4)].
234 Multipart_Curve(c9).  [clausify(5)].
235 -Multipart_Curve(c10).  [clausify(6)].
236 C(c11,c12).  [clausify(7)].
237 c12 != c11.  [clausify(7)].
238 -C(c13,c14).  [clausify(8)].
239 c14 != c13.  [clausify(8)].
240 sf_contains(c15,c16).  [clausify(9)].
241 c16 != c15.  [clausify(9)].
242 -sf_contains(c17,c18).  [clausify(10)].
243 c18 != c17.  [clausify(10)].
244 Multipart_S(c19).  [clausify(11)].
245 -Multipart_S(c20).  [clausify(12)].
246 Inc(c21,c22).  [clausify(13)].
247 c22 != c21.  [clausify(13)].
248 -Inc(c23,c24).  [clausify(14)].
249 c24 != c23.  [clausify(14)].
250 P(c25,c26).  [clausify(15)].
251 c26 != c25.  [clausify(15)].
252 -P(c27,c28).  [clausify(16)].
253 c28 != c27.  [clausify(16)].
254 ZEX(c29).  [clausify(17)].
255 -ZEX(c30).  [clausify(18)].
256 Cont(c31,c32).  [clausify(19)].
257 c32 != c31.  [clausify(19)].
258 -Cont(c33,c34).  [clausify(20)].
259 c34 != c33.  [clausify(20)].
260 sf_geometry(c35).  [clausify(21)].
261 -sf_geometry(c36).  [clausify(22)].
262 Curve(c37).  [clausify(23)].
263 -Curve(c38).  [clausify(24)].
264 sf_multi_polygon(c39).  [clausify(25)].
265 -sf_multi_polygon(c40).  [clausify(26)].
266 sf_multi_curve(c41).  [clausify(27)].
267 -sf_multi_curve(c42).  [clausify(28)].
268 sf_multi_line_string(c43).  [clausify(29)].
269 -sf_multi_line_string(c44).  [clausify(30)].
270 MaxDim(c45).  [clausify(31)].
271 -MaxDim(c46).  [clausify(32)].
272 Min(c47).  [clausify(33)].
273 -Min(c48).  [clausify(34)].
274 sf_curve(c49).  [clausify(35)].
275 -sf_curve(c50).  [clausify(36)].
276 geq(c51,c52).  [clausify(37)].
277 c52 != c51.  [clausify(37)].
278 -geq(c53,c54).  [clausify(38)].
279 c54 != c53.  [clausify(38)].
280 sf_polygon(c55).  [clausify(39)].
281 -sf_polygon(c56).  [clausify(40)].
282 sf_geometry_collection(c57).  [clausify(41)].
283 -sf_geometry_collection(c58).  [clausify(42)].
284 Point(c59).  [clausify(43)].
285 -Point(c60).  [clausify(44)].
286 Simple_ArealRegion(c61).  [clausify(45)].
287 -Simple_ArealRegion(c62).  [clausify(46)].
288 Closed(c63).  [clausify(47)].
289 -Closed(c64).  [clausify(48)].
290 sf_intersects(c65,c66).  [clausify(49)].
291 c66 != c65.  [clausify(49)].
292 -sf_intersects(c67,c68).  [clausify(50)].
293 c68 != c67.  [clausify(50)].
294 PointRegion(c69).  [clausify(51)].
295 -PointRegion(c70).  [clausify(52)].
296 sf_relate(c71,c72).  [clausify(53)].
297 c72 != c71.  [clausify(53)].
298 -sf_relate(c73,c74).  [clausify(54)].
299 c74 != c73.  [clausify(54)].
300 Multipart_ArealRegion(c75).  [clausify(55)].
301 -Multipart_ArealRegion(c76).  [clausify(56)].
302 sf_crosses(c77,c78).  [clausify(57)].
303 c78 != c77.  [clausify(57)].
304 -sf_crosses(c79,c80).  [clausify(58)].
305 c80 != c79.  [clausify(58)].
306 sf_touches(c81,c82).  [clausify(59)].
307 c82 != c81.  [clausify(59)].
308 -sf_touches(c83,c84).  [clausify(60)].
309 c84 != c83.  [clausify(60)].
310 gt(c85,c86).  [clausify(61)].
311 c86 != c85.  [clausify(61)].
312 -gt(c87,c88).  [clausify(62)].
313 c88 != c87.  [clausify(62)].
314 Branched_S(c89).  [clausify(63)].
315 -Branched_S(c90).  [clausify(64)].
316 sf_surface(c91).  [clausify(65)].
317 -sf_surface(c92).  [clausify(66)].
318 sf_polyhedral_surface(c93).  [clausify(67)].
319 -sf_polyhedral_surface(c94).  [clausify(68)].
320 Simple_S(c95).  [clausify(69)].
321 -Simple_S(c96).  [clausify(70)].
322 sf_linear_ring(c97).  [clausify(71)].
323 -sf_linear_ring(c98).  [clausify(72)].
324 BCont(c99,c100).  [clausify(73)].
325 c100 != c99.  [clausify(73)].
326 -BCont(c101,c102).  [clausify(74)].
327 c102 != c101.  [clausify(74)].
328 EqDim(c103,c104).  [clausify(75)].
329 c104 != c103.  [clausify(75)].
330 -EqDim(c105,c106).  [clausify(76)].
331 c106 != c105.  [clausify(76)].
332 sf_disjoint(c107,c108).  [clausify(77)].
333 c108 != c107.  [clausify(77)].
334 -sf_disjoint(c109,c110).  [clausify(78)].
335 c110 != c109.  [clausify(78)].
336 sf_tin(c111).  [clausify(79)].
337 -sf_tin(c112).  [clausify(80)].
338 leq(c113,c114).  [clausify(81)].
339 c114 != c113.  [clausify(81)].
340 -leq(c115,c116).  [clausify(82)].
341 c116 != c115.  [clausify(82)].
342 sf_line_string(c117).  [clausify(83)].
343 -sf_line_string(c118).  [clausify(84)].
344 ArealRegion(c119).  [clausify(85)].
345 -ArealRegion(c120).  [clausify(86)].
346 sf_triangle(c121).  [clausify(87)].
347 -sf_triangle(c122).  [clausify(88)].
348 sf_line(c123).  [clausify(89)].
349 -sf_line(c124).  [clausify(90)].
350 sf_point(c125).  [clausify(91)].
351 -sf_point(c126).  [clausify(92)].
352 sf_overlaps(c127,c128).  [clausify(93)].
353 c128 != c127.  [clausify(93)].
354 -sf_overlaps(c129,c130).  [clausify(94)].
355 c130 != c129.  [clausify(94)].
356 sf_multi_surface(c131).  [clausify(95)].
357 -sf_multi_surface(c132).  [clausify(96)].
358 sf_equals(c133,c134).  [clausify(97)].
359 c134 != c133.  [clausify(97)].
360 -sf_equals(c135,c136).  [clausify(98)].
361 c136 != c135.  [clausify(98)].
362 S(c137).  [clausify(99)].
363 -S(c138).  [clausify(100)].
364 Connected_S(c139).  [clausify(101)].
365 -Connected_S(c140).  [clausify(102)].
366 SC(c141,c142).  [clausify(103)].
367 c142 != c141.  [clausify(103)].
368 -SC(c143,c144).  [clausify(104)].
369 c144 != c143.  [clausify(104)].
370 Max(c145).  [clausify(105)].
371 -Max(c146).  [clausify(106)].
372 sf_within(c147,c148).  [clausify(107)].
373 c148 != c147.  [clausify(107)].
374 -sf_within(c149,c150).  [clausify(108)].
375 c150 != c149.  [clausify(108)].
376 PP(c151,c152).  [clausify(109)].
377 c152 != c151.  [clausify(109)].
378 -PP(c153,c154).  [clausify(110)].
379 c154 != c153.  [clausify(110)].
380 MinDim(c155).  [clausify(111)].
381 -MinDim(c156).  [clausify(112)].
382 sf_multi_point(c157).  [clausify(113)].
383 -sf_multi_point(c158).  [clausify(114)].
384 PO(c159,c160).  [clausify(115)].
385 c160 != c159.  [clausify(115)].
386 -PO(c161,c162).  [clausify(116)].
387 c162 != c161.  [clausify(116)].
388 -sf_geometry(x) | S(x).  [clausify(117)].
389 sf_geometry(x) | -S(x).  [clausify(117)].
390 -sf_relate(x,y) | sf_intersects(x,y) | sf_disjoint(x,y).  [clausify(118)].
391 sf_relate(x,y) | -sf_intersects(x,y).  [clausify(118)].
392 sf_relate(x,y) | -sf_disjoint(x,y).  [clausify(118)].
393 -SC(x,y) | C(x,y).  [clausify(119)].
394 -SC(x,y) | -Cont(z,x) | -P(z,y).  [clausify(120)].
395 -SC(x,y) | -P(z,x) | -Cont(z,y).  [clausify(121)].
396 -C(x,y) | Cont(f1(x,y),x) | SC(x,y).  [clausify(122)].
397 -C(x,y) | Cont(f1(x,y),y) | SC(x,y).  [clausify(122)].
398 -C(x,y) | P(f1(x,y),x) | P(f1(x,y),y) | SC(x,y).  [clausify(122)].
399 -SC(x,x).  [clausify(123)].
400 -SC(x,y) | SC(y,x).  [clausify(124)].
401 -SC(x,y) | lt(f2(x,y),x).  [clausify(125)].
402 -SC(x,y) | lt(f2(x,y),y).  [clausify(125)].
403 -SC(x,y) | Cont(f2(x,y),x).  [clausify(125)].
404 -SC(x,y) | Cont(f2(x,y),y).  [clausify(125)].
405 -SC(x,y) | Cont(f3(x,y),x).  [clausify(126)].
406 -SC(x,y) | Cont(f3(x,y),y).  [clausify(126)].
408 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,x).  [clausify(126)].
410 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(126)].
411 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f4(x,y),x).  [clausify(126)].
412 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f4(x,y),y).  [clausify(126)].
413 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -leq(f4(x,y),x) | EqDim(f4(x,y),x) | -leq(f4(x,y),y) | EqDim(f4(x,y),y).  [clausify(126)].
414 -EqDim(x,y) | leq(x,y).  [clausify(127)].
415 -EqDim(x,y) | leq(y,x).  [clausify(127)].
416 EqDim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(127)].
417 -leq(x,y) | S(x).  [clausify(128)].
418 -leq(x,y) | S(y).  [clausify(129)].
419 -ZEX(x) | S(x).  [clausify(130)].
420 -S(x) | leq(x,x).  [clausify(131)].
421 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(132)].
422 -ZEX(x) | -ZEX(y) | y = x.  [clausify(133)].
423 -ZEX(x) | -S(y) | leq(x,y).  [clausify(134)].
424 -Cont(x,y) | leq(x,y).  [clausify(135)].
425 MinDim(c163).  [clausify(136)].
426 -MaxDim(x) | S(x).  [clausify(137)].
427 -MaxDim(x) | -ZEX(x).  [clausify(137)].
428 -MaxDim(x) | -S(y) | leq(y,x).  [clausify(137)].
429 MaxDim(x) | -S(x) | ZEX(x) | S(f5(x)).  [clausify(137)].
430 MaxDim(x) | -S(x) | ZEX(x) | -leq(f5(x),x).  [clausify(137)].
431 -MinDim(x) | S(x).  [clausify(138)].
432 -MinDim(x) | -ZEX(x).  [clausify(138)].
433 -MinDim(x) | -S(y) | ZEX(y) | leq(x,y).  [clausify(138)].
434 MinDim(x) | -S(x) | ZEX(x) | S(f6(x)).  [clausify(138)].
435 MinDim(x) | -S(x) | ZEX(x) | -ZEX(f6(x)).  [clausify(138)].
436 MinDim(x) | -S(x) | ZEX(x) | -leq(x,f6(x)).  [clausify(138)].
437 -S(x) | ZEX(x) | Cont(x,x).  [clausify(139)].
438 S(x) | -Cont(x,x).  [clausify(139)].
440 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(140)].
441 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(141)].
442 -ZEX(x) | -Cont(y,x).  [clausify(142)].
443 -ZEX(x) | -Cont(x,y).  [clausify(142)].
444 -P(x,y) | Cont(x,y).  [clausify(144)].
445 -P(x,y) | EqDim(x,y).  [clausify(144)].
446 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(144)].
447 -C(x,y) | Cont(f7(x,y),x).  [clausify(145)].
448 -C(x,y) | Cont(f7(x,y),y).  [clausify(145)].
449 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(145)].
450 -Inc(x,x).  [clausify(146)].
451 -Inc(x,y) | Inc(y,x).  [clausify(147)].
452 -EqDim(x,y) | -Inc(x,y).  [clausify(148)].
453 -Inc(x,y) | lt(x,y) | lt(y,x).  [clausify(149)].
454 -Cont(x,y) | -lt(x,y) | Inc(x,y).  [clausify(150)].
455 -Inc(x,y) | -P(y,z) | Inc(x,z).  [clausify(151)].
456 -Inc(x,y) | leq(f8(x,y),x) | leq(f9(x,y),y).  [clausify(152)].
457 -Inc(x,y) | leq(f8(x,y),x) | -EqDim(f9(x,y),y).  [clausify(152)].
458 -Inc(x,y) | leq(f8(x,y),x) | Cont(f9(x,y),y).  [clausify(152)].
459 -Inc(x,y) | leq(f8(x,y),x) | P(f9(x,y),x).  [clausify(152)].
460 -Inc(x,y) | -EqDim(f8(x,y),x) | leq(f9(x,y),y).  [clausify(152)].
461 -Inc(x,y) | -EqDim(f8(x,y),x) | -EqDim(f9(x,y),y).  [clausify(152)].
462 -Inc(x,y) | -EqDim(f8(x,y),x) | Cont(f9(x,y),y).  [clausify(152)].
463 -Inc(x,y) | -EqDim(f8(x,y),x) | P(f9(x,y),x).  [clausify(152)].
464 -Inc(x,y) | Cont(f8(x,y),x) | leq(f9(x,y),y).  [clausify(152)].
465 -Inc(x,y) | Cont(f8(x,y),x) | -EqDim(f9(x,y),y).  [clausify(152)].
466 -Inc(x,y) | Cont(f8(x,y),x) | Cont(f9(x,y),y).  [clausify(152)].
467 -Inc(x,y) | Cont(f8(x,y),x) | P(f9(x,y),x).  [clausify(152)].
468 -Inc(x,y) | P(f8(x,y),y) | leq(f9(x,y),y).  [clausify(152)].
469 -Inc(x,y) | P(f8(x,y),y) | -EqDim(f9(x,y),y).  [clausify(152)].
470 -Inc(x,y) | P(f8(x,y),y) | Cont(f9(x,y),y).  [clausify(152)].
471 -Inc(x,y) | P(f8(x,y),y) | P(f9(x,y),x).  [clausify(152)].
472 Inc(x,y) | -leq(z,x) | EqDim(z,x) | -Cont(z,x) | -P(z,y).  [clausify(152)].
473 Inc(x,y) | -leq(z,y) | EqDim(z,y) | -Cont(z,y) | -P(z,x).  [clausify(152)].
474 -S(x) | ZEX(x) | PO(x,x).  [clausify(153)].
475 -PO(x,y) | PO(y,x).  [clausify(154)].
476 -PO(x,y) | EqDim(x,y).  [clausify(155)].
477 -PO(x,y) | P(f10(x,y),x).  [clausify(156)].
478 -PO(x,y) | P(f10(x,y),y).  [clausify(156)].
479 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(156)].
480 -Max(x) | S(x).  [clausify(157)].
481 -Max(x) | -ZEX(x).  [clausify(157)].
482 -Max(x) | -PP(x,y).  [clausify(157)].
483 Max(x) | -S(x) | ZEX(x) | PP(x,f11(x)).  [clausify(157)].
484 -Min(x) | S(x).  [clausify(158)].
485 -Min(x) | -ZEX(x).  [clausify(158)].
486 -Min(x) | -PP(y,x).  [clausify(158)].
487 Min(x) | -S(x) | ZEX(x) | PP(f12(x),x).  [clausify(158)].
488 -PP(x,y) | P(x,y).  [clausify(159)].
489 -PP(x,y) | y != x.  [clausify(159)].
490 PP(x,y) | -P(x,y) | y = x.  [clausify(159)].
491 -BCont(x,y) | Cont(x,y).  [clausify(160)].
492 -BCont(x,y) | -EqDim(x,y).  [clausify(160)].
493 -SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).  [clausify(161)].
494 -SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).  [clausify(162)].
495 -BCont(x,y) | -P(y,z) | P(f13(x,y,z),z) | BCont(x,z).  [clausify(163)].
496 -BCont(x,y) | -P(y,z) | -PO(f13(x,y,z),y) | BCont(x,z).  [clausify(163)].
497 -BCont(x,y) | -P(y,z) | P(f14(x,y,z),x) | BCont(x,z).  [clausify(163)].
498 -BCont(x,y) | -P(y,z) | Cont(f14(x,y,z),f13(x,y,z)) | BCont(x,z).  [clausify(163)].
499 -BCont(x,y) | -Cont(z,x) | BCont(z,y).  [clausify(164)].
500 -Covers(x,y) | lt(y,x).  [clausify(165)].
501 -Covers(x,y) | -S(z) | -lt(y,z) | -lt(z,x).  [clausify(165)].
502 Covers(x,y) | -lt(y,x) | S(f15(x,y)).  [clausify(165)].
503 Covers(x,y) | -lt(y,x) | lt(y,f15(x,y)).  [clausify(165)].
504 Covers(x,y) | -lt(y,x) | lt(f15(x,y),x).  [clausify(165)].
505 -gt(x,y) | lt(y,x).  [clausify(166)].
506 gt(x,y) | -lt(y,x).  [clausify(166)].
507 -geq(x,y) | leq(y,x).  [clausify(167)].
508 geq(x,y) | -leq(y,x).  [clausify(167)].
509 -lt(x,y) | leq(x,y).  [clausify(168)].
510 -lt(x,y) | -EqDim(x,y).  [clausify(168)].
511 lt(x,y) | -leq(x,y) | EqDim(x,y).  [clausify(168)].
512 -Closed(x) | -BCont(y,x).  [clausify(169)].
513 Closed(x) | BCont(f16(x),x).  [clausify(169)].
514 -sf_contains(x,y) | sf_geometry(x).  [clausify(170)].
515 -sf_contains(x,y) | sf_geometry(y).  [clausify(170)].
516 -sf_contains(x,y) | Cont(x,y).  [clausify(170)].
517 sf_contains(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Cont(x,y).  [clausify(170)].
518 -sf_multi_polygon(x) | sf_multi_surface(x).  [clausify(171)].
519 -sf_geometry_collection(x) | -sf_point(x).  [clausify(172)].
520 -sf_geometry_collection(x) | -sf_curve(x).  [clausify(172)].
521 -sf_geometry_collection(x) | -sf_surface(x).  [clausify(172)].
522 -sf_geometry_collection(x) | sf_multi_point(x) | sf_multi_curve(x) | sf_multi_surface(x).  [clausify(173)].
523 sf_geometry_collection(x) | -sf_multi_point(x).  [clausify(173)].
524 sf_geometry_collection(x) | -sf_multi_curve(x).  [clausify(173)].
525 sf_geometry_collection(x) | -sf_multi_surface(x).  [clausify(173)].
526 -sf_point(x) | -sf_curve(x).  [clausify(174)].
527 -sf_point(x) | -sf_surface(x).  [clausify(174)].
528 -sf_geometry(x) | sf_point(x) | sf_curve(x) | sf_surface(x) | sf_geometry_collection(x).  [clausify(175)].
529 sf_geometry(x) | -sf_point(x).  [clausify(175)].
530 sf_geometry(x) | -sf_curve(x).  [clausify(175)].
531 sf_geometry(x) | -sf_surface(x).  [clausify(175)].
532 sf_geometry(x) | -sf_geometry_collection(x).  [clausify(175)].
533 -sf_surface(x) | -sf_curve(x).  [clausify(176)].
534 -sf_multi_line_string(x) | sf_multi_curve(x).  [clausify(178)].
535 -sf_triangle(x) | sf_polygon(x).  [clausify(179)].
536 -sf_triangle(x) | sf_tin(x).  [clausify(179)].
537 sf_triangle(x) | -sf_polygon(x) | -sf_tin(x).  [clausify(179)].
538 -sf_tin(x) | sf_polyhedral_surface(x).  [clausify(180)].
539 -sf_polyhedral_surface(x) | sf_surface(x).  [clausify(181)].
540 -sf_polygon(x) | sf_polyhedral_surface(x).  [clausify(182)].
541 -sf_linear_ring(x) | sf_line_string(x).  [clausify(183)].
542 -sf_line_string(x) | sf_curve(x).  [clausify(184)].
543 -sf_line(x) | sf_line_string(x).  [clausify(185)].
544 -sf_overlaps(x,y) | sf_geometry(x).  [clausify(186)].
545 -sf_overlaps(x,y) | sf_geometry(y).  [clausify(186)].
546 -sf_overlaps(x,y) | PO(x,y).  [clausify(186)].
547 -sf_overlaps(x,y) | -P(x,y).  [clausify(186)].
548 -sf_overlaps(x,y) | -P(y,x).  [clausify(186)].
549 sf_overlaps(x,y) | -sf_geometry(x) | -sf_geometry(y) | -PO(x,y) | P(x,y) | P(y,x).  [clausify(186)].
550 -sf_within(x,y) | sf_contains(y,x).  [clausify(187)].
551 sf_within(x,y) | -sf_contains(y,x).  [clausify(187)].
552 -sf_crosses(x,y) | sf_geometry(x).  [clausify(189)].
553 -sf_crosses(x,y) | sf_geometry(y).  [clausify(189)].
554 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).  [clausify(189)].
555 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).  [clausify(189)].
556 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).  [clausify(189)].
557 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).  [clausify(189)].
558 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).  [clausify(189)].
559 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).  [clausify(189)].
560 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).  [clausify(189)].
561 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).  [clausify(189)].
562 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).  [clausify(189)].
563 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).  [clausify(189)].
564 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).  [clausify(189)].
565 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).  [clausify(189)].
566 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).  [clausify(189)].
567 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).  [clausify(189)].
568 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).  [clausify(189)].
569 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).  [clausify(189)].
570 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).  [clausify(189)].
571 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).  [clausify(189)].
572 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).  [clausify(189)].
573 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).  [clausify(189)].
574 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).  [clausify(189)].
575 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).  [clausify(189)].
576 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).  [clausify(189)].
577 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).  [clausify(189)].
578 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).  [clausify(189)].
579 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).  [clausify(189)].
580 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).  [clausify(189)].
581 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).  [clausify(189)].
582 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).  [clausify(189)].
583 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).  [clausify(189)].
584 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).  [clausify(189)].
585 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).  [clausify(189)].
586 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).  [clausify(189)].
587 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).  [clausify(189)].
588 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).  [clausify(189)].
589 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).  [clausify(189)].
590 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Inc(x,y) | Cont(x,y) | Cont(y,x).  [clausify(189)].
591 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | Cont(f17(x,y),x).  [clausify(189)].
592 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | Cont(f17(x,y),y).  [clausify(189)].
593 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -lt(f17(x,y),x) | -lt(f17(x,y),y) | BCont(f17(x,y),x) | BCont(f17(x,y),y).  [clausify(189)].
594 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -SC(x,y) | -Curve(x) | -Curve(y).  [clausify(189)].
595 -Curve(x) | -ZEX(x).  [clausify(190)].
596 -Curve(x) | -MinDim(x).  [clausify(190)].
597 -Curve(x) | -MinDim(y) | Covers(x,y).  [clausify(190)].
598 -Curve(x) | MinDim(y) | -Covers(x,y).  [clausify(190)].
599 ZEX(x) | MinDim(x) | MinDim(f18(x)) | Covers(x,f18(x)) | -MinDim(y) | Curve(x).  [clausify(191)].
601 -sf_touches(x,y) | sf_geometry(x).  [clausify(192)].
602 -sf_touches(x,y) | sf_geometry(y).  [clausify(192)].
603 -sf_touches(x,y) | SC(x,y) | BCont(x,y) | BCont(y,x).  [clausify(192)].
604 sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -SC(x,y).  [clausify(192)].
605 sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -BCont(x,y).  [clausify(192)].
606 sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -BCont(y,x).  [clausify(192)].
607 -sf_equals(x,y) | sf_contains(x,y).  [clausify(193)].
608 -sf_equals(x,y) | sf_within(x,y).  [clausify(193)].
609 sf_equals(x,y) | -sf_contains(x,y) | -sf_within(x,y).  [clausify(193)].
610 -sf_intersects(x,y) | sf_geometry(x).  [clausify(194)].
611 -sf_intersects(x,y) | sf_geometry(y).  [clausify(194)].
612 -sf_intersects(x,y) | -sf_disjoint(x,y).  [clausify(194)].
613 sf_intersects(x,y) | -sf_geometry(x) | -sf_geometry(y) | sf_disjoint(x,y).  [clausify(194)].
614 -sf_disjoint(x,y) | sf_geometry(x).  [clausify(195)].
615 -sf_disjoint(x,y) | sf_geometry(y).  [clausify(195)].
616 -sf_disjoint(x,y) | -C(x,y).  [clausify(195)].
617 -sf_geometry_collection(x) | Multipart_S(x) | Branched_S(x).  [clausify(196)].
618 -sf_multi_polygon(x) | -P(y,x) | -Min(y) | sf_polygon(y).  [clausify(197)].
619 sf_multi_polygon(x) | -sf_multi_surface(x) | P(f19(x),x).  [clausify(197)].
620 sf_multi_polygon(x) | -sf_multi_surface(x) | Min(f19(x)).  [clausify(197)].
621 sf_multi_polygon(x) | -sf_multi_surface(x) | -sf_polygon(f19(x)).  [clausify(197)].
622 -sf_polygon(x) | Simple_ArealRegion(x).  [clausify(198)].
623 -sf_polygon(x) | sf_linear_ring(f20(x)).  [clausify(199)].
624 -sf_polygon(x) | BCont(f20(x),x).  [clausify(199)].
625 -sf_polygon(x) | boundary(f21(x)) = f20(x).  [clausify(199)].
626 -sf_polygon(x) | P(x,f21(x)).  [clausify(199)].
627 -sf_polygon(x) | -BCont(y,x) | P(y,f22(x,y)).  [clausify(200)].
628 -sf_polygon(x) | -BCont(y,x) | BCont(f22(x,y),x).  [clausify(200)].
629 -sf_polygon(x) | -BCont(y,x) | sf_linear_ring(f22(x,y)).  [clausify(200)].
630 -Cont(x,boundary(y)) | BCont(x,y).  [clausify(201)].
631 Cont(x,boundary(y)) | -BCont(x,y).  [clausify(201)].
632 -Simple_ArealRegion(x) | ArealRegion(x).  [clausify(202)].
633 -Simple_ArealRegion(x) | Simple_S(x).  [clausify(202)].
634 Simple_ArealRegion(x) | -ArealRegion(x) | -Simple_S(x).  [clausify(202)].
635 -Simple_S(x) | Connected_S(x).  [clausify(203)].
636 -Simple_S(x) | -Branched_S(x).  [clausify(203)].
637 Simple_S(x) | -Connected_S(x) | Branched_S(x).  [clausify(203)].
638 -Branched_S(x) | Connected_S(x).  [clausify(204)].
639 -Branched_S(x) | PP(f23(x),x).  [clausify(204)].
640 -Branched_S(x) | PP(f24(x),x).  [clausify(204)].
641 -Branched_S(x) | PP(f25(x),x).  [clausify(204)].
642 -Branched_S(x) | -PO(f23(x),f24(x)).  [clausify(204)].
643 -Branched_S(x) | -PO(f23(x),f25(x)).  [clausify(204)].
644 -Branched_S(x) | -PO(f24(x),f25(x)).  [clausify(204)].
645 -Branched_S(x) | Covers(f23(x),f26(x)).  [clausify(204)].
646 -Branched_S(x) | Covers(f24(x),f26(x)).  [clausify(204)].
647 -Branched_S(x) | Covers(f25(x),f26(x)).  [clausify(204)].
648 -Branched_S(x) | Cont(f26(x),f23(x)).  [clausify(204)].
649 -Branched_S(x) | Cont(f26(x),f24(x)).  [clausify(204)].
650 -Branched_S(x) | Cont(f26(x),f25(x)).  [clausify(204)].
651 Branched_S(x) | -Connected_S(x) | -PP(y,x) | -PP(z,x) | -PP(u,x) | PO(y,z) | PO(y,u) | PO(z,u) | -Covers(y,w) | -Covers(z,w) | -Covers(u,w) | -Cont(w,y) | -Cont(w,z) | -Cont(w,u).  [clausify(204)].
652 -Connected_S(x) | S(x).  [clausify(205)].
653 -Connected_S(x) | -PP(y,x) | SC(y,difference(x,y)).  [clausify(205)].
654 Connected_S(x) | -S(x) | PP(f27(x),x).  [clausify(205)].
655 Connected_S(x) | -S(x) | -SC(f27(x),difference(x,f27(x))).  [clausify(205)].
656 -S(x) | -S(y) | C(x,y) | ZEX(intersection(x,y)).  [clausify(206)].
657 S(x) | -ZEX(intersection(x,y)).  [clausify(206)].
658 S(x) | -ZEX(intersection(y,x)).  [clausify(206)].
659 -C(x,y) | -ZEX(intersection(x,y)).  [clausify(206)].
660 -S(x) | -S(y) | ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(207)].
661 -Cont(x,y) | -Cont(x,z) | leq(x,intersection(y,z)).  [clausify(208)].
662 -Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(209)].
663 Cont(x,y) | -P(x,intersection(y,z)).  [clausify(209)].
664 Cont(x,y) | -P(x,intersection(z,y)).  [clausify(209)].
665 -S(x) | -S(y) | ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(210)].
666 -lt(x,y) | difference(y,x) = y.  [clausify(211)].
667 -leq(x,y) | -Cont(z,x) | -lt(intersection(z,y),z) | Cont(z,difference(x,y)).  [clausify(212)].
668 -leq(x,y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(213)].
669 -leq(x,y) | -P(z,difference(x,y)) | lt(intersection(z,y),z).  [clausify(214)].
670 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(215)].
671 ZEX(difference(x,y)) | -ZEX(x).  [clausify(215)].
672 ZEX(difference(x,y)) | -Cont(x,y).  [clausify(215)].
673 -ArealRegion(x) | -Curve(y) | Covers(x,y).  [clausify(216)].
674 ArealRegion(x) | Curve(f28(x)).  [clausify(216)].
675 ArealRegion(x) | -Covers(x,f28(x)).  [clausify(216)].
676 -sf_multi_surface(x) | Multipart_ArealRegion(x).  [clausify(217)].
677 -Multipart_ArealRegion(x) | ArealRegion(x).  [clausify(218)].
678 -Multipart_ArealRegion(x) | Multipart_S(x).  [clausify(218)].
679 Multipart_ArealRegion(x) | -ArealRegion(x) | -Multipart_S(x).  [clausify(218)].
680 -Multipart_S(x) | S(x).  [clausify(219)].
681 -Multipart_S(x) | -Connected_S(x).  [clausify(219)].
682 Multipart_S(x) | -S(x) | Connected_S(x).  [clausify(219)].
683 -sf_multi_line_string(x) | -P(y,x) | -Min(y) | sf_line_string(y).  [clausify(220)].
684 sf_multi_line_string(x) | -sf_multi_curve(x) | P(f29(x),x).  [clausify(220)].
685 sf_multi_line_string(x) | -sf_multi_curve(x) | Min(f29(x)).  [clausify(220)].
686 sf_multi_line_string(x) | -sf_multi_curve(x) | -sf_line_string(f29(x)).  [clausify(220)].
687 -sf_multi_curve(x) | Multipart_Curve(x).  [clausify(221)].
688 -Multipart_Curve(x) | Curve(x).  [clausify(222)].
689 -Multipart_Curve(x) | Multipart_S(x).  [clausify(222)].
690 Multipart_Curve(x) | -Curve(x) | -Multipart_S(x).  [clausify(222)].
691 -sf_multi_point(x) | PointRegion(x).  [clausify(223)].
692 -sf_multi_point(x) | -Point(x).  [clausify(223)].
693 sf_multi_point(x) | -PointRegion(x) | Point(x).  [clausify(223)].
694 -Point(x) | MinDim(x).  [clausify(224)].
695 -Point(x) | -Cont(y,x) | y = x.  [clausify(224)].
696 Point(x) | -MinDim(x) | Cont(f30(x),x).  [clausify(224)].
697 Point(x) | -MinDim(x) | f30(x) != x.  [clausify(224)].
698 -PointRegion(x) | MinDim(x).  [clausify(225)].
699 PointRegion(x) | -MinDim(x).  [clausify(225)].
700 -C(x,x) | P(f1(x,x),x).  [factor(398,b,c),unit_del(c,399)].
701 -Cont(x,y) | Cont(f4(y,y),y).  [factor(411,b,c),unit_del(a,399)].
702 -Cont(x,y) | -leq(f4(y,y),y) | EqDim(f4(y,y),y).  [factor(413,b,c),merge(e),merge(f),unit_del(a,399)].
703 EqDim(x,x) | -leq(x,x).  [factor(416,b,c)].
704 C(x,x) | -Cont(y,x).  [factor(449,b,c)].
705 PO(x,x) | -P(y,x).  [factor(479,b,c)].
706 -SC(x,y) | -Min(x) | -P(x,x) | -Cont(y,x) | -Cont(y,y) | BCont(y,x).  [factor(493,d,e)].
707 -SC(x,y) | -Min(x) | -P(x,y) | -Cont(y,y) | -Cont(y,x) | BCont(y,x).  [factor(493,d,f)].
708 -Covers(x,x) | -S(x) | -lt(x,x).  [factor(501,c,d)].
709 sf_contains(x,x) | -sf_geometry(x) | -Cont(x,x).  [factor(517,b,c)].
710 sf_overlaps(x,x) | -sf_geometry(x) | -PO(x,x) | P(x,x).  [factor(549,b,c),merge(e)].
711 -sf_crosses(x,x) | -Cont(y,x) | lt(y,x).  [factor(554,c,d),unit_del(b,450),unit_del(e,399)].
712 -sf_crosses(x,x) | -Cont(y,x) | -BCont(y,x).  [factor(560,c,d),unit_del(b,450),unit_del(e,399)].
713 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,x) | SC(x,y).  [factor(566,b,d)].
714 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,x) | Curve(x).  [factor(567,b,d)].
715 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,x) | Curve(y).  [factor(568,b,d)].
716 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,y) | SC(x,y).  [factor(569,b,d)].
717 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,y) | Curve(x).  [factor(570,b,d)].
718 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,y) | Curve(y).  [factor(571,b,d)].
719 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,x) | SC(x,y).  [factor(572,b,d)].
720 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,x) | Curve(x).  [factor(573,b,d)].
721 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,x) | Curve(y).  [factor(574,b,d)].
722 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,y) | SC(x,y).  [factor(575,b,d)].
723 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,y) | Curve(x).  [factor(576,b,d)].
724 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,y) | Curve(y).  [factor(577,b,d)].
725 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,x) | SC(x,y).  [factor(578,b,c)].
726 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,x) | Curve(x).  [factor(579,b,c)].
727 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,x) | Curve(y).  [factor(580,b,c)].
728 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,y) | SC(x,y).  [factor(581,b,c)].
729 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,y) | Curve(x).  [factor(582,b,c)].
730 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,y) | Curve(y).  [factor(583,b,c)].
731 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,x) | SC(x,y).  [factor(584,b,c)].
732 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,x) | Curve(x).  [factor(585,b,c)].
733 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,x) | Curve(y).  [factor(586,b,c)].
734 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,y) | SC(x,y).  [factor(587,b,c)].
735 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,y) | Curve(x).  [factor(588,b,c)].
736 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,y) | Curve(y).  [factor(589,b,c)].
737 sf_crosses(x,x) | -sf_geometry(x) | Cont(f17(x,x),x).  [factor(591,b,c)].
738 sf_crosses(x,x) | -sf_geometry(x) | -lt(f17(x,x),x) | BCont(f17(x,x),x).  [factor(593,b,c),merge(d),merge(f)].
739 ZEX(x) | MinDim(x) | -MinDim(f18(x)) | -Covers(x,f18(x)) | Curve(x).  [factor(600,c,e)].
740 -sf_touches(x,x) | BCont(x,x).  [factor(603,c,d),unit_del(b,399)].
741 sf_touches(x,x) | -sf_geometry(x) | -BCont(x,x).  [factor(605,b,c)].
742 sf_intersects(x,x) | -sf_geometry(x) | sf_disjoint(x,x).  [factor(613,b,c)].
744 Branched_S(x) | -Connected_S(x) | -PP(y,x) | PO(y,y) | -Covers(y,z) | -Cont(z,y).  [factor(651,f,h),merge(d),merge(e),merge(g),merge(i),merge(j),merge(l),merge(m)].
745 -S(x) | C(x,x) | ZEX(intersection(x,x)).  [factor(656,a,b)].
746 -S(x) | ZEX(intersection(x,x)) | Cont(intersection(x,x),x).  [factor(660,a,b)].
747 -Cont(x,y) | leq(x,intersection(y,y)).  [factor(661,a,b)].
748 -Cont(x,y) | -EqDim(x,intersection(y,y)) | P(x,intersection(y,y)).  [factor(662,a,b)].
749 -S(x) | ZEX(difference(x,x)) | EqDim(x,difference(x,x)).  [factor(665,a,b)].
end_of_list.

formulas(demodulators).
end_of_list.

============================== end of clauses for search =============

============================== SEARCH ================================

% Starting search at 0.17 seconds.

given #1 (I,wt=3): 226 lt(c1,c2).  [clausify(1)].

given #2 (I,wt=3): 227 c2 != c1.  [clausify(1)].

given #3 (I,wt=3): 228 -lt(c3,c4).  [clausify(2)].

given #4 (I,wt=3): 229 c4 != c3.  [clausify(2)].

given #5 (I,wt=3): 230 Covers(c5,c6).  [clausify(3)].

given #6 (I,wt=3): 231 c6 != c5.  [clausify(3)].

given #7 (I,wt=3): 232 -Covers(c7,c8).  [clausify(4)].

given #8 (I,wt=3): 233 c8 != c7.  [clausify(4)].

given #9 (I,wt=2): 234 Multipart_Curve(c9).  [clausify(5)].

given #10 (I,wt=2): 235 -Multipart_Curve(c10).  [clausify(6)].

given #11 (I,wt=3): 236 C(c11,c12).  [clausify(7)].

given #12 (I,wt=3): 237 c12 != c11.  [clausify(7)].

given #13 (I,wt=3): 238 -C(c13,c14).  [clausify(8)].

given #14 (I,wt=3): 239 c14 != c13.  [clausify(8)].

given #15 (I,wt=3): 240 sf_contains(c15,c16).  [clausify(9)].

given #16 (I,wt=3): 241 c16 != c15.  [clausify(9)].

given #17 (I,wt=3): 242 -sf_contains(c17,c18).  [clausify(10)].

given #18 (I,wt=3): 243 c18 != c17.  [clausify(10)].

given #19 (I,wt=2): 244 Multipart_S(c19).  [clausify(11)].

given #20 (I,wt=2): 245 -Multipart_S(c20).  [clausify(12)].

given #21 (I,wt=3): 246 Inc(c21,c22).  [clausify(13)].

given #22 (I,wt=3): 247 c22 != c21.  [clausify(13)].

given #23 (I,wt=3): 248 -Inc(c23,c24).  [clausify(14)].

given #24 (I,wt=3): 249 c24 != c23.  [clausify(14)].

given #25 (I,wt=3): 250 P(c25,c26).  [clausify(15)].

given #26 (I,wt=3): 251 c26 != c25.  [clausify(15)].

given #27 (I,wt=3): 252 -P(c27,c28).  [clausify(16)].

given #28 (I,wt=3): 253 c28 != c27.  [clausify(16)].

given #29 (I,wt=2): 254 ZEX(c29).  [clausify(17)].

given #30 (I,wt=2): 255 -ZEX(c30).  [clausify(18)].

given #31 (I,wt=3): 256 Cont(c31,c32).  [clausify(19)].

given #32 (I,wt=3): 257 c32 != c31.  [clausify(19)].

given #33 (I,wt=3): 258 -Cont(c33,c34).  [clausify(20)].

given #34 (I,wt=3): 259 c34 != c33.  [clausify(20)].

given #35 (I,wt=2): 260 sf_geometry(c35).  [clausify(21)].

given #36 (I,wt=2): 261 -sf_geometry(c36).  [clausify(22)].

given #37 (I,wt=2): 262 Curve(c37).  [clausify(23)].

given #38 (I,wt=2): 263 -Curve(c38).  [clausify(24)].

given #39 (I,wt=2): 264 sf_multi_polygon(c39).  [clausify(25)].

given #40 (I,wt=2): 265 -sf_multi_polygon(c40).  [clausify(26)].

given #41 (I,wt=2): 266 sf_multi_curve(c41).  [clausify(27)].

given #42 (I,wt=2): 267 -sf_multi_curve(c42).  [clausify(28)].

given #43 (I,wt=2): 268 sf_multi_line_string(c43).  [clausify(29)].

given #44 (I,wt=2): 269 -sf_multi_line_string(c44).  [clausify(30)].

given #45 (I,wt=2): 270 MaxDim(c45).  [clausify(31)].

given #46 (I,wt=2): 271 -MaxDim(c46).  [clausify(32)].

given #47 (I,wt=2): 272 Min(c47).  [clausify(33)].

given #48 (I,wt=2): 273 -Min(c48).  [clausify(34)].

given #49 (I,wt=2): 274 sf_curve(c49).  [clausify(35)].

given #50 (I,wt=2): 275 -sf_curve(c50).  [clausify(36)].

given #51 (I,wt=3): 276 geq(c51,c52).  [clausify(37)].

given #52 (I,wt=3): 277 c52 != c51.  [clausify(37)].

given #53 (I,wt=3): 278 -geq(c53,c54).  [clausify(38)].

given #54 (I,wt=3): 279 c54 != c53.  [clausify(38)].

given #55 (I,wt=2): 280 sf_polygon(c55).  [clausify(39)].

given #56 (I,wt=2): 281 -sf_polygon(c56).  [clausify(40)].

given #57 (I,wt=2): 282 sf_geometry_collection(c57).  [clausify(41)].

given #58 (I,wt=2): 283 -sf_geometry_collection(c58).  [clausify(42)].

given #59 (I,wt=2): 284 Point(c59).  [clausify(43)].

given #60 (I,wt=2): 285 -Point(c60).  [clausify(44)].

given #61 (I,wt=2): 286 Simple_ArealRegion(c61).  [clausify(45)].

given #62 (I,wt=2): 287 -Simple_ArealRegion(c62).  [clausify(46)].

given #63 (I,wt=2): 288 Closed(c63).  [clausify(47)].

given #64 (I,wt=2): 289 -Closed(c64).  [clausify(48)].

given #65 (I,wt=3): 290 sf_intersects(c65,c66).  [clausify(49)].

given #66 (I,wt=3): 291 c66 != c65.  [clausify(49)].

given #67 (I,wt=3): 292 -sf_intersects(c67,c68).  [clausify(50)].

given #68 (I,wt=3): 293 c68 != c67.  [clausify(50)].

given #69 (I,wt=2): 294 PointRegion(c69).  [clausify(51)].

given #70 (I,wt=2): 295 -PointRegion(c70).  [clausify(52)].

given #71 (I,wt=3): 296 sf_relate(c71,c72).  [clausify(53)].

given #72 (I,wt=3): 297 c72 != c71.  [clausify(53)].

given #73 (I,wt=3): 298 -sf_relate(c73,c74).  [clausify(54)].

given #74 (I,wt=3): 299 c74 != c73.  [clausify(54)].

given #75 (I,wt=2): 300 Multipart_ArealRegion(c75).  [clausify(55)].

given #76 (I,wt=2): 301 -Multipart_ArealRegion(c76).  [clausify(56)].

given #77 (I,wt=3): 302 sf_crosses(c77,c78).  [clausify(57)].

given #78 (I,wt=3): 303 c78 != c77.  [clausify(57)].

given #79 (I,wt=3): 304 -sf_crosses(c79,c80).  [clausify(58)].

given #80 (I,wt=3): 305 c80 != c79.  [clausify(58)].

given #81 (I,wt=3): 306 sf_touches(c81,c82).  [clausify(59)].

given #82 (I,wt=3): 307 c82 != c81.  [clausify(59)].

given #83 (I,wt=3): 308 -sf_touches(c83,c84).  [clausify(60)].

given #84 (I,wt=3): 309 c84 != c83.  [clausify(60)].

given #85 (I,wt=3): 310 gt(c85,c86).  [clausify(61)].

given #86 (I,wt=3): 311 c86 != c85.  [clausify(61)].

given #87 (I,wt=3): 312 -gt(c87,c88).  [clausify(62)].

given #88 (I,wt=3): 313 c88 != c87.  [clausify(62)].

given #89 (I,wt=2): 314 Branched_S(c89).  [clausify(63)].

given #90 (I,wt=2): 315 -Branched_S(c90).  [clausify(64)].

given #91 (I,wt=2): 316 sf_surface(c91).  [clausify(65)].

given #92 (I,wt=2): 317 -sf_surface(c92).  [clausify(66)].

given #93 (I,wt=2): 318 sf_polyhedral_surface(c93).  [clausify(67)].

given #94 (I,wt=2): 319 -sf_polyhedral_surface(c94).  [clausify(68)].

given #95 (I,wt=2): 320 Simple_S(c95).  [clausify(69)].

given #96 (I,wt=2): 321 -Simple_S(c96).  [clausify(70)].

given #97 (I,wt=2): 322 sf_linear_ring(c97).  [clausify(71)].

given #98 (I,wt=2): 323 -sf_linear_ring(c98).  [clausify(72)].

given #99 (I,wt=3): 324 BCont(c99,c100).  [clausify(73)].

given #100 (I,wt=3): 325 c100 != c99.  [clausify(73)].

given #101 (I,wt=3): 326 -BCont(c101,c102).  [clausify(74)].

given #102 (I,wt=3): 327 c102 != c101.  [clausify(74)].

given #103 (I,wt=3): 328 EqDim(c103,c104).  [clausify(75)].

given #104 (I,wt=3): 329 c104 != c103.  [clausify(75)].

given #105 (I,wt=3): 330 -EqDim(c105,c106).  [clausify(76)].

given #106 (I,wt=3): 331 c106 != c105.  [clausify(76)].

given #107 (I,wt=3): 332 sf_disjoint(c107,c108).  [clausify(77)].

given #108 (I,wt=3): 333 c108 != c107.  [clausify(77)].

given #109 (I,wt=3): 334 -sf_disjoint(c109,c110).  [clausify(78)].

given #110 (I,wt=3): 335 c110 != c109.  [clausify(78)].

given #111 (I,wt=2): 336 sf_tin(c111).  [clausify(79)].

given #112 (I,wt=2): 337 -sf_tin(c112).  [clausify(80)].

given #113 (I,wt=3): 338 leq(c113,c114).  [clausify(81)].

given #114 (I,wt=3): 339 c114 != c113.  [clausify(81)].

given #115 (I,wt=3): 340 -leq(c115,c116).  [clausify(82)].

given #116 (I,wt=3): 341 c116 != c115.  [clausify(82)].

given #117 (I,wt=2): 342 sf_line_string(c117).  [clausify(83)].

given #118 (I,wt=2): 343 -sf_line_string(c118).  [clausify(84)].

given #119 (I,wt=2): 344 ArealRegion(c119).  [clausify(85)].

given #120 (I,wt=2): 345 -ArealRegion(c120).  [clausify(86)].

given #121 (I,wt=2): 346 sf_triangle(c121).  [clausify(87)].

given #122 (I,wt=2): 347 -sf_triangle(c122).  [clausify(88)].

given #123 (I,wt=2): 348 sf_line(c123).  [clausify(89)].

given #124 (I,wt=2): 349 -sf_line(c124).  [clausify(90)].

given #125 (I,wt=2): 350 sf_point(c125).  [clausify(91)].

given #126 (I,wt=2): 351 -sf_point(c126).  [clausify(92)].

given #127 (I,wt=3): 352 sf_overlaps(c127,c128).  [clausify(93)].

given #128 (I,wt=3): 353 c128 != c127.  [clausify(93)].

given #129 (I,wt=3): 354 -sf_overlaps(c129,c130).  [clausify(94)].

given #130 (I,wt=3): 355 c130 != c129.  [clausify(94)].

given #131 (I,wt=2): 356 sf_multi_surface(c131).  [clausify(95)].

given #132 (I,wt=2): 357 -sf_multi_surface(c132).  [clausify(96)].

given #133 (I,wt=3): 358 sf_equals(c133,c134).  [clausify(97)].

given #134 (I,wt=3): 359 c134 != c133.  [clausify(97)].

given #135 (I,wt=3): 360 -sf_equals(c135,c136).  [clausify(98)].

given #136 (I,wt=3): 361 c136 != c135.  [clausify(98)].

given #137 (I,wt=2): 362 S(c137).  [clausify(99)].

given #138 (I,wt=2): 363 -S(c138).  [clausify(100)].

given #139 (I,wt=2): 364 Connected_S(c139).  [clausify(101)].

given #140 (I,wt=2): 365 -Connected_S(c140).  [clausify(102)].

given #141 (I,wt=3): 366 SC(c141,c142).  [clausify(103)].

given #142 (I,wt=3): 367 c142 != c141.  [clausify(103)].

given #143 (I,wt=3): 368 -SC(c143,c144).  [clausify(104)].

given #144 (I,wt=3): 369 c144 != c143.  [clausify(104)].

given #145 (I,wt=2): 370 Max(c145).  [clausify(105)].

given #146 (I,wt=2): 371 -Max(c146).  [clausify(106)].

given #147 (I,wt=3): 372 sf_within(c147,c148).  [clausify(107)].

given #148 (I,wt=3): 373 c148 != c147.  [clausify(107)].

given #149 (I,wt=3): 374 -sf_within(c149,c150).  [clausify(108)].

given #150 (I,wt=3): 375 c150 != c149.  [clausify(108)].

given #151 (I,wt=3): 376 PP(c151,c152).  [clausify(109)].

given #152 (I,wt=3): 377 c152 != c151.  [clausify(109)].

given #153 (I,wt=3): 378 -PP(c153,c154).  [clausify(110)].

given #154 (I,wt=3): 379 c154 != c153.  [clausify(110)].

given #155 (I,wt=2): 380 MinDim(c155).  [clausify(111)].

given #156 (I,wt=2): 381 -MinDim(c156).  [clausify(112)].

given #157 (I,wt=2): 382 sf_multi_point(c157).  [clausify(113)].

given #158 (I,wt=2): 383 -sf_multi_point(c158).  [clausify(114)].

given #159 (I,wt=3): 384 PO(c159,c160).  [clausify(115)].

given #160 (I,wt=3): 385 c160 != c159.  [clausify(115)].

given #161 (I,wt=3): 386 -PO(c161,c162).  [clausify(116)].

given #162 (I,wt=3): 387 c162 != c161.  [clausify(116)].

given #163 (I,wt=4): 388 -sf_geometry(x) | S(x).  [clausify(117)].

given #164 (I,wt=4): 389 sf_geometry(x) | -S(x).  [clausify(117)].

given #165 (I,wt=9): 390 -sf_relate(x,y) | sf_intersects(x,y) | sf_disjoint(x,y).  [clausify(118)].

given #166 (I,wt=6): 391 sf_relate(x,y) | -sf_intersects(x,y).  [clausify(118)].

given #167 (I,wt=6): 392 sf_relate(x,y) | -sf_disjoint(x,y).  [clausify(118)].

given #168 (I,wt=6): 393 -SC(x,y) | C(x,y).  [clausify(119)].

given #169 (I,wt=9): 394 -SC(x,y) | -Cont(z,x) | -P(z,y).  [clausify(120)].

given #170 (I,wt=9): 395 -SC(x,y) | -P(z,x) | -Cont(z,y).  [clausify(121)].

given #171 (I,wt=11): 396 -C(x,y) | Cont(f1(x,y),x) | SC(x,y).  [clausify(122)].

given #172 (I,wt=11): 397 -C(x,y) | Cont(f1(x,y),y) | SC(x,y).  [clausify(122)].

given #173 (I,wt=16): 398 -C(x,y) | P(f1(x,y),x) | P(f1(x,y),y) | SC(x,y).  [clausify(122)].

given #174 (I,wt=3): 399 -SC(x,x).  [clausify(123)].

given #175 (I,wt=6): 400 -SC(x,y) | SC(y,x).  [clausify(124)].

given #176 (I,wt=8): 401 -SC(x,y) | lt(f2(x,y),x).  [clausify(125)].

given #177 (I,wt=8): 402 -SC(x,y) | lt(f2(x,y),y).  [clausify(125)].

given #178 (I,wt=8): 403 -SC(x,y) | Cont(f2(x,y),x).  [clausify(125)].

given #179 (I,wt=8): 404 -SC(x,y) | Cont(f2(x,y),y).  [clausify(125)].

given #180 (I,wt=8): 405 -SC(x,y) | Cont(f3(x,y),x).  [clausify(126)].

given #181 (I,wt=8): 406 -SC(x,y) | Cont(f3(x,y),y).  [clausify(126)].

given #182 (I,wt=12): 408 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,x).  [clausify(126)].

given #183 (I,wt=12): 410 -SC(x,y) | -Cont(z,x) | -Cont(z,y) | -EqDim(z,y).  [clausify(126)].

given #184 (I,wt=14): 411 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f4(x,y),x).  [clausify(126)].

given #185 (I,wt=14): 412 SC(x,y) | -Cont(z,x) | -Cont(z,y) | Cont(f4(x,y),y).  [clausify(126)].

given #186 (I,wt=29): 413 SC(x,y) | -Cont(z,x) | -Cont(z,y) | -leq(f4(x,y),x) | EqDim(f4(x,y),x) | -leq(f4(x,y),y) | EqDim(f4(x,y),y).  [clausify(126)].

given #187 (I,wt=6): 414 -EqDim(x,y) | leq(x,y).  [clausify(127)].

given #188 (I,wt=6): 415 -EqDim(x,y) | leq(y,x).  [clausify(127)].

given #189 (I,wt=9): 416 EqDim(x,y) | -leq(x,y) | -leq(y,x).  [clausify(127)].

given #190 (I,wt=5): 417 -leq(x,y) | S(x).  [clausify(128)].

given #191 (I,wt=5): 418 -leq(x,y) | S(y).  [clausify(129)].

given #192 (I,wt=4): 419 -ZEX(x) | S(x).  [clausify(130)].

given #193 (I,wt=5): 420 -S(x) | leq(x,x).  [clausify(131)].

given #194 (I,wt=9): 421 -leq(x,y) | -leq(y,z) | leq(x,z).  [clausify(132)].

given #195 (I,wt=7): 422 -ZEX(x) | -ZEX(y) | y = x.  [clausify(133)].

given #196 (I,wt=7): 423 -ZEX(x) | -S(y) | leq(x,y).  [clausify(134)].

given #197 (I,wt=6): 424 -Cont(x,y) | leq(x,y).  [clausify(135)].

given #198 (I,wt=2): 425 MinDim(c163).  [clausify(136)].

given #199 (I,wt=4): 426 -MaxDim(x) | S(x).  [clausify(137)].

given #200 (I,wt=4): 427 -MaxDim(x) | -ZEX(x).  [clausify(137)].

given #201 (I,wt=7): 428 -MaxDim(x) | -S(y) | leq(y,x).  [clausify(137)].

given #202 (I,wt=9): 429 MaxDim(x) | -S(x) | ZEX(x) | S(f5(x)).  [clausify(137)].

given #203 (I,wt=10): 430 MaxDim(x) | -S(x) | ZEX(x) | -leq(f5(x),x).  [clausify(137)].

given #204 (I,wt=4): 431 -MinDim(x) | S(x).  [clausify(138)].

given #205 (I,wt=4): 432 -MinDim(x) | -ZEX(x).  [clausify(138)].

given #206 (I,wt=9): 433 -MinDim(x) | -S(y) | ZEX(y) | leq(x,y).  [clausify(138)].

given #207 (I,wt=9): 434 MinDim(x) | -S(x) | ZEX(x) | S(f6(x)).  [clausify(138)].

given #208 (I,wt=9): 435 MinDim(x) | -S(x) | ZEX(x) | -ZEX(f6(x)).  [clausify(138)].

given #209 (I,wt=10): 436 MinDim(x) | -S(x) | ZEX(x) | -leq(x,f6(x)).  [clausify(138)].

given #210 (I,wt=7): 437 -S(x) | ZEX(x) | Cont(x,x).  [clausify(139)].

given #211 (I,wt=5): 438 S(x) | -Cont(x,x).  [clausify(139)].

given #212 (I,wt=9): 440 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(140)].

given #213 (I,wt=9): 441 -Cont(x,y) | -Cont(y,z) | Cont(x,z).  [clausify(141)].

given #214 (I,wt=5): 442 -ZEX(x) | -Cont(y,x).  [clausify(142)].

given #215 (I,wt=5): 443 -ZEX(x) | -Cont(x,y).  [clausify(142)].

given #216 (I,wt=6): 444 -P(x,y) | Cont(x,y).  [clausify(144)].

given #217 (I,wt=6): 445 -P(x,y) | EqDim(x,y).  [clausify(144)].

given #218 (I,wt=9): 446 P(x,y) | -Cont(x,y) | -EqDim(x,y).  [clausify(144)].

given #219 (I,wt=8): 447 -C(x,y) | Cont(f7(x,y),x).  [clausify(145)].

given #220 (I,wt=8): 448 -C(x,y) | Cont(f7(x,y),y).  [clausify(145)].

given #221 (I,wt=9): 449 C(x,y) | -Cont(z,x) | -Cont(z,y).  [clausify(145)].

given #222 (I,wt=3): 450 -Inc(x,x).  [clausify(146)].

given #223 (I,wt=6): 451 -Inc(x,y) | Inc(y,x).  [clausify(147)].

given #224 (I,wt=6): 452 -EqDim(x,y) | -Inc(x,y).  [clausify(148)].

given #225 (I,wt=9): 453 -Inc(x,y) | lt(x,y) | lt(y,x).  [clausify(149)].

given #226 (I,wt=9): 454 -Cont(x,y) | -lt(x,y) | Inc(x,y).  [clausify(150)].

given #227 (I,wt=9): 455 -Inc(x,y) | -P(y,z) | Inc(x,z).  [clausify(151)].

given #228 (I,wt=13): 456 -Inc(x,y) | leq(f8(x,y),x) | leq(f9(x,y),y).  [clausify(152)].

given #229 (I,wt=13): 457 -Inc(x,y) | leq(f8(x,y),x) | -EqDim(f9(x,y),y).  [clausify(152)].

given #230 (I,wt=13): 458 -Inc(x,y) | leq(f8(x,y),x) | Cont(f9(x,y),y).  [clausify(152)].

given #231 (I,wt=13): 459 -Inc(x,y) | leq(f8(x,y),x) | P(f9(x,y),x).  [clausify(152)].

given #232 (I,wt=13): 460 -Inc(x,y) | -EqDim(f8(x,y),x) | leq(f9(x,y),y).  [clausify(152)].

given #233 (I,wt=13): 461 -Inc(x,y) | -EqDim(f8(x,y),x) | -EqDim(f9(x,y),y).  [clausify(152)].

given #234 (I,wt=13): 462 -Inc(x,y) | -EqDim(f8(x,y),x) | Cont(f9(x,y),y).  [clausify(152)].

given #235 (I,wt=13): 463 -Inc(x,y) | -EqDim(f8(x,y),x) | P(f9(x,y),x).  [clausify(152)].

given #236 (I,wt=13): 464 -Inc(x,y) | Cont(f8(x,y),x) | leq(f9(x,y),y).  [clausify(152)].

given #237 (I,wt=13): 465 -Inc(x,y) | Cont(f8(x,y),x) | -EqDim(f9(x,y),y).  [clausify(152)].

given #238 (I,wt=13): 466 -Inc(x,y) | Cont(f8(x,y),x) | Cont(f9(x,y),y).  [clausify(152)].

given #239 (I,wt=13): 467 -Inc(x,y) | Cont(f8(x,y),x) | P(f9(x,y),x).  [clausify(152)].

given #240 (I,wt=13): 468 -Inc(x,y) | P(f8(x,y),y) | leq(f9(x,y),y).  [clausify(152)].

given #241 (I,wt=13): 469 -Inc(x,y) | P(f8(x,y),y) | -EqDim(f9(x,y),y).  [clausify(152)].

given #242 (I,wt=13): 470 -Inc(x,y) | P(f8(x,y),y) | Cont(f9(x,y),y).  [clausify(152)].

given #243 (I,wt=13): 471 -Inc(x,y) | P(f8(x,y),y) | P(f9(x,y),x).  [clausify(152)].

given #244 (I,wt=15): 472 Inc(x,y) | -leq(z,x) | EqDim(z,x) | -Cont(z,x) | -P(z,y).  [clausify(152)].

given #245 (I,wt=15): 473 Inc(x,y) | -leq(z,y) | EqDim(z,y) | -Cont(z,y) | -P(z,x).  [clausify(152)].

given #246 (I,wt=7): 474 -S(x) | ZEX(x) | PO(x,x).  [clausify(153)].

given #247 (I,wt=6): 475 -PO(x,y) | PO(y,x).  [clausify(154)].

given #248 (I,wt=6): 476 -PO(x,y) | EqDim(x,y).  [clausify(155)].

given #249 (I,wt=8): 477 -PO(x,y) | P(f10(x,y),x).  [clausify(156)].

given #250 (I,wt=8): 478 -PO(x,y) | P(f10(x,y),y).  [clausify(156)].

given #251 (I,wt=9): 479 PO(x,y) | -P(z,x) | -P(z,y).  [clausify(156)].

given #252 (I,wt=4): 480 -Max(x) | S(x).  [clausify(157)].

given #253 (I,wt=4): 481 -Max(x) | -ZEX(x).  [clausify(157)].

given #254 (I,wt=5): 482 -Max(x) | -PP(x,y).  [clausify(157)].

given #255 (I,wt=10): 483 Max(x) | -S(x) | ZEX(x) | PP(x,f11(x)).  [clausify(157)].

given #256 (I,wt=4): 484 -Min(x) | S(x).  [clausify(158)].

given #257 (I,wt=4): 485 -Min(x) | -ZEX(x).  [clausify(158)].

given #258 (I,wt=5): 486 -Min(x) | -PP(y,x).  [clausify(158)].

given #259 (I,wt=10): 487 Min(x) | -S(x) | ZEX(x) | PP(f12(x),x).  [clausify(158)].

given #260 (I,wt=6): 488 -PP(x,y) | P(x,y).  [clausify(159)].

given #261 (I,wt=6): 489 -PP(x,y) | y != x.  [clausify(159)].

given #262 (I,wt=9): 490 PP(x,y) | -P(x,y) | y = x.  [clausify(159)].

given #263 (I,wt=6): 491 -BCont(x,y) | Cont(x,y).  [clausify(160)].

given #264 (I,wt=6): 492 -BCont(x,y) | -EqDim(x,y).  [clausify(160)].

given #265 (I,wt=20): 493 -SC(x,y) | -Min(x) | -P(x,z) | -Cont(y,z) | -Cont(u,x) | -Cont(u,y) | BCont(u,x).  [clausify(161)].

given #266 (I,wt=21): 494 -SC(x,y) | -P(x,z) | -P(y,z) | -Cont(u,x) | -Cont(u,y) | -Covers(z,u) | -BCont(u,z).  [clausify(162)].

given #267 (I,wt=15): 495 -BCont(x,y) | -P(y,z) | P(f13(x,y,z),z) | BCont(x,z).  [clausify(163)].

given #268 (I,wt=15): 496 -BCont(x,y) | -P(y,z) | -PO(f13(x,y,z),y) | BCont(x,z).  [clausify(163)].

given #269 (I,wt=15): 497 -BCont(x,y) | -P(y,z) | P(f14(x,y,z),x) | BCont(x,z).  [clausify(163)].

given #270 (I,wt=18): 498 -BCont(x,y) | -P(y,z) | Cont(f14(x,y,z),f13(x,y,z)) | BCont(x,z).  [clausify(163)].

given #271 (I,wt=9): 499 -BCont(x,y) | -Cont(z,x) | BCont(z,y).  [clausify(164)].

given #272 (I,wt=6): 500 -Covers(x,y) | lt(y,x).  [clausify(165)].

given #273 (I,wt=11): 501 -Covers(x,y) | -S(z) | -lt(y,z) | -lt(z,x).  [clausify(165)].

given #274 (I,wt=10): 502 Covers(x,y) | -lt(y,x) | S(f15(x,y)).  [clausify(165)].

given #275 (I,wt=11): 503 Covers(x,y) | -lt(y,x) | lt(y,f15(x,y)).  [clausify(165)].

given #276 (I,wt=11): 504 Covers(x,y) | -lt(y,x) | lt(f15(x,y),x).  [clausify(165)].

given #277 (I,wt=6): 505 -gt(x,y) | lt(y,x).  [clausify(166)].

given #278 (I,wt=6): 506 gt(x,y) | -lt(y,x).  [clausify(166)].

given #279 (I,wt=6): 507 -geq(x,y) | leq(y,x).  [clausify(167)].

given #280 (I,wt=6): 508 geq(x,y) | -leq(y,x).  [clausify(167)].

given #281 (I,wt=6): 509 -lt(x,y) | leq(x,y).  [clausify(168)].

given #282 (I,wt=6): 510 -lt(x,y) | -EqDim(x,y).  [clausify(168)].

given #283 (I,wt=9): 511 lt(x,y) | -leq(x,y) | EqDim(x,y).  [clausify(168)].

given #284 (I,wt=5): 512 -Closed(x) | -BCont(y,x).  [clausify(169)].

given #285 (I,wt=6): 513 Closed(x) | BCont(f16(x),x).  [clausify(169)].

given #286 (I,wt=5): 514 -sf_contains(x,y) | sf_geometry(x).  [clausify(170)].

given #287 (I,wt=5): 515 -sf_contains(x,y) | sf_geometry(y).  [clausify(170)].

given #288 (I,wt=6): 516 -sf_contains(x,y) | Cont(x,y).  [clausify(170)].

given #289 (I,wt=10): 517 sf_contains(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Cont(x,y).  [clausify(170)].

given #290 (I,wt=4): 518 -sf_multi_polygon(x) | sf_multi_surface(x).  [clausify(171)].

given #291 (I,wt=4): 519 -sf_geometry_collection(x) | -sf_point(x).  [clausify(172)].

given #292 (I,wt=4): 520 -sf_geometry_collection(x) | -sf_curve(x).  [clausify(172)].

given #293 (I,wt=4): 521 -sf_geometry_collection(x) | -sf_surface(x).  [clausify(172)].

given #294 (I,wt=8): 522 -sf_geometry_collection(x) | sf_multi_point(x) | sf_multi_curve(x) | sf_multi_surface(x).  [clausify(173)].

given #295 (I,wt=4): 523 sf_geometry_collection(x) | -sf_multi_point(x).  [clausify(173)].

given #296 (I,wt=4): 524 sf_geometry_collection(x) | -sf_multi_curve(x).  [clausify(173)].

given #297 (I,wt=4): 525 sf_geometry_collection(x) | -sf_multi_surface(x).  [clausify(173)].

given #298 (I,wt=4): 526 -sf_point(x) | -sf_curve(x).  [clausify(174)].

given #299 (I,wt=4): 527 -sf_point(x) | -sf_surface(x).  [clausify(174)].

given #300 (I,wt=10): 528 -sf_geometry(x) | sf_point(x) | sf_curve(x) | sf_surface(x) | sf_geometry_collection(x).  [clausify(175)].

given #301 (I,wt=4): 529 sf_geometry(x) | -sf_point(x).  [clausify(175)].

given #302 (I,wt=4): 530 sf_geometry(x) | -sf_curve(x).  [clausify(175)].

given #303 (I,wt=4): 531 sf_geometry(x) | -sf_surface(x).  [clausify(175)].

given #304 (I,wt=4): 532 sf_geometry(x) | -sf_geometry_collection(x).  [clausify(175)].

given #305 (I,wt=4): 533 -sf_surface(x) | -sf_curve(x).  [clausify(176)].

given #306 (I,wt=4): 534 -sf_multi_line_string(x) | sf_multi_curve(x).  [clausify(178)].

given #307 (I,wt=4): 535 -sf_triangle(x) | sf_polygon(x).  [clausify(179)].

given #308 (I,wt=4): 536 -sf_triangle(x) | sf_tin(x).  [clausify(179)].

given #309 (I,wt=6): 537 sf_triangle(x) | -sf_polygon(x) | -sf_tin(x).  [clausify(179)].

given #310 (I,wt=4): 538 -sf_tin(x) | sf_polyhedral_surface(x).  [clausify(180)].

given #311 (I,wt=4): 539 -sf_polyhedral_surface(x) | sf_surface(x).  [clausify(181)].

given #312 (I,wt=4): 540 -sf_polygon(x) | sf_polyhedral_surface(x).  [clausify(182)].

given #313 (I,wt=4): 541 -sf_linear_ring(x) | sf_line_string(x).  [clausify(183)].

given #314 (I,wt=4): 542 -sf_line_string(x) | sf_curve(x).  [clausify(184)].

given #315 (I,wt=4): 543 -sf_line(x) | sf_line_string(x).  [clausify(185)].

given #316 (I,wt=5): 544 -sf_overlaps(x,y) | sf_geometry(x).  [clausify(186)].

given #317 (I,wt=5): 545 -sf_overlaps(x,y) | sf_geometry(y).  [clausify(186)].

given #318 (I,wt=6): 546 -sf_overlaps(x,y) | PO(x,y).  [clausify(186)].

given #319 (I,wt=6): 547 -sf_overlaps(x,y) | -P(x,y).  [clausify(186)].

given #320 (I,wt=6): 548 -sf_overlaps(x,y) | -P(y,x).  [clausify(186)].

given #321 (I,wt=16): 549 sf_overlaps(x,y) | -sf_geometry(x) | -sf_geometry(y) | -PO(x,y) | P(x,y) | P(y,x).  [clausify(186)].

given #322 (I,wt=6): 550 -sf_within(x,y) | sf_contains(y,x).  [clausify(187)].

given #323 (I,wt=6): 551 sf_within(x,y) | -sf_contains(y,x).  [clausify(187)].

given #324 (I,wt=5): 552 -sf_crosses(x,y) | sf_geometry(x).  [clausify(189)].

given #325 (I,wt=5): 553 -sf_crosses(x,y) | sf_geometry(y).  [clausify(189)].

given #326 (I,wt=18): 554 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).  [clausify(189)].

given #327 (I,wt=17): 555 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).  [clausify(189)].

given #328 (I,wt=17): 556 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).  [clausify(189)].

given #329 (I,wt=18): 557 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).  [clausify(189)].

given #330 (I,wt=17): 558 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).  [clausify(189)].

given #331 (I,wt=17): 559 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).  [clausify(189)].

given #332 (I,wt=18): 560 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).  [clausify(189)].

given #333 (I,wt=17): 561 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).  [clausify(189)].

given #334 (I,wt=17): 562 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).  [clausify(189)].

given #335 (I,wt=18): 563 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).  [clausify(189)].

given #336 (I,wt=17): 564 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).  [clausify(189)].

given #337 (I,wt=17): 565 -sf_crosses(x,y) | Inc(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).  [clausify(189)].

given #338 (I,wt=18): 566 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).  [clausify(189)].

given #339 (I,wt=17): 567 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).  [clausify(189)].

given #340 (I,wt=17): 568 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).  [clausify(189)].

given #341 (I,wt=18): 569 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).  [clausify(189)].

given #342 (I,wt=17): 570 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).  [clausify(189)].

given #343 (I,wt=17): 571 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).  [clausify(189)].

given #344 (I,wt=18): 572 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).  [clausify(189)].

given #345 (I,wt=17): 573 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).  [clausify(189)].

given #346 (I,wt=17): 574 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).  [clausify(189)].

given #347 (I,wt=18): 575 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).  [clausify(189)].

given #348 (I,wt=17): 576 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).  [clausify(189)].

given #349 (I,wt=17): 577 -sf_crosses(x,y) | -Cont(x,y) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).  [clausify(189)].

given #350 (I,wt=18): 578 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | SC(x,y).  [clausify(189)].

given #351 (I,wt=17): 579 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(x).  [clausify(189)].

given #352 (I,wt=17): 580 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,x) | Curve(y).  [clausify(189)].

given #353 (I,wt=18): 581 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | SC(x,y).  [clausify(189)].

given #354 (I,wt=17): 582 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(x).  [clausify(189)].

given #355 (I,wt=17): 583 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | lt(z,y) | Curve(y).  [clausify(189)].

given #356 (I,wt=18): 584 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | SC(x,y).  [clausify(189)].

given #357 (I,wt=17): 585 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(x).  [clausify(189)].

given #358 (I,wt=17): 586 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,x) | Curve(y).  [clausify(189)].

given #359 (I,wt=18): 587 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | SC(x,y).  [clausify(189)].

given #360 (I,wt=17): 588 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(x).  [clausify(189)].

given #361 (I,wt=17): 589 -sf_crosses(x,y) | -Cont(y,x) | -Cont(z,x) | -Cont(z,y) | -BCont(z,y) | Curve(y).  [clausify(189)].

given #362 (I,wt=16): 590 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -Inc(x,y) | Cont(x,y) | Cont(y,x).  [clausify(189)].

given #363 (I,wt=12): 591 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | Cont(f17(x,y),x).  [clausify(189)].

given #364 (I,wt=12): 592 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | Cont(f17(x,y),y).  [clausify(189)].

given #365 (I,wt=27): 593 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -lt(f17(x,y),x) | -lt(f17(x,y),y) | BCont(f17(x,y),x) | BCont(f17(x,y),y).  [clausify(189)].

given #366 (I,wt=14): 594 sf_crosses(x,y) | -sf_geometry(x) | -sf_geometry(y) | -SC(x,y) | -Curve(x) | -Curve(y).  [clausify(189)].

given #367 (I,wt=4): 595 -Curve(x) | -ZEX(x).  [clausify(190)].

given #368 (I,wt=4): 596 -Curve(x) | -MinDim(x).  [clausify(190)].

given #369 (I,wt=7): 597 -Curve(x) | -MinDim(y) | Covers(x,y).  [clausify(190)].

given #370 (I,wt=7): 598 -Curve(x) | MinDim(y) | -Covers(x,y).  [clausify(190)].

given #371 (I,wt=15): 599 ZEX(x) | MinDim(x) | MinDim(f18(x)) | Covers(x,f18(x)) | -MinDim(y) | Curve(x).  [clausify(191)].

given #372 (I,wt=5): 601 -sf_touches(x,y) | sf_geometry(x).  [clausify(192)].

given #373 (I,wt=5): 602 -sf_touches(x,y) | sf_geometry(y).  [clausify(192)].

given #374 (I,wt=12): 603 -sf_touches(x,y) | SC(x,y) | BCont(x,y) | BCont(y,x).  [clausify(192)].

given #375 (I,wt=10): 604 sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -SC(x,y).  [clausify(192)].

given #376 (I,wt=10): 605 sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -BCont(x,y).  [clausify(192)].

given #377 (I,wt=10): 606 sf_touches(x,y) | -sf_geometry(x) | -sf_geometry(y) | -BCont(y,x).  [clausify(192)].

given #378 (I,wt=6): 607 -sf_equals(x,y) | sf_contains(x,y).  [clausify(193)].

given #379 (I,wt=6): 608 -sf_equals(x,y) | sf_within(x,y).  [clausify(193)].

given #380 (I,wt=9): 609 sf_equals(x,y) | -sf_contains(x,y) | -sf_within(x,y).  [clausify(193)].

given #381 (I,wt=5): 610 -sf_intersects(x,y) | sf_geometry(x).  [clausify(194)].

given #382 (I,wt=5): 611 -sf_intersects(x,y) | sf_geometry(y).  [clausify(194)].

given #383 (I,wt=6): 612 -sf_intersects(x,y) | -sf_disjoint(x,y).  [clausify(194)].

given #384 (I,wt=10): 613 sf_intersects(x,y) | -sf_geometry(x) | -sf_geometry(y) | sf_disjoint(x,y).  [clausify(194)].

given #385 (I,wt=5): 614 -sf_disjoint(x,y) | sf_geometry(x).  [clausify(195)].

given #386 (I,wt=5): 615 -sf_disjoint(x,y) | sf_geometry(y).  [clausify(195)].

given #387 (I,wt=6): 616 -sf_disjoint(x,y) | -C(x,y).  [clausify(195)].

given #388 (I,wt=6): 617 -sf_geometry_collection(x) | Multipart_S(x) | Branched_S(x).  [clausify(196)].

given #389 (I,wt=9): 618 -sf_multi_polygon(x) | -P(y,x) | -Min(y) | sf_polygon(y).  [clausify(197)].

given #390 (I,wt=8): 619 sf_multi_polygon(x) | -sf_multi_surface(x) | P(f19(x),x).  [clausify(197)].

given #391 (I,wt=7): 620 sf_multi_polygon(x) | -sf_multi_surface(x) | Min(f19(x)).  [clausify(197)].

given #392 (I,wt=7): 621 sf_multi_polygon(x) | -sf_multi_surface(x) | -sf_polygon(f19(x)).  [clausify(197)].

given #393 (I,wt=4): 622 -sf_polygon(x) | Simple_ArealRegion(x).  [clausify(198)].

given #394 (I,wt=5): 623 -sf_polygon(x) | sf_linear_ring(f20(x)).  [clausify(199)].

given #395 (I,wt=6): 624 -sf_polygon(x) | BCont(f20(x),x).  [clausify(199)].

given #396 (I,wt=8): 625 -sf_polygon(x) | boundary(f21(x)) = f20(x).  [clausify(199)].

given #397 (I,wt=6): 626 -sf_polygon(x) | P(x,f21(x)).  [clausify(199)].

given #398 (I,wt=10): 627 -sf_polygon(x) | -BCont(y,x) | P(y,f22(x,y)).  [clausify(200)].

given #399 (I,wt=10): 628 -sf_polygon(x) | -BCont(y,x) | BCont(f22(x,y),x).  [clausify(200)].

given #400 (I,wt=9): 629 -sf_polygon(x) | -BCont(y,x) | sf_linear_ring(f22(x,y)).  [clausify(200)].

given #401 (I,wt=7): 630 -Cont(x,boundary(y)) | BCont(x,y).  [clausify(201)].

given #402 (I,wt=7): 631 Cont(x,boundary(y)) | -BCont(x,y).  [clausify(201)].

given #403 (I,wt=4): 632 -Simple_ArealRegion(x) | ArealRegion(x).  [clausify(202)].

given #404 (I,wt=4): 633 -Simple_ArealRegion(x) | Simple_S(x).  [clausify(202)].

given #405 (I,wt=6): 634 Simple_ArealRegion(x) | -ArealRegion(x) | -Simple_S(x).  [clausify(202)].

given #406 (I,wt=4): 635 -Simple_S(x) | Connected_S(x).  [clausify(203)].

given #407 (I,wt=4): 636 -Simple_S(x) | -Branched_S(x).  [clausify(203)].

given #408 (I,wt=6): 637 Simple_S(x) | -Connected_S(x) | Branched_S(x).  [clausify(203)].

given #409 (I,wt=4): 638 -Branched_S(x) | Connected_S(x).  [clausify(204)].

given #410 (I,wt=6): 639 -Branched_S(x) | PP(f23(x),x).  [clausify(204)].

given #411 (I,wt=6): 640 -Branched_S(x) | PP(f24(x),x).  [clausify(204)].

given #412 (I,wt=6): 641 -Branched_S(x) | PP(f25(x),x).  [clausify(204)].

given #413 (I,wt=7): 642 -Branched_S(x) | -PO(f23(x),f24(x)).  [clausify(204)].

given #414 (I,wt=7): 643 -Branched_S(x) | -PO(f23(x),f25(x)).  [clausify(204)].

given #415 (I,wt=7): 644 -Branched_S(x) | -PO(f24(x),f25(x)).  [clausify(204)].

given #416 (I,wt=7): 645 -Branched_S(x) | Covers(f23(x),f26(x)).  [clausify(204)].

given #417 (I,wt=7): 646 -Branched_S(x) | Covers(f24(x),f26(x)).  [clausify(204)].

given #418 (I,wt=7): 647 -Branched_S(x) | Covers(f25(x),f26(x)).  [clausify(204)].

given #419 (I,wt=7): 648 -Branched_S(x) | Cont(f26(x),f23(x)).  [clausify(204)].

given #420 (I,wt=7): 649 -Branched_S(x) | Cont(f26(x),f24(x)).  [clausify(204)].

given #421 (I,wt=7): 650 -Branched_S(x) | Cont(f26(x),f25(x)).  [clausify(204)].

given #422 (I,wt=40): 651 Branched_S(x) | -Connected_S(x) | -PP(y,x) | -PP(z,x) | -PP(u,x) | PO(y,z) | PO(y,u) | PO(z,u) | -Covers(y,w) | -Covers(z,w) | -Covers(u,w) | -Cont(w,y) | -Cont(w,z) | -Cont(w,u).  [clausify(204)].

given #423 (I,wt=4): 652 -Connected_S(x) | S(x).  [clausify(205)].

given #424 (I,wt=10): 653 -Connected_S(x) | -PP(y,x) | SC(y,difference(x,y)).  [clausify(205)].

given #425 (I,wt=8): 654 Connected_S(x) | -S(x) | PP(f27(x),x).  [clausify(205)].

given #426 (I,wt=11): 655 Connected_S(x) | -S(x) | -SC(f27(x),difference(x,f27(x))).  [clausify(205)].

given #427 (I,wt=11): 656 -S(x) | -S(y) | C(x,y) | ZEX(intersection(x,y)).  [clausify(206)].

given #428 (I,wt=6): 657 S(x) | -ZEX(intersection(x,y)).  [clausify(206)].

given #429 (I,wt=6): 658 S(x) | -ZEX(intersection(y,x)).  [clausify(206)].

given #430 (I,wt=7): 659 -C(x,y) | -ZEX(intersection(x,y)).  [clausify(206)].

given #431 (I,wt=13): 660 -S(x) | -S(y) | ZEX(intersection(x,y)) | Cont(intersection(x,y),x).  [clausify(207)].

given #432 (I,wt=11): 661 -Cont(x,y) | -Cont(x,z) | leq(x,intersection(y,z)).  [clausify(208)].

given #433 (I,wt=16): 662 -Cont(x,y) | -Cont(x,z) | -EqDim(x,intersection(y,z)) | P(x,intersection(y,z)).  [clausify(209)].

given #434 (I,wt=8): 663 Cont(x,y) | -P(x,intersection(y,z)).  [clausify(209)].

given #435 (I,wt=8): 664 Cont(x,y) | -P(x,intersection(z,y)).  [clausify(209)].

given #436 (I,wt=13): 665 -S(x) | -S(y) | ZEX(difference(x,y)) | EqDim(x,difference(x,y)).  [clausify(210)].

given #437 (I,wt=8): 666 -lt(x,y) | difference(y,x) = y.  [clausify(211)].

given #438 (I,wt=16): 667 -leq(x,y) | -Cont(z,x) | -lt(intersection(z,y),z) | Cont(z,difference(x,y)).  [clausify(212)].

given #439 (I,wt=11): 668 -leq(x,y) | -Cont(z,difference(x,y)) | Cont(z,x).  [clausify(213)].

given #440 (I,wt=13): 669 -leq(x,y) | -P(z,difference(x,y)) | lt(intersection(z,y),z).  [clausify(214)].

given #441 (I,wt=9): 670 -ZEX(difference(x,y)) | ZEX(x) | Cont(x,y).  [clausify(215)].

given #442 (I,wt=6): 671 ZEX(difference(x,y)) | -ZEX(x).  [clausify(215)].

given #443 (I,wt=7): 672 ZEX(difference(x,y)) | -Cont(x,y).  [clausify(215)].

given #444 (I,wt=7): 673 -ArealRegion(x) | -Curve(y) | Covers(x,y).  [clausify(216)].

given #445 (I,wt=5): 674 ArealRegion(x) | Curve(f28(x)).  [clausify(216)].

given #446 (I,wt=6): 675 ArealRegion(x) | -Covers(x,f28(x)).  [clausify(216)].

given #447 (I,wt=4): 676 -sf_multi_surface(x) | Multipart_ArealRegion(x).  [clausify(217)].

given #448 (I,wt=4): 677 -Multipart_ArealRegion(x) | ArealRegion(x).  [clausify(218)].

given #449 (I,wt=4): 678 -Multipart_ArealRegion(x) | Multipart_S(x).  [clausify(218)].

given #450 (I,wt=6): 679 Multipart_ArealRegion(x) | -ArealRegion(x) | -Multipart_S(x).  [clausify(218)].

given #451 (I,wt=4): 680 -Multipart_S(x) | S(x).  [clausify(219)].

given #452 (I,wt=4): 681 -Multipart_S(x) | -Connected_S(x).  [clausify(219)].

given #453 (I,wt=6): 682 Multipart_S(x) | -S(x) | Connected_S(x).  [clausify(219)].

given #454 (I,wt=9): 683 -sf_multi_line_string(x) | -P(y,x) | -Min(y) | sf_line_string(y).  [clausify(220)].

given #455 (I,wt=8): 684 sf_multi_line_string(x) | -sf_multi_curve(x) | P(f29(x),x).  [clausify(220)].

given #456 (I,wt=7): 685 sf_multi_line_string(x) | -sf_multi_curve(x) | Min(f29(x)).  [clausify(220)].

given #457 (I,wt=7): 686 sf_multi_line_string(x) | -sf_multi_curve(x) | -sf_line_string(f29(x)).  [clausify(220)].

given #458 (I,wt=4): 687 -sf_multi_curve(x) | Multipart_Curve(x).  [clausify(221)].

given #459 (I,wt=4): 688 -Multipart_Curve(x) | Curve(x).  [clausify(222)].

given #460 (I,wt=4): 689 -Multipart_Curve(x) | Multipart_S(x).  [clausify(222)].

given #461 (I,wt=6): 690 Multipart_Curve(x) | -Curve(x) | -Multipart_S(x).  [clausify(222)].

given #462 (I,wt=4): 691 -sf_multi_point(x) | PointRegion(x).  [clausify(223)].

given #463 (I,wt=4): 692 -sf_multi_point(x) | -Point(x).  [clausify(223)].

given #464 (I,wt=6): 693 sf_multi_point(x) | -PointRegion(x) | Point(x).  [clausify(223)].

given #465 (I,wt=4): 694 -Point(x) | MinDim(x).  [clausify(224)].

given #466 (I,wt=8): 695 -Point(x) | -Cont(y,x) | y = x.  [clausify(224)].

given #467 (I,wt=8): 696 Point(x) | -MinDim(x) | Cont(f30(x),x).  [clausify(224)].

given #468 (I,wt=8): 697 Point(x) | -MinDim(x) | f30(x) != x.  [clausify(224)].

given #469 (I,wt=4): 698 -PointRegion(x) | MinDim(x).  [clausify(225)].

given #470 (I,wt=4): 699 PointRegion(x) | -MinDim(x).  [clausify(225)].

given #471 (I,wt=8): 700 -C(x,x) | P(f1(x,x),x).  [factor(398,b,c),unit_del(c,399)].

given #472 (I,wt=8): 701 -Cont(x,y) | Cont(f4(y,y),y).  [factor(411,b,c),unit_del(a,399)].

given #473 (I,wt=13): 702 -Cont(x,y) | -leq(f4(y,y),y) | EqDim(f4(y,y),y).  [factor(413,b,c),merge(e),merge(f),unit_del(a,399)].

given #474 (I,wt=6): 703 EqDim(x,x) | -leq(x,x).  [factor(416,b,c)].

given #475 (I,wt=6): 704 C(x,x) | -Cont(y,x).  [factor(449,b,c)].

given #476 (I,wt=6): 705 PO(x,x) | -P(y,x).  [factor(479,b,c)].

given #477 (I,wt=17): 706 -SC(x,y) | -Min(x) | -P(x,x) | -Cont(y,x) | -Cont(y,y) | BCont(y,x).  [factor(493,d,e)].

given #478 (I,wt=17): 707 -SC(x,y) | -Min(x) | -P(x,y) | -Cont(y,y) | -Cont(y,x) | BCont(y,x).  [factor(493,d,f)].

given #479 (I,wt=8): 708 -Covers(x,x) | -S(x) | -lt(x,x).  [factor(501,c,d)].

given #480 (I,wt=8): 709 sf_contains(x,x) | -sf_geometry(x) | -Cont(x,x).  [factor(517,b,c)].

given #481 (I,wt=11): 710 sf_overlaps(x,x) | -sf_geometry(x) | -PO(x,x) | P(x,x).  [factor(549,b,c),merge(e)].

given #482 (I,wt=9): 711 -sf_crosses(x,x) | -Cont(y,x) | lt(y,x).  [factor(554,c,d),unit_del(b,450),unit_del(e,399)].

given #483 (I,wt=9): 712 -sf_crosses(x,x) | -Cont(y,x) | -BCont(y,x).  [factor(560,c,d),unit_del(b,450),unit_del(e,399)].

given #484 (I,wt=15): 713 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,x) | SC(x,y).  [factor(566,b,d)].

given #485 (I,wt=14): 714 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,x) | Curve(x).  [factor(567,b,d)].

given #486 (I,wt=14): 715 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,x) | Curve(y).  [factor(568,b,d)].

given #487 (I,wt=15): 716 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,y) | SC(x,y).  [factor(569,b,d)].

given #488 (I,wt=14): 717 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,y) | Curve(x).  [factor(570,b,d)].

given #489 (I,wt=14): 718 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | lt(x,y) | Curve(y).  [factor(571,b,d)].

given #490 (I,wt=15): 719 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,x) | SC(x,y).  [factor(572,b,d)].

given #491 (I,wt=14): 720 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,x) | Curve(x).  [factor(573,b,d)].

given #492 (I,wt=14): 721 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,x) | Curve(y).  [factor(574,b,d)].

given #493 (I,wt=15): 722 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,y) | SC(x,y).  [factor(575,b,d)].

given #494 (I,wt=14): 723 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,y) | Curve(x).  [factor(576,b,d)].

given #495 (I,wt=14): 724 -sf_crosses(x,y) | -Cont(x,y) | -Cont(x,x) | -BCont(x,y) | Curve(y).  [factor(577,b,d)].

given #496 (I,wt=15): 725 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,x) | SC(x,y).  [factor(578,b,c)].

given #497 (I,wt=14): 726 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,x) | Curve(x).  [factor(579,b,c)].

given #498 (I,wt=14): 727 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,x) | Curve(y).  [factor(580,b,c)].

given #499 (I,wt=15): 728 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,y) | SC(x,y).  [factor(581,b,c)].

NOTE: Back_subsumption disabled, ratio of kept to back_subsumed is 143 (0.00 of 0.33 sec).

given #500 (I,wt=14): 729 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,y) | Curve(x).  [factor(582,b,c)].

given #501 (I,wt=14): 730 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | lt(y,y) | Curve(y).  [factor(583,b,c)].

given #502 (I,wt=15): 731 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,x) | SC(x,y).  [factor(584,b,c)].

given #503 (I,wt=14): 732 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,x) | Curve(x).  [factor(585,b,c)].

given #504 (I,wt=14): 733 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,x) | Curve(y).  [factor(586,b,c)].

given #505 (I,wt=15): 734 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,y) | SC(x,y).  [factor(587,b,c)].

given #506 (I,wt=14): 735 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,y) | Curve(x).  [factor(588,b,c)].

given #507 (I,wt=14): 736 -sf_crosses(x,y) | -Cont(y,x) | -Cont(y,y) | -BCont(y,y) | Curve(y).  [factor(589,b,c)].

given #508 (I,wt=10): 737 sf_crosses(x,x) | -sf_geometry(x) | Cont(f17(x,x),x).  [factor(591,b,c)].

given #509 (I,wt=15): 738 sf_crosses(x,x) | -sf_geometry(x) | -lt(f17(x,x),x) | BCont(f17(x,x),x).  [factor(593,b,c),merge(d),merge(f)].

given #510 (I,wt=13): 739 ZEX(x) | MinDim(x) | -MinDim(f18(x)) | -Covers(x,f18(x)) | Curve(x).  [factor(600,c,e)].

given #511 (I,wt=6): 740 -sf_touches(x,x) | BCont(x,x).  [factor(603,c,d),unit_del(b,399)].

given #512 (I,wt=8): 741 sf_touches(x,x) | -sf_geometry(x) | -BCont(x,x).  [factor(605,b,c)].

given #513 (I,wt=8): 742 sf_intersects(x,x) | -sf_geometry(x) | sf_disjoint(x,x).  [factor(613,b,c)].

given #514 (I,wt=16): 744 Branched_S(x) | -Connected_S(x) | -PP(y,x) | PO(y,y) | -Covers(y,z) | -Cont(z,y).  [factor(651,f,h),merge(d),merge(e),merge(g),merge(i),merge(j),merge(l),merge(m)].

given #515 (I,wt=9): 745 -S(x) | C(x,x) | ZEX(intersection(x,x)).  [factor(656,a,b)].

given #516 (I,wt=11): 746 -S(x) | ZEX(intersection(x,x)) | Cont(intersection(x,x),x).  [factor(660,a,b)].

given #517 (I,wt=8): 747 -Cont(x,y) | leq(x,intersection(y,y)).  [factor(661,a,b)].

given #518 (I,wt=13): 748 -Cont(x,y) | -EqDim(x,intersection(y,y)) | P(x,intersection(y,y)).  [factor(662,a,b)].

given #519 (I,wt=11): 749 -S(x) | ZEX(difference(x,x)) | EqDim(x,difference(x,x)).  [factor(665,a,b)].

given #520 (A,wt=2): 750 S(c35).  [resolve(388,a,260,a)].

given #521 (F,wt=2): 788 -ZEX(c45).  [resolve(427,a,270,a)].

given #522 (F,wt=2): 793 -ZEX(c163).  [resolve(432,a,425,a)].

given #523 (F,wt=2): 794 -ZEX(c155).  [resolve(432,a,380,a)].

given #524 (F,wt=2): 802 -ZEX(c32).  [resolve(442,b,256,a)].

given #525 (T,wt=2): 751 sf_geometry(c137).  [resolve(389,b,362,a)].

given #526 (T,wt=2): 778 S(c113).  [resolve(417,a,338,a)].

given #527 (T,wt=2): 779 S(c114).  [resolve(418,a,338,a)].

given #528 (T,wt=2): 780 S(c29).  [resolve(419,a,254,a)].

given #529 (A,wt=6): 752 sf_intersects(c71,c72) | sf_disjoint(c71,c72).  [resolve(390,a,296,a)].

given #530 (F,wt=2): 803 -ZEX(c31).  [resolve(443,b,256,a)].

given #531 (F,wt=2): 835 -ZEX(c145).  [resolve(481,a,370,a)].

given #532 (F,wt=2): 836 -Max(c151).  [resolve(482,b,376,a)].

given #533 (F,wt=2): 839 -ZEX(c47).  [resolve(485,a,272,a)].

given #534 (T,wt=2): 787 S(c45).  [resolve(426,a,270,a)].

given #535 (T,wt=2): 791 S(c163).  [resolve(431,a,425,a)].

given #536 (T,wt=2): 792 S(c155).  [resolve(431,a,380,a)].

given #537 (T,wt=2): 834 S(c145).  [resolve(480,a,370,a)].

given #538 (A,wt=3): 753 sf_relate(c65,c66).  [resolve(391,b,290,a)].

given #539 (F,wt=2): 840 -Min(c152).  [resolve(486,b,376,a)].

given #540 (F,wt=2): 866 -Closed(c100).  [resolve(512,b,324,a)].

given #541 (F,wt=2): 874 -sf_geometry_collection(c125).  [resolve(519,b,350,a)].

given #542 (F,wt=2): 875 -sf_geometry_collection(c49).  [resolve(520,b,274,a)].

given #543 (T,wt=2): 838 S(c47).  [resolve(484,a,272,a)].

given #544 (T,wt=2): 869 sf_geometry(c15).  [resolve(514,a,240,a)].

given #545 (T,wt=2): 870 sf_geometry(c16).  [resolve(515,a,240,a)].

given #546 (T,wt=2): 873 sf_multi_surface(c39).  [resolve(518,a,264,a)].

given #547 (A,wt=3): 754 sf_relate(c107,c108).  [resolve(392,b,332,a)].

given #548 (F,wt=2): 876 -sf_geometry_collection(c91).  [resolve(521,b,316,a)].

given #549 (F,wt=2): 881 -sf_curve(c125).  [resolve(526,a,350,a)].

given #550 (F,wt=2): 882 -sf_surface(c125).  [resolve(527,a,350,a)].

given #551 (F,wt=2): 888 -sf_curve(c91).  [resolve(533,a,316,a)].

given #552 (T,wt=2): 878 sf_geometry_collection(c157).  [resolve(523,b,382,a)].

given #553 (T,wt=2): 879 sf_geometry_collection(c41).  [resolve(524,b,266,a)].

given #554 (T,wt=2): 880 sf_geometry_collection(c131).  [resolve(525,b,356,a)].

given #555 (T,wt=2): 884 sf_geometry(c125).  [resolve(529,b,350,a)].

given #556 (A,wt=3): 755 C(c141,c142).  [resolve(393,a,366,a)].

given #557 (F,wt=2): 975 -Curve(c29).  [resolve(595,b,254,a)].

given #558 (F,wt=2): 976 -Curve(c163).  [resolve(596,b,425,a)].

given #559 (F,wt=2): 977 -Curve(c155).  [resolve(596,b,380,a)].

given #560 (F,wt=2): 1023 -Branched_S(c95).  [resolve(636,a,320,a)].

given #561 (T,wt=2): 885 sf_geometry(c49).  [resolve(530,b,274,a)].

given #562 (T,wt=2): 886 sf_geometry(c91).  [resolve(531,b,316,a)].

given #563 (T,wt=2): 887 sf_geometry(c57).  [resolve(532,b,282,a)].

given #564 (T,wt=2): 889 sf_multi_curve(c43).  [resolve(534,a,268,a)].

given #565 (A,wt=6): 756 -Cont(x,c141) | -P(x,c142).  [resolve(394,a,366,a)].

given #566 (F,wt=2): 1064 -Connected_S(c19).  [resolve(681,a,244,a)].

given #567 (F,wt=2): 1074 -Point(c157).  [resolve(692,a,382,a)].

given #568 (F,wt=2): 1077 -Point(c32).  [resolve(695,b,256,a),flip(b),unit_del(b,257)].

given #569 (F,wt=3): 799 -Cont(c32,c31).  [resolve(440,a,256,a),unit_del(b,257)].

given #570 (T,wt=2): 890 sf_polygon(c121).  [resolve(535,a,346,a)].

given #571 (T,wt=2): 891 sf_tin(c121).  [resolve(536,a,346,a)].

given #572 (T,wt=2): 893 sf_polyhedral_surface(c111).  [resolve(538,a,336,a)].

given #573 (T,wt=2): 894 sf_surface(c93).  [resolve(539,a,318,a)].

given #574 (A,wt=6): 757 -P(x,c141) | -Cont(x,c142).  [resolve(395,a,366,a)].

given #575 (F,wt=2): 1338 -sf_curve(c93).  [resolve(894,a,533,a)].

given #576 (F,wt=2): 1340 -sf_geometry_collection(c93).  [resolve(894,a,521,b)].

given #577 (F,wt=3): 812 -Inc(c103,c104).  [resolve(452,a,328,a)].

given #578 (F,wt=3): 845 -BCont(c103,c104).  [resolve(492,b,328,a)].

given #579 (T,wt=2): 895 sf_polyhedral_surface(c55).  [resolve(540,a,280,a)].

given #580 (T,wt=2): 896 sf_line_string(c97).  [resolve(541,a,322,a)].

given #581 (T,wt=2): 897 sf_curve(c117).  [resolve(542,a,342,a)].

given #582 (T,wt=2): 898 sf_line_string(c123).  [resolve(543,a,348,a)].

given #583 (A,wt=8): 758 Cont(f1(c11,c12),c11) | SC(c11,c12).  [resolve(396,a,236,a)].

given #584 (F,wt=2): 1344 -sf_geometry_collection(c117).  [resolve(897,a,520,b)].

given #585 (F,wt=3): 864 -lt(c103,c104).  [resolve(510,b,328,a)].

given #586 (F,wt=3): 902 -P(c127,c128).  [resolve(547,a,352,a)].

given #587 (F,wt=3): 903 -P(c128,c127).  [resolve(548,a,352,a)].

given #588 (T,wt=2): 899 sf_geometry(c127).  [resolve(544,a,352,a)].

given #589 (T,wt=2): 900 sf_geometry(c128).  [resolve(545,a,352,a)].

given #590 (T,wt=2): 907 sf_geometry(c77).  [resolve(552,a,302,a)].

given #591 (T,wt=2): 908 sf_geometry(c78).  [resolve(553,a,302,a)].

given #592 (A,wt=8): 759 Cont(f1(c11,c12),c12) | SC(c11,c12).  [resolve(397,a,236,a)].

given #593 (F,wt=3): 995 -sf_disjoint(c65,c66).  [resolve(612,a,290,a)].

given #594 (F,wt=3): 1000 -C(c107,c108).  [resolve(616,a,332,a)].

given #595 (F,wt=4): 1044 -ZEX(intersection(c11,c12)).  [resolve(659,a,236,a)].

given #596 (F,wt=4): 1299 -ZEX(intersection(c141,c142)).  [resolve(755,a,659,a)].

given #597 (T,wt=2): 982 sf_geometry(c81).  [resolve(601,a,306,a)].

given #598 (T,wt=2): 983 sf_geometry(c82).  [resolve(602,a,306,a)].

given #599 (T,wt=2): 993 sf_geometry(c65).  [resolve(610,a,290,a)].

given #600 (T,wt=2): 994 sf_geometry(c66).  [resolve(611,a,290,a)].

given #601 (A,wt=13): 760 P(f1(c11,c12),c11) | P(f1(c11,c12),c12) | SC(c11,c12).  [resolve(398,a,236,a)].

given #602 (F,wt=8): 855 -S(x) | -lt(c6,x) | -lt(x,c5).  [resolve(501,a,230,a)].

given #603 (F,wt=9): 768 -SC(c104,x) | -Cont(c103,c104) | -Cont(c103,x).  [resolve(408,d,328,a)].

given #604 (F,wt=9): 769 -SC(x,c104) | -Cont(c103,x) | -Cont(c103,c104).  [resolve(410,d,328,a)].

given #605 (F,wt=18): 849 -SC(x,y) | -P(x,c5) | -P(y,c5) | -Cont(c6,x) | -Cont(c6,y) | -BCont(c6,c5).  [resolve(494,f,230,a)].

given #606 (T,wt=2): 998 sf_geometry(c107).  [resolve(614,a,332,a)].

given #607 (T,wt=2): 999 sf_geometry(c108).  [resolve(615,a,332,a)].

given #608 (T,wt=2): 1006 Simple_ArealRegion(c55).  [resolve(622,a,280,a)].

given #609 (T,wt=2): 1019 ArealRegion(c61).  [resolve(632,a,286,a)].

given #610 (A,wt=3): 761 SC(c142,c141).  [resolve(400,a,366,a)].

given #611 (F,wt=15): 1471 -P(c141,c5) | -P(c142,c5) | -Cont(c6,c141) | -Cont(c6,c142) | -BCont(c6,c5).  [resolve(849,a,366,a)].

given #612 (T,wt=2): 1020 Simple_S(c61).  [resolve(633,a,286,a)].

given #613 (T,wt=2): 1022 Connected_S(c95).  [resolve(635,a,320,a)].

given #614 (T,wt=2): 1025 Connected_S(c89).  [resolve(638,a,314,a)].

given #615 (T,wt=2): 1039 S(c139).  [resolve(652,a,364,a)].

given #616 (A,wt=5): 762 lt(f2(c141,c142),c141).  [resolve(401,a,366,a)].

given #617 (F,wt=2): 1507 -Branched_S(c61).  [resolve(1020,a,636,a)].

given #618 (T,wt=2): 1059 Multipart_ArealRegion(c131).  [resolve(676,a,356,a)].

given #619 (T,wt=2): 1060 ArealRegion(c75).  [resolve(677,a,300,a)].

given #620 (T,wt=2): 1061 Multipart_S(c75).  [resolve(678,a,300,a)].

given #621 (T,wt=2): 1063 S(c19).  [resolve(680,a,244,a)].

given #622 (A,wt=5): 763 lt(f2(c141,c142),c142).  [resolve(402,a,366,a)].

given #623 (F,wt=2): 1539 -Connected_S(c75).  [resolve(1061,a,681,a)].

given #624 (T,wt=2): 1069 Multipart_Curve(c41).  [resolve(687,a,266,a)].

given #625 (T,wt=2): 1070 Curve(c9).  [resolve(688,a,234,a)].

given #626 (T,wt=2): 1071 Multipart_S(c9).  [resolve(689,a,234,a)].

given #627 (T,wt=2): 1073 PointRegion(c157).  [resolve(691,a,382,a)].

given #628 (A,wt=5): 764 Cont(f2(c141,c142),c141).  [resolve(403,a,366,a)].

given #629 (F,wt=2): 1568 -Connected_S(c9).  [resolve(1071,a,681,a)].

given #630 (F,wt=2): 1583 -ZEX(c141).  [resolve(764,a,442,b)].

given #631 (F,wt=4): 1582 -ZEX(f2(c141,c142)).  [resolve(764,a,443,b)].

given #632 (T,wt=2): 1076 MinDim(c59).  [resolve(694,a,284,a)].

given #633 (T,wt=2): 1082 MinDim(c69).  [resolve(698,a,294,a)].

given #634 (T,wt=2): 1083 PointRegion(c163).  [resolve(699,b,425,a)].

given #635 (T,wt=2): 1084 PointRegion(c155).  [resolve(699,b,380,a)].

given #636 (A,wt=5): 765 Cont(f2(c141,c142),c142).  [resolve(404,a,366,a)].

given #637 (F,wt=2): 1593 -Curve(c59).  [resolve(1076,a,596,b)].

given #638 (F,wt=2): 1595 -ZEX(c59).  [resolve(1076,a,432,a)].

given #639 (F,wt=2): 1600 -Curve(c69).  [resolve(1082,a,596,b)].

given #640 (F,wt=2): 1602 -ZEX(c69).  [resolve(1082,a,432,a)].

given #641 (T,wt=2): 1139 sf_geometry(c113).  [resolve(778,a,389,b)].

given #642 (T,wt=2): 1158 sf_geometry(c114).  [resolve(779,a,389,b)].

given #643 (T,wt=2): 1169 sf_geometry(c29).  [resolve(780,a,389,b)].

given #644 (T,wt=2): 1189 sf_geometry(c45).  [resolve(787,a,389,b)].

given #645 (A,wt=5): 766 Cont(f3(c141,c142),c141).  [resolve(405,a,366,a)].

given #646 (F,wt=2): 1616 -ZEX(c142).  [resolve(765,a,442,b)].

given #647 (F,wt=4): 1668 -ZEX(f3(c141,c142)).  [resolve(766,a,443,b)].

given #648 (T,wt=2): 1207 sf_geometry(c163).  [resolve(791,a,389,b)].

given #649 (T,wt=2): 1225 sf_geometry(c155).  [resolve(792,a,389,b)].

given #650 (T,wt=2): 1243 sf_geometry(c145).  [resolve(834,a,389,b)].

given #651 (T,wt=2): 1261 sf_geometry(c47).  [resolve(838,a,389,b)].

given #652 (A,wt=5): 767 Cont(f3(c141,c142),c142).  [resolve(406,a,366,a)].

given #653 (T,wt=2): 1271 S(c15).  [resolve(869,a,388,a)].

given #654 (T,wt=2): 1281 S(c16).  [resolve(870,a,388,a)].

given #655 (T,wt=2): 1282 Multipart_ArealRegion(c39).  [resolve(873,a,676,a)].

given #656 (T,wt=2): 1283 sf_geometry_collection(c39).  [resolve(873,a,525,b)].

given #657 (A,wt=11): 770 SC(c32,x) | -Cont(c31,x) | Cont(f4(c32,x),c32).  [resolve(411,b,256,a)].

given #658 (T,wt=2): 1285 sf_geometry(c157).  [resolve(878,a,532,b)].

given #659 (T,wt=2): 1287 sf_geometry(c41).  [resolve(879,a,532,b)].

given #660 (T,wt=2): 1289 sf_geometry(c131).  [resolve(880,a,532,b)].

given #661 (T,wt=2): 1298 S(c125).  [resolve(884,a,388,a)].

given #662 (A,wt=11): 771 SC(x,c32) | -Cont(c31,x) | Cont(f4(x,c32),x).  [resolve(411,c,256,a)].

given #663 (T,wt=2): 1310 S(c49).  [resolve(885,a,388,a)].

given #664 (T,wt=2): 1319 S(c91).  [resolve(886,a,388,a)].

given #665 (T,wt=2): 1328 S(c57).  [resolve(887,a,388,a)].

given #666 (T,wt=2): 1329 Multipart_Curve(c43).  [resolve(889,a,687,a)].

given #667 (A,wt=11): 772 SC(c32,x) | -Cont(c31,x) | Cont(f4(c32,x),x).  [resolve(412,b,256,a)].

given #668 (T,wt=2): 1330 sf_geometry_collection(c43).  [resolve(889,a,524,b)].

given #669 (T,wt=2): 1335 Simple_ArealRegion(c121).  [resolve(890,a,622,a)].

given #670 (T,wt=2): 1336 sf_polyhedral_surface(c121).  [resolve(890,a,540,a)].

given #671 (T,wt=2): 1337 sf_surface(c111).  [resolve(893,a,539,a)].

given #672 (A,wt=11): 773 SC(x,c32) | -Cont(c31,x) | Cont(f4(x,c32),c32).  [resolve(412,c,256,a)].

given #673 (F,wt=2): 1873 -sf_curve(c111).  [resolve(1337,a,533,a)].

given #674 (F,wt=2): 1875 -sf_geometry_collection(c111).  [resolve(1337,a,521,b)].

given #675 (T,wt=2): 1339 sf_geometry(c93).  [resolve(894,a,531,b)].

given #676 (T,wt=2): 1341 sf_surface(c55).  [resolve(895,a,539,a)].

given #677 (T,wt=2): 1342 sf_curve(c97).  [resolve(896,a,542,a)].

given #678 (T,wt=2): 1343 sf_geometry(c117).  [resolve(897,a,530,b)].

given #679 (A,wt=3): 774 leq(c103,c104).  [resolve(414,a,328,a)].

given #680 (F,wt=2): 1885 -sf_curve(c55).  [resolve(1341,a,533,a)].

given #681 (F,wt=2): 1887 -sf_geometry_collection(c55).  [resolve(1341,a,521,b)].

given #682 (F,wt=2): 1889 -sf_geometry_collection(c97).  [resolve(1342,a,520,b)].

given #683 (T,wt=2): 1345 sf_curve(c123).  [resolve(898,a,542,a)].

given #684 (T,wt=2): 1369 S(c127).  [resolve(899,a,388,a)].

given #685 (T,wt=2): 1379 S(c128).  [resolve(900,a,388,a)].

given #686 (T,wt=2): 1389 S(c77).  [resolve(907,a,388,a)].

given #687 (A,wt=3): 775 leq(c104,c103).  [resolve(415,a,328,a)].

given #688 (F,wt=2): 1908 -sf_geometry_collection(c123).  [resolve(1345,a,520,b)].

given #689 (T,wt=2): 1399 S(c78).  [resolve(908,a,388,a)].

given #690 (T,wt=2): 1423 S(c81).  [resolve(982,a,388,a)].

given #691 (T,wt=2): 1433 S(c82).  [resolve(983,a,388,a)].

given #692 (T,wt=2): 1443 S(c65).  [resolve(993,a,388,a)].

given #693 (A,wt=6): 776 EqDim(c113,c114) | -leq(c114,c113).  [resolve(416,b,338,a)].

given #694 (T,wt=2): 1453 S(c66).  [resolve(994,a,388,a)].

given #695 (T,wt=2): 1481 S(c107).  [resolve(998,a,388,a)].

given #696 (T,wt=2): 1491 S(c108).  [resolve(999,a,388,a)].

given #697 (T,wt=2): 1492 Simple_S(c55).  [resolve(1006,a,633,a)].

given #698 (A,wt=6): 777 EqDim(c114,c113) | -leq(c114,c113).  [resolve(416,c,338,a)].

given #699 (F,wt=2): 2094 -Branched_S(c55).  [resolve(1492,a,636,a)].

given #700 (T,wt=2): 1493 ArealRegion(c55).  [resolve(1006,a,632,a)].

given #701 (T,wt=2): 1508 Connected_S(c61).  [resolve(1020,a,635,a)].

given #702 (T,wt=2): 1509 S(c95).  [resolve(1022,a,652,a)].

given #703 (T,wt=2): 1510 S(c89).  [resolve(1025,a,652,a)].

given #704 (A,wt=3): 781 leq(c137,c137).  [resolve(420,a,362,a)].

given #705 (T,wt=2): 1527 sf_geometry(c139).  [resolve(1039,a,389,b)].

given #706 (T,wt=2): 1535 Multipart_S(c131).  [resolve(1059,a,678,a)].

given #707 (T,wt=2): 1536 ArealRegion(c131).  [resolve(1059,a,677,a)].

given #708 (T,wt=2): 1540 S(c75).  [resolve(1061,a,680,a)].

given #709 (A,wt=6): 782 -leq(c114,x) | leq(c113,x).  [resolve(421,a,338,a)].

given #710 (F,wt=2): 2146 -Connected_S(c131).  [resolve(1535,a,681,a)].

given #711 (T,wt=2): 1558 sf_geometry(c19).  [resolve(1063,a,389,b)].

given #712 (T,wt=2): 1566 Multipart_S(c41).  [resolve(1069,a,689,a)].

given #713 (T,wt=2): 1567 Curve(c41).  [resolve(1069,a,688,a)].

given #714 (T,wt=2): 1569 S(c9).  [resolve(1071,a,680,a)].

given #715 (A,wt=6): 783 -leq(x,c113) | leq(x,c114).  [resolve(421,b,338,a)].

given #716 (F,wt=2): 2175 -Connected_S(c41).  [resolve(1566,a,681,a)].

given #717 (T,wt=2): 1571 MinDim(c157).  [resolve(1073,a,698,a)].

given #718 (T,wt=2): 1591 PointRegion(c59).  [resolve(1076,a,699,b)].

given #719 (T,wt=2): 1596 S(c59).  [resolve(1076,a,431,a)].

given #720 (T,wt=2): 1603 S(c69).  [resolve(1082,a,431,a)].

given #721 (A,wt=5): 784 -ZEX(x) | c29 = x.  [resolve(422,a,254,a),flip(b)].

given #722 (F,wt=2): 2198 -Curve(c157).  [resolve(1571,a,596,b)].

given #723 (F,wt=2): 2200 -ZEX(c157).  [resolve(1571,a,432,a)].

given #724 (F,wt=4): 2195 f30(c157) != c157.  [resolve(1571,a,697,b),unit_del(a,1074)].

given #725 (T,wt=2): 1765 Multipart_S(c39).  [resolve(1282,a,678,a)].

given #726 (T,wt=2): 1766 ArealRegion(c39).  [resolve(1282,a,677,a)].

given #727 (T,wt=2): 1767 sf_geometry(c39).  [resolve(1283,a,532,b)].

given #728 (T,wt=2): 1776 S(c157).  [resolve(1285,a,388,a)].

given #729 (A,wt=5): 785 -S(x) | leq(c29,x).  [resolve(423,a,254,a)].

given #730 (F,wt=2): 2238 -Connected_S(c39).  [resolve(1765,a,681,a)].

given #731 (T,wt=2): 1785 S(c41).  [resolve(1287,a,388,a)].

given #732 (T,wt=2): 1794 S(c131).  [resolve(1289,a,388,a)].

given #733 (T,wt=2): 1867 Multipart_S(c43).  [resolve(1329,a,689,a)].

given #734 (T,wt=2): 1868 Curve(c43).  [resolve(1329,a,688,a)].

given #735 (A,wt=3): 786 leq(c31,c32).  [resolve(424,a,256,a)].

given #736 (F,wt=2): 2336 -Connected_S(c43).  [resolve(1867,a,681,a)].

given #737 (T,wt=2): 1869 sf_geometry(c43).  [resolve(1330,a,532,b)].

given #738 (T,wt=2): 1870 Simple_S(c121).  [resolve(1335,a,633,a)].

given #739 (T,wt=2): 1871 ArealRegion(c121).  [resolve(1335,a,632,a)].

given #740 (T,wt=2): 1872 sf_surface(c121).  [resolve(1336,a,539,a)].

given #741 (A,wt=5): 789 -S(x) | leq(x,c45).  [resolve(428,a,270,a)].

given #742 (F,wt=2): 2359 -Branched_S(c121).  [resolve(1870,a,636,a)].

given #743 (F,wt=2): 2362 -sf_curve(c121).  [resolve(1872,a,533,a)].

given #744 (F,wt=2): 2364 -sf_geometry_collection(c121).  [resolve(1872,a,521,b)].

given #745 (T,wt=2): 1874 sf_geometry(c111).  [resolve(1337,a,531,b)].

given #746 (T,wt=2): 1884 S(c93).  [resolve(1339,a,388,a)].

given #747 (T,wt=2): 1886 sf_geometry(c55).  [resolve(1341,a,531,b)].

given #748 (T,wt=2): 1888 sf_geometry(c97).  [resolve(1342,a,530,b)].

given #749 (A,wt=7): 790 MaxDim(c137) | ZEX(c137) | S(f5(c137)).  [resolve(429,b,362,a)].

given #750 (T,wt=2): 1898 S(c117).  [resolve(1343,a,388,a)].

given #751 (T,wt=2): 1904 S(c104).  [resolve(774,a,418,a)].

given #752 (T,wt=2): 1905 S(c103).  [resolve(774,a,417,a)].

given #753 (T,wt=2): 1907 sf_geometry(c123).  [resolve(1345,a,530,b)].

given #754 (A,wt=7): 795 -S(x) | ZEX(x) | leq(c163,x).  [resolve(433,a,425,a)].

given #755 (T,wt=2): 2095 Connected_S(c55).  [resolve(1492,a,635,a)].

given #756 (T,wt=2): 2097 S(c61).  [resolve(1508,a,652,a)].

given #757 (T,wt=2): 2114 sf_geometry(c95).  [resolve(1509,a,389,b)].

given #758 (T,wt=2): 2131 sf_geometry(c89).  [resolve(1510,a,389,b)].

given #759 (A,wt=7): 796 -S(x) | ZEX(x) | leq(c155,x).  [resolve(433,a,380,a)].

given #760 (T,wt=2): 2165 sf_geometry(c75).  [resolve(1540,a,389,b)].

given #761 (T,wt=2): 2194 sf_geometry(c9).  [resolve(1569,a,389,b)].

given #762 (T,wt=2): 2218 sf_geometry(c59).  [resolve(1596,a,389,b)].

given #763 (T,wt=2): 2236 sf_geometry(c69).  [resolve(1603,a,389,b)].

given #764 (A,wt=7): 797 MinDim(c137) | ZEX(c137) | S(f6(c137)).  [resolve(434,b,362,a)].

given #765 (T,wt=2): 2239 S(c39).  [resolve(1765,a,680,a)].

given #766 (T,wt=2): 2337 S(c43).  [resolve(1867,a,680,a)].

given #767 (T,wt=2): 2347 S(c32).  [resolve(786,a,418,a)].

given #768 (T,wt=2): 2348 S(c31).  [resolve(786,a,417,a)].

given #769 (A,wt=5): 798 ZEX(c137) | Cont(c137,c137).  [resolve(437,a,362,a)].

given #770 (T,wt=2): 2360 Connected_S(c121).  [resolve(1870,a,635,a)].

given #771 (T,wt=2): 2363 sf_geometry(c121).  [resolve(1872,a,531,b)].

given #772 (T,wt=2): 2408 S(c111).  [resolve(1874,a,388,a)].

given #773 (T,wt=2): 2437 S(c55).  [resolve(1886,a,388,a)].

given #774 (A,wt=6): 800 -Cont(c32,x) | Cont(c31,x).  [resolve(441,a,256,a)].

given #775 (T,wt=2): 2446 S(c97).  [resolve(1888,a,388,a)].

given #776 (T,wt=2): 2488 sf_geometry(c104).  [resolve(1904,a,389,b)].

given #777 (T,wt=2): 2509 sf_geometry(c103).  [resolve(1905,a,389,b)].

given #778 (T,wt=2): 2518 S(c123).  [resolve(1907,a,388,a)].

given #779 (A,wt=6): 801 -Cont(x,c31) | Cont(x,c32).  [resolve(441,b,256,a)].

given #780 (T,wt=2): 2576 sf_geometry(c61).  [resolve(2097,a,389,b)].

given #781 (T,wt=2): 2739 sf_geometry(c32).  [resolve(2347,a,389,b)].

given #782 (T,wt=2): 2763 sf_geometry(c31).  [resolve(2348,a,389,b)].

given #783 (T,wt=2): 2778 S(c121).  [resolve(2360,a,652,a)].

given #784 (A,wt=3): 804 Cont(c25,c26).  [resolve(444,a,250,a)].

given #785 (F,wt=2): 2941 -Point(c26).  [resolve(804,a,695,b),flip(b),unit_del(b,251)].

given #786 (F,wt=2): 2948 -ZEX(c25).  [resolve(804,a,443,b)].

given #787 (F,wt=2): 2949 -ZEX(c26).  [resolve(804,a,442,b)].

given #788 (F,wt=3): 2952 -Cont(c26,c25).  [resolve(804,a,440,b),flip(b),unit_del(b,251)].

given #789 (T,wt=3): 805 EqDim(c25,c26).  [resolve(445,a,250,a)].

given #790 (T,wt=3): 811 Inc(c22,c21).  [resolve(451,a,246,a)].

given #791 (T,wt=3): 828 PO(c160,c159).  [resolve(475,a,384,a)].

given #792 (T,wt=3): 829 EqDim(c159,c160).  [resolve(476,a,384,a)].

given #793 (A,wt=6): 806 P(c103,c104) | -Cont(c103,c104).  [resolve(446,c,328,a)].

given #794 (F,wt=3): 2958 -lt(c25,c26).  [resolve(805,a,510,b)].

given #795 (F,wt=3): 2959 -BCont(c25,c26).  [resolve(805,a,492,b)].

given #796 (F,wt=3): 2960 -Inc(c25,c26).  [resolve(805,a,452,a)].

given #797 (F,wt=3): 2979 -lt(c159,c160).  [resolve(829,a,510,b)].

given #798 (T,wt=3): 842 P(c151,c152).  [resolve(488,a,376,a)].

given #799 (T,wt=3): 843 PP(c25,c26).  [resolve(490,b,250,a),unit_del(b,251)].

given #800 (T,wt=3): 844 Cont(c99,c100).  [resolve(491,a,324,a)].

given #801 (T,wt=3): 854 lt(c6,c5).  [resolve(500,a,230,a)].

given #802 (A,wt=5): 807 Cont(f7(c11,c12),c11).  [resolve(447,a,236,a)].

given #803 (F,wt=2): 3002 -Min(c26).  [resolve(843,a,486,b)].

given #804 (F,wt=2): 3003 -Max(c25).  [resolve(843,a,482,b)].

given #805 (F,wt=2): 3007 -Point(c100).  [resolve(844,a,695,b),flip(b),unit_del(b,325)].

given #806 (F,wt=2): 3014 -ZEX(c99).  [resolve(844,a,443,b)].

given #807 (T,wt=3): 859 lt(c86,c85).  [resolve(505,a,310,a)].

given #808 (T,wt=3): 860 gt(c2,c1).  [resolve(506,b,226,a)].

given #809 (T,wt=3): 861 leq(c52,c51).  [resolve(507,a,276,a)].

given #810 (T,wt=2): 3063 S(c51).  [resolve(861,a,418,a)].

given #811 (A,wt=5): 808 Cont(f7(c11,c12),c12).  [resolve(448,a,236,a)].

given #812 (F,wt=2): 3015 -ZEX(c100).  [resolve(844,a,442,b)].

given #813 (F,wt=2): 3041 -ZEX(c11).  [resolve(807,a,442,b)].

given #814 (F,wt=2): 3100 -ZEX(c12).  [resolve(808,a,442,b)].

given #815 (F,wt=3): 2980 -BCont(c159,c160).  [resolve(829,a,492,b)].

given #816 (T,wt=2): 3064 S(c52).  [resolve(861,a,417,a)].

given #817 (T,wt=2): 3089 sf_geometry(c51).  [resolve(3063,a,389,b)].

given #818 (T,wt=2): 3131 sf_geometry(c52).  [resolve(3064,a,389,b)].

given #819 (T,wt=3): 862 geq(c114,c113).  [resolve(508,b,338,a)].

given #820 (A,wt=6): 809 C(c32,x) | -Cont(c31,x).  [resolve(449,b,256,a)].

given #821 (F,wt=3): 2981 -Inc(c159,c160).  [resolve(829,a,452,a)].

given #822 (F,wt=3): 3018 -Cont(c100,c99).  [resolve(844,a,440,b),flip(b),unit_del(b,325)].

given #823 (F,wt=4): 3040 -ZEX(f7(c11,c12)).  [resolve(807,a,443,b)].

given #824 (F,wt=5): 3024 -S(c6) | -lt(c6,c6).  [resolve(854,a,855,c)].

given #825 (T,wt=3): 863 leq(c1,c2).  [resolve(509,a,226,a)].

given #826 (T,wt=2): 3157 S(c2).  [resolve(863,a,418,a)].

given #827 (T,wt=2): 3158 S(c1).  [resolve(863,a,417,a)].

given #828 (T,wt=2): 3183 sf_geometry(c2).  [resolve(3157,a,389,b)].

given #829 (A,wt=6): 810 C(x,c32) | -Cont(c31,x).  [resolve(449,c,256,a)].

given #830 (F,wt=5): 3025 -S(c5) | -lt(c5,c5).  [resolve(854,a,855,b)].

given #831 (F,wt=6): 2962 -SC(x,c26) | -Cont(c25,x).  [resolve(805,a,410,d),unit_del(c,804)].

given #832 (F,wt=6): 2963 -SC(c26,x) | -Cont(c25,x).  [resolve(805,a,408,d),unit_del(b,804)].

given #833 (F,wt=9): 2985 -SC(x,c160) | -Cont(c159,x) | -Cont(c159,c160).  [resolve(829,a,410,d)].

given #834 (T,wt=2): 3206 sf_geometry(c1).  [resolve(3158,a,389,b)].

given #835 (T,wt=3): 871 Cont(c15,c16).  [resolve(516,a,240,a)].

given #836 (T,wt=3): 901 PO(c127,c128).  [resolve(546,a,352,a)].

given #837 (T,wt=3): 905 sf_contains(c148,c147).  [resolve(550,a,372,a)].

given #838 (A,wt=6): 813 lt(c21,c22) | lt(c22,c21).  [resolve(453,a,246,a)].

given #839 (F,wt=2): 3228 -Point(c16).  [resolve(871,a,695,b),flip(b),unit_del(b,241)].

given #840 (F,wt=2): 3234 -ZEX(c15).  [resolve(871,a,443,b)].

given #841 (F,wt=2): 3235 -ZEX(c16).  [resolve(871,a,442,b)].

given #842 (F,wt=3): 3238 -Cont(c16,c15).  [resolve(871,a,440,b),flip(b),unit_del(b,241)].

given #843 (T,wt=2): 3265 sf_geometry(c147).  [resolve(905,a,515,a)].

given #844 (T,wt=2): 3266 sf_geometry(c148).  [resolve(905,a,514,a)].

given #845 (T,wt=2): 3282 S(c147).  [resolve(3265,a,388,a)].

given #846 (T,wt=2): 3292 S(c148).  [resolve(3266,a,388,a)].

given #847 (A,wt=6): 814 -Cont(c1,c2) | Inc(c1,c2).  [resolve(454,b,226,a)].

given #848 (F,wt=9): 2986 -SC(c160,x) | -Cont(c159,c160) | -Cont(c159,x).  [resolve(829,a,408,d)].

given #849 (T,wt=3): 906 sf_within(c16,c15).  [resolve(551,b,240,a)].

given #850 (T,wt=3): 990 sf_contains(c133,c134).  [resolve(607,a,358,a)].

given #851 (T,wt=2): 3340 sf_geometry(c134).  [resolve(990,a,515,a)].

given #852 (T,wt=2): 3341 sf_geometry(c133).  [resolve(990,a,514,a)].

given #853 (A,wt=6): 815 -P(c22,x) | Inc(c21,x).  [resolve(455,a,246,a)].

given #854 (T,wt=2): 3351 S(c134).  [resolve(3340,a,388,a)].

given #855 (T,wt=2): 3361 S(c133).  [resolve(3341,a,388,a)].

given #856 (T,wt=3): 991 sf_within(c133,c134).  [resolve(608,a,358,a)].

given #857 (T,wt=3): 1007 sf_linear_ring(f20(c55)).  [resolve(623,a,280,a)].

given #858 (A,wt=10): 816 leq(f8(c21,c22),c21) | leq(f9(c21,c22),c22).  [resolve(456,a,246,a)].

given #859 (T,wt=3): 1058 Curve(f28(c120)).  [resolve(674,a,345,a)].

given #860 (T,wt=3): 1086 C(c32,c32).  [resolve(704,b,256,a)].

given #861 (T,wt=3): 1087 PO(c26,c26).  [resolve(705,b,250,a)].

given #862 (T,wt=3): 1111 leq(c35,c35).  [resolve(750,a,420,a)].

given #863 (A,wt=10): 817 leq(f8(c21,c22),c21) | Cont(f9(c21,c22),c22).  [resolve(458,a,246,a)].

given #864 (F,wt=4): 3421 -ZEX(intersection(c32,c32)).  [resolve(1086,a,659,a)].

given #865 (T,wt=3): 1138 leq(c113,c113).  [resolve(778,a,420,a)].

given #866 (T,wt=3): 1157 leq(c114,c114).  [resolve(779,a,420,a)].

given #867 (T,wt=3): 1168 leq(c29,c29).  [resolve(780,a,420,a)].

given #868 (T,wt=3): 1185 PO(c45,c45).  [resolve(787,a,474,a),unit_del(a,788)].

given #869 (A,wt=10): 818 leq(f8(c21,c22),c21) | P(f9(c21,c22),c21).  [resolve(459,a,246,a)].

given #870 (T,wt=3): 1186 Cont(c45,c45).  [resolve(787,a,437,a),unit_del(a,788)].

given #871 (T,wt=3): 1188 leq(c45,c45).  [resolve(787,a,420,a)].

given #872 (T,wt=3): 1203 PO(c163,c163).  [resolve(791,a,474,a),unit_del(a,793)].

given #873 (T,wt=3): 1204 Cont(c163,c163).  [resolve(791,a,437,a),unit_del(a,793)].

given #874 (A,wt=10): 819 Cont(f8(c21,c22),c21) | leq(f9(c21,c22),c22).  [resolve(464,a,246,a)].

given #875 (T,wt=3): 1206 leq(c163,c163).  [resolve(791,a,420,a)].

given #876 (T,wt=3): 1221 PO(c155,c155).  [resolve(792,a,474,a),unit_del(a,794)].

given #877 (T,wt=3): 1222 Cont(c155,c155).  [resolve(792,a,437,a),unit_del(a,794)].

given #878 (T,wt=3): 1224 leq(c155,c155).  [resolve(792,a,420,a)].

given #879 (A,wt=10): 820 Cont(f8(c21,c22),c21) | Cont(f9(c21,c22),c22).  [resolve(466,a,246,a)].

given #880 (T,wt=3): 1238 PO(c145,c145).  [resolve(834,a,474,a),unit_del(a,835)].

given #881 (T,wt=3): 1239 Cont(c145,c145).  [resolve(834,a,437,a),unit_del(a,835)].

given #882 (T,wt=3): 1242 leq(c145,c145).  [resolve(834,a,420,a)].

given #883 (T,wt=3): 1256 PO(c47,c47).  [resolve(838,a,474,a),unit_del(a,839)].

given #884 (A,wt=10): 821 Cont(f8(c21,c22),c21) | P(f9(c21,c22),c21).  [resolve(467,a,246,a)].

given #885 (T,wt=3): 1257 Cont(c47,c47).  [resolve(838,a,437,a),unit_del(a,839)].

given #886 (T,wt=3): 1260 leq(c47,c47).  [resolve(838,a,420,a)].

given #887 (T,wt=3): 1334 sf_linear_ring(f20(c121)).  [resolve(890,a,623,a)].

given #888 (T,wt=3): 1506 C(c142,c141).  [resolve(761,a,393,a)].

given #889 (A,wt=10): 822 P(f8(c21,c22),c22) | leq(f9(c21,c22),c22).  [resolve(468,a,246,a)].

given #890 (F,wt=4): 3606 -ZEX(intersection(c142,c141)).  [resolve(1506,a,659,a)].

given #891 (T,wt=3): 1526 leq(c139,c139).  [resolve(1039,a,420,a)].

given #892 (T,wt=3): 1557 leq(c19,c19).  [resolve(1063,a,420,a)].

given #893 (T,wt=3): 1573 C(c141,c141).  [resolve(764,a,704,b)].

given #894 (T,wt=3): 1607 C(c142,c142).  [resolve(765,a,704,b)].

given #895 (A,wt=10): 823 P(f8(c21,c22),c22) | Cont(f9(c21,c22),c22).  [resolve(470,a,246,a)].

given #896 (F,wt=4): 3630 -ZEX(intersection(c141,c141)).  [resolve(1573,a,659,a)].

given #897 (F,wt=4): 3634 -ZEX(intersection(c142,c142)).  [resolve(1607,a,659,a)].

given #898 (T,wt=3): 1746 leq(c15,c15).  [resolve(1271,a,420,a)].

given #899 (T,wt=3): 1764 leq(c16,c16).  [resolve(1281,a,420,a)].

given #900 (T,wt=3): 1812 leq(c125,c125).  [resolve(1298,a,420,a)].

given #901 (T,wt=3): 1830 leq(c49,c49).  [resolve(1310,a,420,a)].

given #902 (A,wt=10): 824 P(f8(c21,c22),c22) | P(f9(c21,c22),c21).  [resolve(471,a,246,a)].

given #903 (T,wt=3): 1848 leq(c91,c91).  [resolve(1319,a,420,a)].

given #904 (T,wt=3): 1866 leq(c57,c57).  [resolve(1328,a,420,a)].

given #905 (T,wt=3): 1901 geq(c104,c103).  [resolve(774,a,508,b)].

given #906 (T,wt=3): 1906 EqDim(c104,c103).  [resolve(774,a,416,c),unit_del(b,775)].

given #907 (A,wt=12): 825 Inc(c114,x) | EqDim(c113,c114) | -Cont(c113,c114) | -P(c113,x).  [resolve(472,b,338,a)].

given #908 (F,wt=3): 3683 -lt(c104,c103).  [resolve(1906,a,510,b)].

given #909 (F,wt=3): 3684 -BCont(c104,c103).  [resolve(1906,a,492,b)].

given #910 (F,wt=3): 3685 -Inc(c104,c103).  [resolve(1906,a,452,a)].

given #911 (F,wt=9): 3687 -SC(x,c103) | -Cont(c104,x) | -Cont(c104,c103).  [resolve(1906,a,410,d)].

given #912 (T,wt=3): 1926 leq(c127,c127).  [resolve(1369,a,420,a)].

given #913 (T,wt=3): 1944 leq(c128,c128).  [resolve(1379,a,420,a)].

given #914 (T,wt=3): 1962 leq(c77,c77).  [resolve(1389,a,420,a)].

given #915 (T,wt=3): 1965 geq(c103,c104).  [resolve(775,a,508,b)].

given #916 (A,wt=12): 826 Inc(x,c114) | EqDim(c113,c114) | -Cont(c113,c114) | -P(c113,x).  [resolve(473,b,338,a)].

given #917 (F,wt=9): 3688 -SC(c103,x) | -Cont(c104,c103) | -Cont(c104,x).  [resolve(1906,a,408,d)].

given #918 (T,wt=3): 1985 leq(c78,c78).  [resolve(1399,a,420,a)].

given #919 (T,wt=3): 2003 leq(c81,c81).  [resolve(1423,a,420,a)].

given #920 (T,wt=3): 2021 leq(c82,c82).  [resolve(1433,a,420,a)].

given #921 (T,wt=3): 2039 leq(c65,c65).  [resolve(1443,a,420,a)].

given #922 (A,wt=5): 827 ZEX(c137) | PO(c137,c137).  [resolve(474,a,362,a)].

given #923 (T,wt=3): 2057 leq(c66,c66).  [resolve(1453,a,420,a)].

given #924 (T,wt=3): 2075 leq(c107,c107).  [resolve(1481,a,420,a)].

given #925 (T,wt=3): 2093 leq(c108,c108).  [resolve(1491,a,420,a)].

given #926 (T,wt=3): 2113 leq(c95,c95).  [resolve(1509,a,420,a)].

given #927 (A,wt=5): 830 P(f10(c159,c160),c159).  [resolve(477,a,384,a)].

given #928 (T,wt=3): 2130 leq(c89,c89).  [resolve(1510,a,420,a)].

given #929 (T,wt=3): 2132 EqDim(c137,c137).  [resolve(781,a,703,b)].

given #930 (T,wt=3): 2135 geq(c137,c137).  [resolve(781,a,508,b)].

given #931 (T,wt=3): 2164 leq(c75,c75).  [resolve(1540,a,420,a)].

given #932 (A,wt=5): 831 P(f10(c159,c160),c160).  [resolve(478,a,384,a)].

given #933 (F,wt=3): 3750 -lt(c137,c137).  [resolve(2132,a,510,b)].

given #934 (F,wt=3): 3751 -BCont(c137,c137).  [resolve(2132,a,492,b)].

given #935 (F,wt=9): 3753 -SC(x,c137) | -Cont(c137,x) | -Cont(c137,c137).  [resolve(2132,a,410,d)].

given #936 (F,wt=9): 3754 -SC(c137,x) | -Cont(c137,c137) | -Cont(c137,x).  [resolve(2132,a,408,d)].

given #937 (T,wt=3): 2193 leq(c9,c9).  [resolve(1569,a,420,a)].

given #938 (T,wt=3): 2214 PO(c59,c59).  [resolve(1596,a,474,a),unit_del(a,1595)].

given #939 (T,wt=3): 2215 Cont(c59,c59).  [resolve(1596,a,437,a),unit_del(a,1595)].

given #940 (T,wt=3): 2217 leq(c59,c59).  [resolve(1596,a,420,a)].

given #941 (A,wt=6): 832 PO(c26,x) | -P(c25,x).  [resolve(479,b,250,a)].

given #942 (T,wt=3): 2232 PO(c69,c69).  [resolve(1603,a,474,a),unit_del(a,1602)].

given #943 (T,wt=3): 2233 Cont(c69,c69).  [resolve(1603,a,437,a),unit_del(a,1602)].

given #944 (T,wt=3): 2235 leq(c69,c69).  [resolve(1603,a,420,a)].

given #945 (T,wt=3): 2262 PO(c157,c157).  [resolve(1776,a,474,a),unit_del(a,2200)].

given #946 (A,wt=6): 833 PO(x,c26) | -P(c25,x).  [resolve(479,c,250,a)].

given #947 (T,wt=3): 2263 Cont(c157,c157).  [resolve(1776,a,437,a),unit_del(a,2200)].

given #948 (T,wt=3): 2265 leq(c157,c157).  [resolve(1776,a,420,a)].

given #949 (T,wt=3): 2266 leq(c29,c157).  [resolve(785,a,1776,a)].

given #950 (T,wt=3): 2267 leq(c29,c69).  [resolve(785,a,1603,a)].

given #951 (A,wt=8): 837 Max(c137) | ZEX(c137) | PP(c137,f11(c137)).  [resolve(483,b,362,a)].

given #952 (T,wt=3): 2268 leq(c29,c59).  [resolve(785,a,1596,a)].

given #953 (T,wt=3): 2269 leq(c29,c9).  [resolve(785,a,1569,a)].

given #954 (T,wt=3): 2270 leq(c29,c75).  [resolve(785,a,1540,a)].

given #955 (T,wt=3): 2271 leq(c29,c89).  [resolve(785,a,1510,a)].

given #956 (A,wt=8): 841 Min(c137) | ZEX(c137) | PP(f12(c137),c137).  [resolve(487,b,362,a)].

given #957 (T,wt=3): 2272 leq(c29,c95).  [resolve(785,a,1509,a)].

given #958 (T,wt=3): 2273 leq(c29,c108).  [resolve(785,a,1491,a)].

given #959 (T,wt=3): 2274 leq(c29,c107).  [resolve(785,a,1481,a)].

given #960 (T,wt=3): 2275 leq(c29,c66).  [resolve(785,a,1453,a)].

given #961 (A,wt=17): 846 -Min(c141) | -P(c141,x) | -Cont(c142,x) | -Cont(y,c141) | -Cont(y,c142) | BCont(y,c141).  [resolve(493,a,366,a)].

given #962 (T,wt=3): 2276 leq(c29,c65).  [resolve(785,a,1443,a)].

given #963 (T,wt=3): 2277 leq(c29,c82).  [resolve(785,a,1433,a)].

given #964 (T,wt=3): 2278 leq(c29,c81).  [resolve(785,a,1423,a)].

given #965 (T,wt=3): 2279 leq(c29,c78).  [resolve(785,a,1399,a)].

given #966 (A,wt=14): 847 -Min(c141) | -P(c141,c141) | -Cont(c142,c141) | -Cont(c142,c142) | BCont(c142,c141).  [factor(846,c,d)].

given #967 (T,wt=3): 2280 leq(c29,c77).  [resolve(785,a,1389,a)].

given #968 (T,wt=3): 2281 leq(c29,c128).  [resolve(785,a,1379,a)].

given #969 (T,wt=3): 2282 leq(c29,c127).  [resolve(785,a,1369,a)].

given #970 (T,wt=3): 2283 leq(c29,c57).  [resolve(785,a,1328,a)].

given #971 (A,wt=14): 848 -Min(c141) | -P(c141,c142) | -Cont(c142,c142) | -Cont(c142,c141) | BCont(c142,c141).  [factor(846,c,e)].

given #972 (T,wt=3): 2284 leq(c29,c91).  [resolve(785,a,1319,a)].

given #973 (T,wt=3): 2285 leq(c29,c49).  [resolve(785,a,1310,a)].

given #974 (T,wt=3): 2286 leq(c29,c125).  [resolve(785,a,1298,a)].

given #975 (T,wt=3): 2287 leq(c29,c16).  [resolve(785,a,1281,a)].

given #976 (A,wt=12): 850 -BCont(x,c25) | P(f13(x,c25,c26),c26) | BCont(x,c26).  [resolve(495,b,250,a)].

given #977 (T,wt=3): 2288 leq(c29,c15).  [resolve(785,a,1271,a)].

given #978 (T,wt=3): 2289 leq(c29,c19).  [resolve(785,a,1063,a)].

given #979 (T,wt=3): 2290 leq(c29,c139).  [resolve(785,a,1039,a)].

given #980 (T,wt=3): 2291 leq(c29,c47).  [resolve(785,a,838,a)].

given #981 (A,wt=12): 851 -BCont(x,c25) | P(f14(x,c25,c26),x) | BCont(x,c26).  [resolve(497,b,250,a)].

given #982 (T,wt=3): 2292 leq(c29,c145).  [resolve(785,a,834,a)].

given #983 (T,wt=3): 2293 leq(c29,c155).  [resolve(785,a,792,a)].

given #984 (T,wt=3): 2294 leq(c29,c163).  [resolve(785,a,791,a)].

given #985 (T,wt=3): 2295 leq(c29,c45).  [resolve(785,a,787,a)].

given #986 (A,wt=15): 852 -BCont(x,c25) | Cont(f14(x,c25,c26),f13(x,c25,c26)) | BCont(x,c26).  [resolve(498,b,250,a)].

given #987 (T,wt=3): 2296 leq(c29,c114).  [resolve(785,a,779,a)].

given #988 (T,wt=3): 2297 leq(c29,c113).  [resolve(785,a,778,a)].

given #989 (T,wt=3): 2298 leq(c29,c35).  [resolve(785,a,750,a)].

given #990 (T,wt=3): 2299 leq(c29,c137).  [resolve(785,a,362,a)].

given #991 (A,wt=6): 853 -Cont(x,c99) | BCont(x,c100).  [resolve(499,a,324,a)].

given #992 (T,wt=3): 2300 leq(c29,c41).  [resolve(1785,a,785,a)].

given #993 (T,wt=3): 2317 leq(c41,c41).  [resolve(1785,a,420,a)].

given #994 (T,wt=3): 2318 leq(c29,c131).  [resolve(1794,a,785,a)].

given #995 (T,wt=3): 2335 leq(c131,c131).  [resolve(1794,a,420,a)].

given #996 (A,wt=7): 856 Covers(c2,c1) | S(f15(c2,c1)).  [resolve(502,b,226,a)].

given #997 (T,wt=3): 2342 geq(c32,c31).  [resolve(786,a,508,b)].

given #998 (T,wt=3): 2365 leq(c131,c45).  [resolve(789,a,1794,a)].

given #999 (T,wt=3): 2366 leq(c41,c45).  [resolve(789,a,1785,a)].

given #1000 (T,wt=3): 2367 leq(c157,c45).  [resolve(789,a,1776,a)].

given #1001 (A,wt=8): 857 Covers(c2,c1) | lt(c1,f15(c2,c1)).  [resolve(503,b,226,a)].

given #1002 (T,wt=3): 2368 leq(c69,c45).  [resolve(789,a,1603,a)].

given #1003 (T,wt=3): 2369 leq(c59,c45).  [resolve(789,a,1596,a)].

given #1004 (T,wt=3): 2370 leq(c9,c45).  [resolve(789,a,1569,a)].

given #1005 (T,wt=3): 2371 leq(c75,c45).  [resolve(789,a,1540,a)].

given #1006 (A,wt=8): 858 Covers(c2,c1) | lt(f15(c2,c1),c2).  [resolve(504,b,226,a)].

given #1007 (T,wt=3): 2372 leq(c89,c45).  [resolve(789,a,1510,a)].

given #1008 (T,wt=3): 2373 leq(c95,c45).  [resolve(789,a,1509,a)].

given #1009 (T,wt=3): 2374 leq(c108,c45).  [resolve(789,a,1491,a)].

given #1010 (T,wt=3): 2375 leq(c107,c45).  [resolve(789,a,1481,a)].

given #1011 (A,wt=6): 865 lt(c113,c114) | EqDim(c113,c114).  [resolve(511,b,338,a)].

given #1012 (T,wt=3): 2376 leq(c66,c45).  [resolve(789,a,1453,a)].

given #1013 (T,wt=3): 2377 leq(c65,c45).  [resolve(789,a,1443,a)].

given #1014 (T,wt=3): 2378 leq(c82,c45).  [resolve(789,a,1433,a)].

given #1015 (T,wt=3): 2379 leq(c81,c45).  [resolve(789,a,1423,a)].

given #1016 (A,wt=9): 867 Closed(x) | -Cont(y,f16(x)) | BCont(y,x).  [resolve(513,b,499,a)].

given #1017 (T,wt=3): 2380 leq(c78,c45).  [resolve(789,a,1399,a)].

given #1018 (T,wt=3): 2381 leq(c77,c45).  [resolve(789,a,1389,a)].

given #1019 (T,wt=3): 2382 leq(c128,c45).  [resolve(789,a,1379,a)].

given #1020 (T,wt=3): 2383 leq(c127,c45).  [resolve(789,a,1369,a)].

given #1021 (A,wt=6): 868 Closed(x) | Cont(f16(x),x).  [resolve(513,b,491,a)].

given #1022 (T,wt=3): 2384 leq(c57,c45).  [resolve(789,a,1328,a)].

given #1023 (T,wt=3): 2385 leq(c91,c45).  [resolve(789,a,1319,a)].

given #1024 (T,wt=3): 2386 leq(c49,c45).  [resolve(789,a,1310,a)].

given #1025 (T,wt=3): 2387 leq(c125,c45).  [resolve(789,a,1298,a)].

given #1026 (A,wt=6): 877 sf_multi_point(c57) | sf_multi_curve(c57) | sf_multi_surface(c57).  [resolve(522,a,282,a)].

given #1027 (T,wt=3): 2388 leq(c16,c45).  [resolve(789,a,1281,a)].

given #1028 (T,wt=3): 2389 leq(c15,c45).  [resolve(789,a,1271,a)].

given #1029 (T,wt=3): 2390 leq(c19,c45).  [resolve(789,a,1063,a)].

given #1030 (T,wt=3): 2391 leq(c139,c45).  [resolve(789,a,1039,a)].

given #1031 (A,wt=8): 883 sf_point(c35) | sf_curve(c35) | sf_surface(c35) | sf_geometry_collection(c35).  [resolve(528,a,260,a)].

given #1032 (T,wt=3): 2392 leq(c47,c45).  [resolve(789,a,838,a)].

given #1033 (T,wt=3): 2393 leq(c145,c45).  [resolve(789,a,834,a)].

given #1034 (T,wt=3): 2394 leq(c155,c45).  [resolve(789,a,792,a)].

given #1035 (T,wt=3): 2395 leq(c163,c45).  [resolve(789,a,791,a)].

given #1036 (A,wt=4): 892 sf_triangle(c111) | -sf_polygon(c111).  [resolve(537,c,336,a)].

given #1037 (T,wt=3): 2396 leq(c114,c45).  [resolve(789,a,779,a)].

given #1038 (T,wt=3): 2397 leq(c113,c45).  [resolve(789,a,778,a)].

given #1039 (T,wt=3): 2398 leq(c35,c45).  [resolve(789,a,750,a)].

given #1040 (T,wt=3): 2399 leq(c137,c45).  [resolve(789,a,362,a)].

given #1041 (A,wt=13): 904 sf_overlaps(c159,c160) | -sf_geometry(c159) | -sf_geometry(c160) | P(c159,c160) | P(c160,c159).  [resolve(549,d,384,a)].

given #1042 (T,wt=3): 2409 leq(c93,c45).  [resolve(1884,a,789,a)].

given #1043 (T,wt=3): 2410 leq(c29,c93).  [resolve(1884,a,785,a)].

given #1044 (T,wt=3): 2428 leq(c93,c93).  [resolve(1884,a,420,a)].

given #1045 (T,wt=3): 2448 leq(c117,c45).  [resolve(1898,a,789,a)].

given #1046 (A,wt=15): 909 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c77) | SC(c77,c78).  [resolve(554,a,302,a)].

given #1047 (T,wt=3): 2449 leq(c29,c117).  [resolve(1898,a,785,a)].

given #1048 (T,wt=3): 2467 leq(c117,c117).  [resolve(1898,a,420,a)].

given #1049 (T,wt=3): 2468 leq(c104,c45).  [resolve(1904,a,789,a)].

given #1050 (T,wt=3): 2469 leq(c29,c104).  [resolve(1904,a,785,a)].

given #1051 (A,wt=14): 910 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c77) | Curve(c77).  [resolve(555,a,302,a)].

given #1052 (T,wt=3): 2487 leq(c104,c104).  [resolve(1904,a,420,a)].

given #1053 (T,wt=3): 2489 leq(c103,c45).  [resolve(1905,a,789,a)].

given #1054 (T,wt=3): 2490 leq(c29,c103).  [resolve(1905,a,785,a)].

given #1055 (T,wt=3): 2508 leq(c103,c103).  [resolve(1905,a,420,a)].

given #1056 (A,wt=14): 911 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c77) | Curve(c78).  [resolve(556,a,302,a)].

given #1057 (T,wt=3): 2525 leq(c163,c157).  [resolve(795,a,1776,a),unit_del(a,2200)].

given #1058 (T,wt=3): 2526 leq(c163,c69).  [resolve(795,a,1603,a),unit_del(a,1602)].

given #1059 (T,wt=3): 2527 leq(c163,c59).  [resolve(795,a,1596,a),unit_del(a,1595)].

given #1060 (T,wt=3): 2550 leq(c163,c47).  [resolve(795,a,838,a),unit_del(a,839)].

given #1061 (A,wt=15): 912 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c78) | SC(c77,c78).  [resolve(557,a,302,a)].

given #1062 (T,wt=3): 2551 leq(c163,c145).  [resolve(795,a,834,a),unit_del(a,835)].

given #1063 (T,wt=3): 2552 leq(c163,c155).  [resolve(795,a,792,a),unit_del(a,794)].

given #1064 (T,wt=3): 2558 leq(c61,c45).  [resolve(2097,a,789,a)].

given #1065 (T,wt=3): 2559 leq(c29,c61).  [resolve(2097,a,785,a)].

given #1066 (A,wt=14): 913 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c78) | Curve(c77).  [resolve(558,a,302,a)].

given #1067 (T,wt=3): 2575 leq(c61,c61).  [resolve(2097,a,420,a)].

given #1068 (T,wt=3): 2602 leq(c155,c157).  [resolve(796,a,1776,a),unit_del(a,2200)].

given #1069 (T,wt=3): 2603 leq(c155,c69).  [resolve(796,a,1603,a),unit_del(a,1602)].

given #1070 (T,wt=3): 2604 leq(c155,c59).  [resolve(796,a,1596,a),unit_del(a,1595)].

given #1071 (A,wt=14): 914 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c78) | Curve(c78).  [resolve(559,a,302,a)].

given #1072 (T,wt=3): 2627 leq(c155,c47).  [resolve(796,a,838,a),unit_del(a,839)].

given #1073 (T,wt=3): 2628 leq(c155,c145).  [resolve(796,a,834,a),unit_del(a,835)].

given #1074 (T,wt=3): 2629 leq(c155,c163).  [resolve(796,a,791,a),unit_del(a,793)].

given #1075 (T,wt=3): 2678 leq(c39,c45).  [resolve(2239,a,789,a)].

given #1076 (A,wt=15): 915 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c77) | SC(c77,c78).  [resolve(560,a,302,a)].

given #1077 (T,wt=3): 2679 leq(c29,c39).  [resolve(2239,a,785,a)].

given #1078 (T,wt=3): 2696 leq(c39,c39).  [resolve(2239,a,420,a)].

given #1079 (T,wt=3): 2699 leq(c43,c45).  [resolve(2337,a,789,a)].

given #1080 (T,wt=3): 2700 leq(c29,c43).  [resolve(2337,a,785,a)].

given #1081 (A,wt=14): 916 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c77) | Curve(c77).  [resolve(561,a,302,a)].

given #1082 (T,wt=3): 2717 leq(c43,c43).  [resolve(2337,a,420,a)].

given #1083 (T,wt=3): 2718 leq(c155,c32).  [resolve(2347,a,796,a),unit_del(a,802)].

given #1084 (T,wt=3): 2719 leq(c163,c32).  [resolve(2347,a,795,a),unit_del(a,802)].

given #1085 (T,wt=3): 2720 leq(c32,c45).  [resolve(2347,a,789,a)].

given #1086 (A,wt=14): 917 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c77) | Curve(c78).  [resolve(562,a,302,a)].

given #1087 (T,wt=3): 2721 leq(c29,c32).  [resolve(2347,a,785,a)].

given #1088 (T,wt=3): 2734 PO(c32,c32).  [resolve(2347,a,474,a),unit_del(a,802)].

given #1089 (T,wt=3): 2735 Cont(c32,c32).  [resolve(2347,a,437,a),unit_del(a,802)].

given #1090 (T,wt=3): 2738 leq(c32,c32).  [resolve(2347,a,420,a)].

given #1091 (A,wt=15): 918 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c78) | SC(c77,c78).  [resolve(563,a,302,a)].

given #1092 (T,wt=3): 2741 leq(c155,c31).  [resolve(2348,a,796,a),unit_del(a,803)].

given #1093 (T,wt=3): 2742 leq(c163,c31).  [resolve(2348,a,795,a),unit_del(a,803)].

given #1094 (T,wt=3): 2743 leq(c31,c45).  [resolve(2348,a,789,a)].

given #1095 (T,wt=3): 2744 leq(c29,c31).  [resolve(2348,a,785,a)].

given #1096 (A,wt=14): 919 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c78) | Curve(c77).  [resolve(564,a,302,a)].

given #1097 (T,wt=3): 2758 PO(c31,c31).  [resolve(2348,a,474,a),unit_del(a,803)].

given #1098 (T,wt=3): 2759 Cont(c31,c31).  [resolve(2348,a,437,a),unit_del(a,803)].

given #1099 (T,wt=3): 2762 leq(c31,c31).  [resolve(2348,a,420,a)].

given #1100 (T,wt=3): 2764 sf_contains(c31,c32).  [back_unit_del(2740),unit_del(b,2763)].

given #1101 (A,wt=14): 920 Inc(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c78) | Curve(c78).  [resolve(565,a,302,a)].

given #1102 (T,wt=3): 2789 leq(c111,c45).  [resolve(2408,a,789,a)].

given #1103 (T,wt=3): 2790 leq(c29,c111).  [resolve(2408,a,785,a)].

given #1104 (T,wt=3): 2808 leq(c111,c111).  [resolve(2408,a,420,a)].

given #1105 (T,wt=3): 2811 leq(c55,c45).  [resolve(2437,a,789,a)].

given #1106 (A,wt=15): 921 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c77) | SC(c77,c78).  [resolve(566,a,302,a)].

given #1107 (T,wt=3): 2812 leq(c29,c55).  [resolve(2437,a,785,a)].

given #1108 (T,wt=3): 2828 leq(c55,c55).  [resolve(2437,a,420,a)].

given #1109 (T,wt=3): 2831 leq(c97,c45).  [resolve(2446,a,789,a)].

given #1110 (T,wt=3): 2832 leq(c29,c97).  [resolve(2446,a,785,a)].

given #1111 (A,wt=12): 922 -Cont(c77,c78) | -Cont(c77,c77) | lt(c77,c77) | SC(c77,c78).  [factor(921,a,c)].

given #1112 (T,wt=3): 2850 leq(c97,c97).  [resolve(2446,a,420,a)].

given #1113 (T,wt=3): 2871 leq(c123,c45).  [resolve(2518,a,789,a)].

given #1114 (T,wt=3): 2872 leq(c29,c123).  [resolve(2518,a,785,a)].

given #1115 (T,wt=3): 2890 leq(c123,c123).  [resolve(2518,a,420,a)].

given #1116 (A,wt=14): 923 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c77) | Curve(c77).  [resolve(567,a,302,a)].

given #1117 (T,wt=3): 2920 leq(c121,c45).  [resolve(2778,a,789,a)].

given #1118 (T,wt=3): 2921 leq(c29,c121).  [resolve(2778,a,785,a)].

given #1119 (T,wt=3): 2937 leq(c121,c121).  [resolve(2778,a,420,a)].

given #1120 (T,wt=3): 2939 C(c26,c26).  [resolve(804,a,704,b)].

given #1121 (A,wt=11): 924 -Cont(c77,c78) | -Cont(c77,c77) | lt(c77,c77) | Curve(c77).  [factor(923,a,c)].

given #1122 (F,wt=4): 5149 -ZEX(intersection(c26,c26)).  [resolve(2939,a,659,a)].

given #1123 (T,wt=3): 2953 leq(c25,c26).  [resolve(804,a,424,a)].

given #1124 (T,wt=2): 5157 S(c26).  [resolve(2953,a,418,a)].

given #1125 (T,wt=2): 5158 S(c25).  [resolve(2953,a,417,a)].

given #1126 (T,wt=2): 5180 sf_geometry(c26).  [resolve(5157,a,389,b)].

given #1127 (A,wt=14): 925 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c77) | Curve(c78).  [resolve(568,a,302,a)].

given #1128 (T,wt=2): 5205 sf_geometry(c25).  [resolve(5158,a,389,b)].

given #1129 (T,wt=3): 2961 leq(c26,c25).  [resolve(805,a,415,a)].

given #1130 (T,wt=3): 2978 EqDim(c160,c159).  [resolve(828,a,476,a)].

given #1131 (T,wt=3): 2983 leq(c160,c159).  [resolve(829,a,415,a)].

given #1132 (A,wt=11): 926 -Cont(c77,c78) | -Cont(c77,c77) | lt(c77,c77) | Curve(c78).  [factor(925,a,c)].

given #1133 (F,wt=3): 5231 -lt(c160,c159).  [resolve(2978,a,510,b)].

given #1134 (F,wt=3): 5232 -BCont(c160,c159).  [resolve(2978,a,492,b)].

given #1135 (F,wt=3): 5233 -Inc(c160,c159).  [resolve(2978,a,452,a)].

given #1136 (F,wt=9): 5235 -SC(x,c159) | -Cont(c160,x) | -Cont(c160,c159).  [resolve(2978,a,410,d)].

given #1137 (T,wt=2): 5242 S(c159).  [resolve(2983,a,418,a)].

given #1138 (T,wt=2): 5243 S(c160).  [resolve(2983,a,417,a)].

given #1139 (T,wt=2): 5265 sf_geometry(c159).  [resolve(5242,a,389,b)].

given #1140 (T,wt=2): 5289 sf_geometry(c160).  [resolve(5243,a,389,b)].

given #1141 (A,wt=15): 927 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c78) | SC(c77,c78).  [resolve(569,a,302,a)].

given #1142 (F,wt=9): 5236 -SC(c159,x) | -Cont(c160,c159) | -Cont(c160,x).  [resolve(2978,a,408,d)].

given #1143 (T,wt=3): 2984 leq(c159,c160).  [resolve(829,a,414,a)].

given #1144 (T,wt=3): 2987 PO(c152,c152).  [resolve(842,a,705,b)].

given #1145 (T,wt=3): 2995 EqDim(c151,c152).  [resolve(842,a,445,a)].

given #1146 (T,wt=3): 2996 Cont(c151,c152).  [resolve(842,a,444,a)].

given #1147 (A,wt=12): 928 -Cont(c77,c78) | -Cont(c77,c77) | lt(c77,c78) | SC(c77,c78).  [factor(927,a,c)].

given #1148 (F,wt=2): 5329 -Point(c152).  [resolve(2996,a,695,b),flip(b),unit_del(b,377)].

given #1149 (F,wt=2): 5336 -ZEX(c151).  [resolve(2996,a,443,b)].

given #1150 (F,wt=2): 5337 -ZEX(c152).  [resolve(2996,a,442,b)].

given #1151 (F,wt=3): 5319 -lt(c151,c152).  [resolve(2995,a,510,b)].

given #1152 (T,wt=3): 3005 C(c100,c100).  [resolve(844,a,704,b)].

given #1153 (T,wt=3): 3019 leq(c99,c100).  [resolve(844,a,424,a)].

given #1154 (T,wt=2): 5357 S(c100).  [resolve(3019,a,418,a)].

given #1155 (T,wt=2): 5358 S(c99).  [resolve(3019,a,417,a)].

given #1156 (A,wt=14): 929 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c78) | Curve(c77).  [resolve(570,a,302,a)].

given #1157 (F,wt=3): 5320 -BCont(c151,c152).  [resolve(2995,a,492,b)].

given #1158 (F,wt=3): 5321 -Inc(c151,c152).  [resolve(2995,a,452,a)].

given #1159 (F,wt=3): 5340 -Cont(c152,c151).  [resolve(2996,a,440,b),flip(b),unit_del(b,377)].

given #1160 (F,wt=4): 5346 -ZEX(intersection(c100,c100)).  [resolve(3005,a,659,a)].

given #1161 (T,wt=2): 5382 sf_geometry(c100).  [resolve(5357,a,389,b)].

given #1162 (T,wt=2): 5408 sf_geometry(c99).  [resolve(5358,a,389,b)].

given #1163 (T,wt=3): 3027 leq(c6,c5).  [resolve(854,a,509,a)].

given #1164 (T,wt=2): 5438 S(c5).  [resolve(3027,a,418,a)].

given #1165 (A,wt=11): 930 -Cont(c77,c78) | -Cont(c77,c77) | lt(c77,c78) | Curve(c77).  [factor(929,a,c)].

given #1166 (F,wt=3): 5442 -lt(c5,c5).  [back_unit_del(3025),unit_del(a,5438)].

given #1167 (F,wt=3): 5443 -lt(c6,c6).  [back_unit_del(3024),unit_del(a,5439)].

given #1168 (F,wt=6): 5324 -SC(x,c152) | -Cont(c151,x).  [resolve(2995,a,410,d),unit_del(c,2996)].

given #1169 (F,wt=6): 5325 -SC(c152,x) | -Cont(c151,x).  [resolve(2995,a,408,d),unit_del(b,2996)].

given #1170 (T,wt=2): 5439 S(c6).  [resolve(3027,a,417,a)].

given #1171 (T,wt=2): 5466 sf_geometry(c5).  [resolve(5438,a,389,b)].

given #1172 (T,wt=2): 5489 sf_geometry(c6).  [resolve(5439,a,389,b)].

given #1173 (T,wt=3): 3028 gt(c5,c6).  [resolve(854,a,506,b)].

given #1174 (A,wt=14): 931 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | lt(x,c78) | Curve(c78).  [resolve(571,a,302,a)].

given #1175 (T,wt=3): 3031 C(c11,c11).  [resolve(807,a,704,b)].

given #1176 (T,wt=3): 3051 leq(c86,c85).  [resolve(859,a,509,a)].

given #1177 (T,wt=2): 5520 S(c85).  [resolve(3051,a,418,a)].

given #1178 (T,wt=2): 5521 S(c86).  [resolve(3051,a,417,a)].

given #1179 (A,wt=11): 932 -Cont(c77,c78) | -Cont(c77,c77) | lt(c77,c78) | Curve(c78).  [factor(931,a,c)].

given #1180 (F,wt=4): 5510 -ZEX(intersection(c11,c11)).  [resolve(3031,a,659,a)].

given #1181 (T,wt=2): 5546 sf_geometry(c85).  [resolve(5520,a,389,b)].

given #1182 (T,wt=2): 5569 sf_geometry(c86).  [resolve(5521,a,389,b)].

given #1183 (T,wt=3): 3069 leq(c51,c45).  [resolve(3063,a,789,a)].

given #1184 (T,wt=3): 3070 leq(c29,c51).  [resolve(3063,a,785,a)].

given #1185 (A,wt=15): 933 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c77) | SC(c77,c78).  [resolve(572,a,302,a)].

given #1186 (T,wt=3): 3088 leq(c51,c51).  [resolve(3063,a,420,a)].

given #1187 (T,wt=3): 3091 C(c12,c12).  [resolve(808,a,704,b)].

given #1188 (T,wt=3): 3111 leq(c52,c45).  [resolve(3064,a,789,a)].

given #1189 (T,wt=3): 3112 leq(c29,c52).  [resolve(3064,a,785,a)].

given #1190 (A,wt=12): 934 -Cont(c77,c78) | -Cont(c77,c77) | -BCont(c77,c77) | SC(c77,c78).  [factor(933,a,c)].

given #1191 (F,wt=4): 5614 -ZEX(intersection(c12,c12)).  [resolve(3091,a,659,a)].

given #1192 (T,wt=3): 3130 leq(c52,c52).  [resolve(3064,a,420,a)].

given #1193 (T,wt=3): 3152 geq(c2,c1).  [resolve(863,a,508,b)].

given #1194 (T,wt=3): 3163 leq(c2,c45).  [resolve(3157,a,789,a)].

given #1195 (T,wt=3): 3164 leq(c29,c2).  [resolve(3157,a,785,a)].

given #1196 (A,wt=14): 935 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c77) | Curve(c77).  [resolve(573,a,302,a)].

given #1197 (T,wt=3): 3182 leq(c2,c2).  [resolve(3157,a,420,a)].

given #1198 (T,wt=3): 3186 leq(c1,c45).  [resolve(3158,a,789,a)].

given #1199 (T,wt=3): 3187 leq(c29,c1).  [resolve(3158,a,785,a)].

given #1200 (T,wt=3): 3205 leq(c1,c1).  [resolve(3158,a,420,a)].

given #1201 (A,wt=11): 936 -Cont(c77,c78) | -Cont(c77,c77) | -BCont(c77,c77) | Curve(c77).  [factor(935,a,c)].

given #1202 (T,wt=3): 3226 C(c16,c16).  [resolve(871,a,704,b)].

given #1203 (T,wt=3): 3239 leq(c15,c16).  [resolve(871,a,424,a)].

given #1204 (T,wt=3): 3244 leq(c155,c15).  [back_unit_del(2624),unit_del(a,3234)].

given #1205 (T,wt=3): 3245 leq(c163,c15).  [back_unit_del(2547),unit_del(a,3234)].

given #1206 (A,wt=14): 937 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c77) | Curve(c78).  [resolve(574,a,302,a)].

given #1207 (F,wt=4): 5691 -ZEX(intersection(c16,c16)).  [resolve(3226,a,659,a)].

given #1208 (T,wt=3): 3248 Cont(c15,c15).  [back_unit_del(1743),unit_del(a,3234)].

given #1209 (T,wt=3): 3249 PO(c15,c15).  [back_unit_del(1742),unit_del(a,3234)].

given #1210 (T,wt=3): 3252 leq(c155,c16).  [back_unit_del(2623),unit_del(a,3235)].

given #1211 (T,wt=3): 3253 leq(c163,c16).  [back_unit_del(2546),unit_del(a,3235)].

given #1212 (A,wt=11): 938 -Cont(c77,c78) | -Cont(c77,c77) | -BCont(c77,c77) | Curve(c78).  [factor(937,a,c)].

given #1213 (T,wt=3): 3256 Cont(c16,c16).  [back_unit_del(1761),unit_del(a,3235)].

given #1214 (T,wt=3): 3257 PO(c16,c16).  [back_unit_del(1760),unit_del(a,3235)].

given #1215 (T,wt=3): 3262 EqDim(c127,c128).  [resolve(901,a,476,a)].

given #1216 (T,wt=3): 3263 PO(c128,c127).  [resolve(901,a,475,a)].

given #1217 (A,wt=15): 939 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c78) | SC(c77,c78).  [resolve(575,a,302,a)].

given #1218 (F,wt=3): 5774 -lt(c127,c128).  [resolve(3262,a,510,b)].

given #1219 (F,wt=3): 5775 -BCont(c127,c128).  [resolve(3262,a,492,b)].

given #1220 (F,wt=3): 5776 -Inc(c127,c128).  [resolve(3262,a,452,a)].

given #1221 (F,wt=3): 5777 -Cont(c127,c128).  [resolve(3262,a,446,c),unit_del(a,902)].

given #1222 (T,wt=3): 3264 Cont(c148,c147).  [resolve(905,a,516,a)].

given #1223 (T,wt=3): 3295 leq(c147,c45).  [resolve(3282,a,789,a)].

given #1224 (T,wt=3): 3296 leq(c29,c147).  [resolve(3282,a,785,a)].

given #1225 (T,wt=3): 3314 leq(c147,c147).  [resolve(3282,a,420,a)].

given #1226 (A,wt=12): 940 -Cont(c77,c78) | -Cont(c77,c77) | -BCont(c77,c78) | SC(c77,c78).  [factor(939,a,c)].

given #1227 (F,wt=2): 5788 -Point(c147).  [resolve(3264,a,695,b),unit_del(b,373)].

given #1228 (F,wt=2): 5794 -ZEX(c148).  [resolve(3264,a,443,b)].

given #1229 (F,wt=2): 5795 -ZEX(c147).  [resolve(3264,a,442,b)].

given #1230 (F,wt=3): 5798 -Cont(c147,c148).  [resolve(3264,a,440,b),unit_del(b,373)].

given #1231 (T,wt=3): 3317 leq(c148,c45).  [resolve(3292,a,789,a)].

given #1232 (T,wt=3): 3318 leq(c29,c148).  [resolve(3292,a,785,a)].

given #1233 (T,wt=3): 3336 leq(c148,c148).  [resolve(3292,a,420,a)].

given #1234 (T,wt=3): 3338 sf_within(c134,c133).  [resolve(990,a,551,b)].

given #1235 (A,wt=14): 941 -Cont(c77,c78) | -Cont(x,c77) | -Cont(x,c78) | -BCont(x,c78) | Curve(c77).  [resolve(576,a,302,a)].

given #1236 (T,wt=3): 3339 Cont(c133,c134).  [resolve(990,a,516,a)].

given #1237 (T,wt=3): 3364 leq(c134,c45).  [resolve(3351,a,789,a)].

given #1238 (T,wt=3): 3365 leq(c29,c134).  [resolve(3351,a,785,a)].

given #1239 (T,wt=3): 3383 leq(c134,c134).  [resolve(3351,a,420,a)].

given #1240 (A,wt=11): 942 -Cont(c77,c78) | -Cont(c77,c77) | -BCont(c77,c78) | Curve(c77).  [factor(941,a,c)].

given #1241 (F,wt=2): 5873 -Point(c134).  [resolve(3339,a,695,b),flip(b),unit_del(b,359)].

given #1242 (F,wt=2): 5879 -ZEX(c133).  [resolve(3339,a,443,b)].

given #1243 (F,wt=2): 5880 -ZEX(c134).  [resolve(3339,a,442,b)].

given #1244 (F,wt=3): 5883 -Cont(c134,c133).  [resolve(3339,a,440,b),flip(b),unit_del(b,359)].

given #1245 (T,wt=3): 3386 leq(c133,c45).  [resolve(3361,a,789,a)].

given #1246 (T,wt=3): 3387 leq(c29,c133).  [resolve(3361,a,785,a)].

given #1247 (T,wt=3): 3405 leq(c133,c133).  [resolve(3361,a,420,a)].

given #1248 (T,wt=3): 3406 sf_contains(c134,c133).  [resolve(991,a,550,a)].
-------- Proof 1 -------- 

============================== PROOF =================================

% Proof 1 at 1.22 (+ 0.27) seconds.
% Length of proof is 18.
% Level of proof is 5.
% Maximum clause weight is 9.
% Given clauses 1248.

97 (exists var133 exists var134 (sf_equals(var133,var134) & var133 != var134)) # label(non_clause).  [assumption].
140 (all x all y (Cont(x,y) & Cont(y,x) -> x = y)) # label(non_clause).  [assumption].
170 (all x all y (sf_contains(x,y) <-> sf_geometry(x) & sf_geometry(y) & Cont(x,y))) # label(non_clause).  [assumption].
187 (all x all y (sf_within(y,x) <-> sf_contains(x,y))) # label(non_clause).  [assumption].
193 (all x all y (sf_equals(x,y) <-> sf_contains(x,y) & sf_within(x,y))) # label(non_clause).  [assumption].
358 sf_equals(c133,c134).  [clausify(97)].
359 c134 != c133.  [clausify(97)].
440 -Cont(x,y) | -Cont(y,x) | y = x.  [clausify(140)].
516 -sf_contains(x,y) | Cont(x,y).  [clausify(170)].
550 -sf_within(x,y) | sf_contains(y,x).  [clausify(187)].
607 -sf_equals(x,y) | sf_contains(x,y).  [clausify(193)].
608 -sf_equals(x,y) | sf_within(x,y).  [clausify(193)].
990 sf_contains(c133,c134).  [resolve(607,a,358,a)].
991 sf_within(c133,c134).  [resolve(608,a,358,a)].
3339 Cont(c133,c134).  [resolve(990,a,516,a)].
3406 sf_contains(c134,c133).  [resolve(991,a,550,a)].
5883 -Cont(c134,c133).  [resolve(3339,a,440,b),flip(b),unit_del(b,359)].
5953 $F.  [resolve(3406,a,516,a),unit_del(a,5883)].

============================== end of proof ==========================

============================== STATISTICS ============================

Given=1248. Generated=7408. Kept=5727. proofs=1.
Usable=1244. Sos=4409. Demods=7. Limbo=0, Disabled=563. Hints=0.
Weight_deleted=0. Literals_deleted=0.
Forward_subsumed=1680. Back_subsumed=6.
Sos_limit_deleted=0. Sos_displaced=0. Sos_removed=0.
New_demodulators=7 (0 lex), Back_demodulated=0. Back_unit_deleted=68.
Demod_attempts=41431. Demod_rewrites=0.
Res_instance_prunes=0. Para_instance_prunes=0. Basic_paramod_prunes=0.
Nonunit_fsub_feature_tests=3878. Nonunit_bsub_feature_tests=1387.
Megabytes=24.35.
User_CPU=1.22, System_CPU=0.27, Wall_clock=2.

============================== end of statistics =====================

============================== end of search =========================

THEOREM PROVED

THEOREM PROVED

Exiting with 1 proof.

------ process 6472 exit (max_proofs) ------

Process 6472 exit (max_proofs) Sun Apr 25 16:29:18 2021

========================== MACLEOD SUMMARY ===========================
reasoner: C:/Users/torsten/macleod/prover9
status: PROOF
execution finished: Sun Apr 25 16:29:22 2021
total CPU time used: 0
The command was "C:/Users/torsten/macleod/prover9 -t600 -f C:\Users\torsten\GitHub\colore\ontologies\simple_features\conversions\sfc_fol_nontrivial.all.p9 C:\Users\torsten\GitHub\colore\ontologies"
============================ end of footer ===========================
